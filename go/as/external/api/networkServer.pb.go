// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/networkServer.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NetworkServer struct {
	// Network-server ID.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Network-server name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Network-server server.
	// Format: hostname:ip (e.g. localhost:8000).
	Server string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	// CA certificate (optional).
	CaCert string `protobuf:"bytes,4,opt,name=ca_cert,json=caCert,proto3" json:"ca_cert,omitempty"`
	// TLS (client) certificate for connecting to the network-server (optional).
	TlsCert string `protobuf:"bytes,5,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`
	// TLS (client) key for connecting to the network-server (optional).
	TlsKey string `protobuf:"bytes,6,opt,name=tls_key,json=tlsKey,proto3" json:"tls_key,omitempty"`
	// Routing-profile ca certificate (used by the network-server to connect
	// back to the application-server) (optional).
	RoutingProfileCaCert string `protobuf:"bytes,7,opt,name=routing_profile_ca_cert,json=routingProfileCACert,proto3" json:"routing_profile_ca_cert,omitempty"`
	// Routing-profile TLS certificate (used by the network-server to connect
	// back to the application-server) (optional).
	RoutingProfileTlsCert string `protobuf:"bytes,8,opt,name=routing_profile_tls_cert,json=routingProfileTLSCert,proto3" json:"routing_profile_tls_cert,omitempty"`
	// Routing-profile TLS key (used by the network-server to connect
	// back to the application-server) (optional).
	RoutingProfileTlsKey string `protobuf:"bytes,9,opt,name=routing_profile_tls_key,json=routingProfileTLSKey,proto3" json:"routing_profile_tls_key,omitempty"`
	// Enable gateway discovery for this network-server.
	GatewayDiscoveryEnabled bool `protobuf:"varint,10,opt,name=gateway_discovery_enabled,json=gatewayDiscoveryEnabled,proto3" json:"gateway_discovery_enabled,omitempty"`
	// The number of times per day the gateway discovery 'ping' must be
	// broadcasted per gateway.
	GatewayDiscoveryInterval uint32 `protobuf:"varint,11,opt,name=gateway_discovery_interval,json=gatewayDiscoveryInterval,proto3" json:"gateway_discovery_interval,omitempty"`
	// The frequency (Hz) of the gateway discovery 'ping'.
	GatewayDiscoveryTxFrequency uint32 `protobuf:"varint,12,opt,name=gateway_discovery_tx_frequency,json=gatewayDiscoveryTXFrequency,proto3" json:"gateway_discovery_tx_frequency,omitempty"`
	// The data-rate of the gateway discovery 'ping'.
	GatewayDiscoveryDr   uint32   `protobuf:"varint,13,opt,name=gateway_discovery_dr,json=gatewayDiscoveryDR,proto3" json:"gateway_discovery_dr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkServer) Reset()         { *m = NetworkServer{} }
func (m *NetworkServer) String() string { return proto.CompactTextString(m) }
func (*NetworkServer) ProtoMessage()    {}
func (*NetworkServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{0}
}

func (m *NetworkServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkServer.Unmarshal(m, b)
}
func (m *NetworkServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkServer.Marshal(b, m, deterministic)
}
func (m *NetworkServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkServer.Merge(m, src)
}
func (m *NetworkServer) XXX_Size() int {
	return xxx_messageInfo_NetworkServer.Size(m)
}
func (m *NetworkServer) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkServer.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkServer proto.InternalMessageInfo

func (m *NetworkServer) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NetworkServer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkServer) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *NetworkServer) GetCaCert() string {
	if m != nil {
		return m.CaCert
	}
	return ""
}

func (m *NetworkServer) GetTlsCert() string {
	if m != nil {
		return m.TlsCert
	}
	return ""
}

func (m *NetworkServer) GetTlsKey() string {
	if m != nil {
		return m.TlsKey
	}
	return ""
}

func (m *NetworkServer) GetRoutingProfileCaCert() string {
	if m != nil {
		return m.RoutingProfileCaCert
	}
	return ""
}

func (m *NetworkServer) GetRoutingProfileTlsCert() string {
	if m != nil {
		return m.RoutingProfileTlsCert
	}
	return ""
}

func (m *NetworkServer) GetRoutingProfileTlsKey() string {
	if m != nil {
		return m.RoutingProfileTlsKey
	}
	return ""
}

func (m *NetworkServer) GetGatewayDiscoveryEnabled() bool {
	if m != nil {
		return m.GatewayDiscoveryEnabled
	}
	return false
}

func (m *NetworkServer) GetGatewayDiscoveryInterval() uint32 {
	if m != nil {
		return m.GatewayDiscoveryInterval
	}
	return 0
}

func (m *NetworkServer) GetGatewayDiscoveryTxFrequency() uint32 {
	if m != nil {
		return m.GatewayDiscoveryTxFrequency
	}
	return 0
}

func (m *NetworkServer) GetGatewayDiscoveryDr() uint32 {
	if m != nil {
		return m.GatewayDiscoveryDr
	}
	return 0
}

type NetworkServerListItem struct {
	// Network-server ID.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Network-server name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Network-server server.
	// Format: hostname:ip (e.g. localhost:8000).
	Server string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NetworkServerListItem) Reset()         { *m = NetworkServerListItem{} }
func (m *NetworkServerListItem) String() string { return proto.CompactTextString(m) }
func (*NetworkServerListItem) ProtoMessage()    {}
func (*NetworkServerListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{1}
}

func (m *NetworkServerListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkServerListItem.Unmarshal(m, b)
}
func (m *NetworkServerListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkServerListItem.Marshal(b, m, deterministic)
}
func (m *NetworkServerListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkServerListItem.Merge(m, src)
}
func (m *NetworkServerListItem) XXX_Size() int {
	return xxx_messageInfo_NetworkServerListItem.Size(m)
}
func (m *NetworkServerListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkServerListItem.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkServerListItem proto.InternalMessageInfo

func (m *NetworkServerListItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NetworkServerListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkServerListItem) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *NetworkServerListItem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *NetworkServerListItem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CreateNetworkServerRequest struct {
	// Network-server object to create.
	NetworkServer        *NetworkServer `protobuf:"bytes,1,opt,name=network_server,json=networkServer,proto3" json:"network_server,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateNetworkServerRequest) Reset()         { *m = CreateNetworkServerRequest{} }
func (m *CreateNetworkServerRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNetworkServerRequest) ProtoMessage()    {}
func (*CreateNetworkServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{2}
}

func (m *CreateNetworkServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNetworkServerRequest.Unmarshal(m, b)
}
func (m *CreateNetworkServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNetworkServerRequest.Marshal(b, m, deterministic)
}
func (m *CreateNetworkServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNetworkServerRequest.Merge(m, src)
}
func (m *CreateNetworkServerRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNetworkServerRequest.Size(m)
}
func (m *CreateNetworkServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNetworkServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNetworkServerRequest proto.InternalMessageInfo

func (m *CreateNetworkServerRequest) GetNetworkServer() *NetworkServer {
	if m != nil {
		return m.NetworkServer
	}
	return nil
}

type CreateNetworkServerResponse struct {
	// Network-server ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNetworkServerResponse) Reset()         { *m = CreateNetworkServerResponse{} }
func (m *CreateNetworkServerResponse) String() string { return proto.CompactTextString(m) }
func (*CreateNetworkServerResponse) ProtoMessage()    {}
func (*CreateNetworkServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{3}
}

func (m *CreateNetworkServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNetworkServerResponse.Unmarshal(m, b)
}
func (m *CreateNetworkServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNetworkServerResponse.Marshal(b, m, deterministic)
}
func (m *CreateNetworkServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNetworkServerResponse.Merge(m, src)
}
func (m *CreateNetworkServerResponse) XXX_Size() int {
	return xxx_messageInfo_CreateNetworkServerResponse.Size(m)
}
func (m *CreateNetworkServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNetworkServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNetworkServerResponse proto.InternalMessageInfo

func (m *CreateNetworkServerResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetNetworkServerRequest struct {
	// Network-server ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkServerRequest) Reset()         { *m = GetNetworkServerRequest{} }
func (m *GetNetworkServerRequest) String() string { return proto.CompactTextString(m) }
func (*GetNetworkServerRequest) ProtoMessage()    {}
func (*GetNetworkServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{4}
}

func (m *GetNetworkServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkServerRequest.Unmarshal(m, b)
}
func (m *GetNetworkServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkServerRequest.Marshal(b, m, deterministic)
}
func (m *GetNetworkServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkServerRequest.Merge(m, src)
}
func (m *GetNetworkServerRequest) XXX_Size() int {
	return xxx_messageInfo_GetNetworkServerRequest.Size(m)
}
func (m *GetNetworkServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkServerRequest proto.InternalMessageInfo

func (m *GetNetworkServerRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetNetworkServerResponse struct {
	// Network-server object.
	NetworkServer *NetworkServer `protobuf:"bytes,1,opt,name=network_server,json=networkServer,proto3" json:"network_server,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// The ChirpStack Network Server version.
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// The ChirpStack Network Server region configured.
	Region               string   `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNetworkServerResponse) Reset()         { *m = GetNetworkServerResponse{} }
func (m *GetNetworkServerResponse) String() string { return proto.CompactTextString(m) }
func (*GetNetworkServerResponse) ProtoMessage()    {}
func (*GetNetworkServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{5}
}

func (m *GetNetworkServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNetworkServerResponse.Unmarshal(m, b)
}
func (m *GetNetworkServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNetworkServerResponse.Marshal(b, m, deterministic)
}
func (m *GetNetworkServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNetworkServerResponse.Merge(m, src)
}
func (m *GetNetworkServerResponse) XXX_Size() int {
	return xxx_messageInfo_GetNetworkServerResponse.Size(m)
}
func (m *GetNetworkServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNetworkServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNetworkServerResponse proto.InternalMessageInfo

func (m *GetNetworkServerResponse) GetNetworkServer() *NetworkServer {
	if m != nil {
		return m.NetworkServer
	}
	return nil
}

func (m *GetNetworkServerResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *GetNetworkServerResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *GetNetworkServerResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GetNetworkServerResponse) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type UpdateNetworkServerRequest struct {
	// Network-server object to update.
	NetworkServer        *NetworkServer `protobuf:"bytes,1,opt,name=network_server,json=networkServer,proto3" json:"network_server,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateNetworkServerRequest) Reset()         { *m = UpdateNetworkServerRequest{} }
func (m *UpdateNetworkServerRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateNetworkServerRequest) ProtoMessage()    {}
func (*UpdateNetworkServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{6}
}

func (m *UpdateNetworkServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateNetworkServerRequest.Unmarshal(m, b)
}
func (m *UpdateNetworkServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateNetworkServerRequest.Marshal(b, m, deterministic)
}
func (m *UpdateNetworkServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateNetworkServerRequest.Merge(m, src)
}
func (m *UpdateNetworkServerRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateNetworkServerRequest.Size(m)
}
func (m *UpdateNetworkServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateNetworkServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateNetworkServerRequest proto.InternalMessageInfo

func (m *UpdateNetworkServerRequest) GetNetworkServer() *NetworkServer {
	if m != nil {
		return m.NetworkServer
	}
	return nil
}

type DeleteNetworkServerRequest struct {
	// Network-server ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNetworkServerRequest) Reset()         { *m = DeleteNetworkServerRequest{} }
func (m *DeleteNetworkServerRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNetworkServerRequest) ProtoMessage()    {}
func (*DeleteNetworkServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{7}
}

func (m *DeleteNetworkServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNetworkServerRequest.Unmarshal(m, b)
}
func (m *DeleteNetworkServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNetworkServerRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNetworkServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNetworkServerRequest.Merge(m, src)
}
func (m *DeleteNetworkServerRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNetworkServerRequest.Size(m)
}
func (m *DeleteNetworkServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNetworkServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNetworkServerRequest proto.InternalMessageInfo

func (m *DeleteNetworkServerRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListNetworkServerRequest struct {
	// Max number of items to return.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Organization id to filter on.
	OrganizationId       int64    `protobuf:"varint,3,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNetworkServerRequest) Reset()         { *m = ListNetworkServerRequest{} }
func (m *ListNetworkServerRequest) String() string { return proto.CompactTextString(m) }
func (*ListNetworkServerRequest) ProtoMessage()    {}
func (*ListNetworkServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{8}
}

func (m *ListNetworkServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworkServerRequest.Unmarshal(m, b)
}
func (m *ListNetworkServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworkServerRequest.Marshal(b, m, deterministic)
}
func (m *ListNetworkServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworkServerRequest.Merge(m, src)
}
func (m *ListNetworkServerRequest) XXX_Size() int {
	return xxx_messageInfo_ListNetworkServerRequest.Size(m)
}
func (m *ListNetworkServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworkServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworkServerRequest proto.InternalMessageInfo

func (m *ListNetworkServerRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListNetworkServerRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListNetworkServerRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

type ListNetworkServerResponse struct {
	// Total number of network-servers.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Network-servers within the result-set.
	Result               []*NetworkServerListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ListNetworkServerResponse) Reset()         { *m = ListNetworkServerResponse{} }
func (m *ListNetworkServerResponse) String() string { return proto.CompactTextString(m) }
func (*ListNetworkServerResponse) ProtoMessage()    {}
func (*ListNetworkServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{9}
}

func (m *ListNetworkServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNetworkServerResponse.Unmarshal(m, b)
}
func (m *ListNetworkServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNetworkServerResponse.Marshal(b, m, deterministic)
}
func (m *ListNetworkServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNetworkServerResponse.Merge(m, src)
}
func (m *ListNetworkServerResponse) XXX_Size() int {
	return xxx_messageInfo_ListNetworkServerResponse.Size(m)
}
func (m *ListNetworkServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNetworkServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNetworkServerResponse proto.InternalMessageInfo

func (m *ListNetworkServerResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListNetworkServerResponse) GetResult() []*NetworkServerListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetADRAlgorithmsRequest struct {
	// Network-server ID.
	NetworkServerId      int64    `protobuf:"varint,1,opt,name=network_server_id,json=networkServerId,proto3" json:"network_server_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetADRAlgorithmsRequest) Reset()         { *m = GetADRAlgorithmsRequest{} }
func (m *GetADRAlgorithmsRequest) String() string { return proto.CompactTextString(m) }
func (*GetADRAlgorithmsRequest) ProtoMessage()    {}
func (*GetADRAlgorithmsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{10}
}

func (m *GetADRAlgorithmsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetADRAlgorithmsRequest.Unmarshal(m, b)
}
func (m *GetADRAlgorithmsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetADRAlgorithmsRequest.Marshal(b, m, deterministic)
}
func (m *GetADRAlgorithmsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetADRAlgorithmsRequest.Merge(m, src)
}
func (m *GetADRAlgorithmsRequest) XXX_Size() int {
	return xxx_messageInfo_GetADRAlgorithmsRequest.Size(m)
}
func (m *GetADRAlgorithmsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetADRAlgorithmsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetADRAlgorithmsRequest proto.InternalMessageInfo

func (m *GetADRAlgorithmsRequest) GetNetworkServerId() int64 {
	if m != nil {
		return m.NetworkServerId
	}
	return 0
}

type GetADRAlgorithmsResponse struct {
	AdrAlgorithms        []*ADRAlgorithm `protobuf:"bytes,1,rep,name=adr_algorithms,json=adrAlgorithms,proto3" json:"adr_algorithms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetADRAlgorithmsResponse) Reset()         { *m = GetADRAlgorithmsResponse{} }
func (m *GetADRAlgorithmsResponse) String() string { return proto.CompactTextString(m) }
func (*GetADRAlgorithmsResponse) ProtoMessage()    {}
func (*GetADRAlgorithmsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{11}
}

func (m *GetADRAlgorithmsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetADRAlgorithmsResponse.Unmarshal(m, b)
}
func (m *GetADRAlgorithmsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetADRAlgorithmsResponse.Marshal(b, m, deterministic)
}
func (m *GetADRAlgorithmsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetADRAlgorithmsResponse.Merge(m, src)
}
func (m *GetADRAlgorithmsResponse) XXX_Size() int {
	return xxx_messageInfo_GetADRAlgorithmsResponse.Size(m)
}
func (m *GetADRAlgorithmsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetADRAlgorithmsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetADRAlgorithmsResponse proto.InternalMessageInfo

func (m *GetADRAlgorithmsResponse) GetAdrAlgorithms() []*ADRAlgorithm {
	if m != nil {
		return m.AdrAlgorithms
	}
	return nil
}

type ADRAlgorithm struct {
	// ADR algorithm ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ADR algorithm name.
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADRAlgorithm) Reset()         { *m = ADRAlgorithm{} }
func (m *ADRAlgorithm) String() string { return proto.CompactTextString(m) }
func (*ADRAlgorithm) ProtoMessage()    {}
func (*ADRAlgorithm) Descriptor() ([]byte, []int) {
	return fileDescriptor_12c681e00a45db98, []int{12}
}

func (m *ADRAlgorithm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADRAlgorithm.Unmarshal(m, b)
}
func (m *ADRAlgorithm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADRAlgorithm.Marshal(b, m, deterministic)
}
func (m *ADRAlgorithm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADRAlgorithm.Merge(m, src)
}
func (m *ADRAlgorithm) XXX_Size() int {
	return xxx_messageInfo_ADRAlgorithm.Size(m)
}
func (m *ADRAlgorithm) XXX_DiscardUnknown() {
	xxx_messageInfo_ADRAlgorithm.DiscardUnknown(m)
}

var xxx_messageInfo_ADRAlgorithm proto.InternalMessageInfo

func (m *ADRAlgorithm) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ADRAlgorithm) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*NetworkServer)(nil), "api.NetworkServer")
	proto.RegisterType((*NetworkServerListItem)(nil), "api.NetworkServerListItem")
	proto.RegisterType((*CreateNetworkServerRequest)(nil), "api.CreateNetworkServerRequest")
	proto.RegisterType((*CreateNetworkServerResponse)(nil), "api.CreateNetworkServerResponse")
	proto.RegisterType((*GetNetworkServerRequest)(nil), "api.GetNetworkServerRequest")
	proto.RegisterType((*GetNetworkServerResponse)(nil), "api.GetNetworkServerResponse")
	proto.RegisterType((*UpdateNetworkServerRequest)(nil), "api.UpdateNetworkServerRequest")
	proto.RegisterType((*DeleteNetworkServerRequest)(nil), "api.DeleteNetworkServerRequest")
	proto.RegisterType((*ListNetworkServerRequest)(nil), "api.ListNetworkServerRequest")
	proto.RegisterType((*ListNetworkServerResponse)(nil), "api.ListNetworkServerResponse")
	proto.RegisterType((*GetADRAlgorithmsRequest)(nil), "api.GetADRAlgorithmsRequest")
	proto.RegisterType((*GetADRAlgorithmsResponse)(nil), "api.GetADRAlgorithmsResponse")
	proto.RegisterType((*ADRAlgorithm)(nil), "api.ADRAlgorithm")
}

func init() {
	proto.RegisterFile("as/external/api/networkServer.proto", fileDescriptor_12c681e00a45db98)
}

var fileDescriptor_12c681e00a45db98 = []byte{
	// 984 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdf, 0x6e, 0xe3, 0xc4,
	0x17, 0x96, 0x9b, 0x36, 0x6d, 0x4f, 0x37, 0xdd, 0xdf, 0x8e, 0xb2, 0x8d, 0xe3, 0xf6, 0xb7, 0xcd,
	0x9a, 0x0b, 0x42, 0x45, 0x6c, 0xd4, 0x0a, 0x95, 0x5d, 0x21, 0xa1, 0x90, 0x94, 0x55, 0x45, 0x85,
	0x90, 0x1b, 0x04, 0x42, 0x48, 0xd6, 0xc4, 0x9e, 0xa4, 0xa3, 0x3a, 0x1e, 0xef, 0x78, 0x92, 0xdd,
	0x80, 0x7a, 0xc3, 0x13, 0x20, 0xf1, 0x22, 0xbc, 0x02, 0x97, 0x5c, 0xf3, 0x0a, 0xbc, 0x06, 0x12,
	0xf2, 0x78, 0xdc, 0x24, 0x8e, 0xcd, 0x9f, 0x85, 0x9b, 0x2a, 0x33, 0xe7, 0xfb, 0xce, 0x77, 0xfe,
	0x4e, 0x0d, 0x6f, 0xe1, 0xd8, 0x26, 0xaf, 0x05, 0xe1, 0x21, 0x0e, 0x6c, 0x1c, 0x51, 0x3b, 0x24,
	0xe2, 0x15, 0xe3, 0xb7, 0xd7, 0x84, 0xcf, 0x08, 0xb7, 0x22, 0xce, 0x04, 0x43, 0x15, 0x1c, 0x51,
	0xe3, 0x68, 0xcc, 0xd8, 0x38, 0x20, 0x12, 0x84, 0xc3, 0x90, 0x09, 0x2c, 0x28, 0x0b, 0xe3, 0x14,
	0x62, 0x1c, 0x2b, 0xab, 0x3c, 0x0d, 0xa7, 0x23, 0x5b, 0xd0, 0x09, 0x89, 0x05, 0x9e, 0x44, 0x0a,
	0x70, 0x98, 0x07, 0x90, 0x49, 0x24, 0xe6, 0xa9, 0xd1, 0xfc, 0x69, 0x13, 0x6a, 0x9f, 0x2d, 0x0b,
	0xa3, 0x7d, 0xd8, 0xa0, 0xbe, 0xae, 0xb5, 0xb4, 0x76, 0xc5, 0xd9, 0xa0, 0x3e, 0x42, 0xb0, 0x19,
	0xe2, 0x09, 0xd1, 0x37, 0x5a, 0x5a, 0x7b, 0xd7, 0x91, 0xbf, 0xd1, 0x01, 0x54, 0x63, 0x89, 0xd6,
	0x2b, 0xf2, 0x56, 0x9d, 0x50, 0x03, 0xb6, 0x3d, 0xec, 0x7a, 0x84, 0x0b, 0x7d, 0x33, 0x35, 0x78,
	0xb8, 0x47, 0xb8, 0x40, 0x4d, 0xd8, 0x11, 0x41, 0x9c, 0x5a, 0xb6, 0xa4, 0x65, 0x5b, 0x04, 0xb1,
	0x34, 0x35, 0x20, 0xf9, 0xe9, 0xde, 0x92, 0xb9, 0x5e, 0x4d, 0x39, 0x22, 0x88, 0x3f, 0x25, 0x73,
	0xf4, 0x3e, 0x34, 0x38, 0x9b, 0x0a, 0x1a, 0x8e, 0xdd, 0x88, 0xb3, 0x11, 0x0d, 0x88, 0x9b, 0x39,
	0xdf, 0x96, 0xc0, 0xba, 0x32, 0x7f, 0x9e, 0x5a, 0x7b, 0x5d, 0xe9, 0xef, 0x1c, 0xf4, 0x3c, 0xed,
	0x5e, 0x7a, 0x47, 0xf2, 0x1e, 0xaf, 0xf2, 0x06, 0x57, 0xd7, 0x92, 0x58, 0xa0, 0x97, 0x05, 0xb6,
	0x5b, 0xa4, 0x37, 0xb8, 0xba, 0x4e, 0xc2, 0x7c, 0x0e, 0xcd, 0x31, 0x16, 0xe4, 0x15, 0x9e, 0xbb,
	0x3e, 0x8d, 0x3d, 0x36, 0x23, 0x7c, 0xee, 0x92, 0x10, 0x0f, 0x03, 0xe2, 0xeb, 0xd0, 0xd2, 0xda,
	0x3b, 0x4e, 0x43, 0x01, 0xfa, 0x99, 0xfd, 0x22, 0x35, 0xa3, 0x0f, 0xc1, 0x58, 0xe7, 0xd2, 0x50,
	0x10, 0x3e, 0xc3, 0x81, 0xbe, 0xd7, 0xd2, 0xda, 0x35, 0x47, 0xcf, 0x93, 0x2f, 0x95, 0x1d, 0xf5,
	0xe0, 0xc9, 0x3a, 0x5b, 0xbc, 0x76, 0x47, 0x9c, 0xbc, 0x9c, 0x92, 0xd0, 0x9b, 0xeb, 0x0f, 0xa4,
	0x87, 0xc3, 0xbc, 0x87, 0xc1, 0x57, 0x9f, 0x64, 0x10, 0xf4, 0x1e, 0xd4, 0xd7, 0x9d, 0xf8, 0x5c,
	0xaf, 0x49, 0x2a, 0xca, 0x53, 0xfb, 0x8e, 0xf9, 0x8b, 0x06, 0x8f, 0x57, 0x46, 0xe6, 0x8a, 0xc6,
	0xe2, 0x52, 0x90, 0xc9, 0xbf, 0x1a, 0x9d, 0x67, 0x00, 0x1e, 0x27, 0x58, 0x10, 0xdf, 0xc5, 0xe9,
	0xf4, 0xec, 0x9d, 0x1a, 0x56, 0x3a, 0xba, 0x56, 0x36, 0xba, 0xd6, 0x20, 0x9b, 0x6d, 0x67, 0x57,
	0xa1, 0xbb, 0x22, 0xa1, 0x4e, 0x23, 0x3f, 0xa3, 0x6e, 0xfd, 0x35, 0x55, 0xa1, 0xbb, 0xc2, 0xfc,
	0x12, 0x8c, 0x9e, 0xf4, 0xb3, 0x92, 0x90, 0x93, 0x14, 0x27, 0x4e, 0x1c, 0xef, 0xab, 0xa5, 0x74,
	0x55, 0xcc, 0x9a, 0x74, 0x8e, 0x2c, 0x1c, 0x51, 0x6b, 0x95, 0x52, 0x5b, 0x59, 0x5f, 0xb3, 0x03,
	0x87, 0x85, 0x8e, 0xe3, 0x88, 0x85, 0x31, 0xc9, 0x57, 0xca, 0x7c, 0x07, 0x1a, 0x2f, 0x88, 0x28,
	0x0c, 0x22, 0x0f, 0xfd, 0x5d, 0x03, 0x7d, 0x1d, 0xab, 0xfc, 0xbe, 0x79, 0xc4, 0xb9, 0x06, 0x6c,
	0xbc, 0x79, 0x03, 0x2a, 0xff, 0xa0, 0x01, 0x48, 0x87, 0xed, 0x19, 0xe1, 0x31, 0x65, 0xa1, 0x7a,
	0x31, 0xb2, 0x63, 0x32, 0x28, 0x9c, 0x8c, 0x13, 0x43, 0xfa, 0x60, 0xa8, 0x53, 0xd2, 0xb2, 0x2f,
	0x24, 0xfd, 0xbf, 0x6e, 0xd9, 0xbb, 0x60, 0xf4, 0x49, 0x40, 0x4a, 0x1c, 0xe7, 0xdb, 0xf0, 0x12,
	0xf4, 0x64, 0xee, 0x0b, 0xb1, 0x75, 0xd8, 0x0a, 0xe8, 0x84, 0x0a, 0x05, 0x4f, 0x0f, 0x49, 0x42,
	0x6c, 0x34, 0x8a, 0x49, 0x5a, 0xdc, 0x8a, 0xa3, 0x4e, 0xe8, 0x6d, 0x78, 0xc8, 0xf8, 0x18, 0x87,
	0xf4, 0x5b, 0xf9, 0xae, 0xbb, 0xd4, 0x97, 0x25, 0xac, 0x38, 0xfb, 0xcb, 0xd7, 0x97, 0x7d, 0x33,
	0x82, 0x66, 0x81, 0xa4, 0xea, 0xfc, 0x31, 0xec, 0x09, 0x26, 0x70, 0xe0, 0x7a, 0x6c, 0x1a, 0x66,
	0xca, 0x20, 0xaf, 0x7a, 0xc9, 0x0d, 0x3a, 0x4d, 0xea, 0x19, 0x4f, 0x83, 0x44, 0xbe, 0x22, 0x1b,
	0xb4, 0x56, 0x91, 0x6c, 0x91, 0x1d, 0x85, 0x34, 0x2f, 0xe4, 0x58, 0x76, 0xfb, 0x4e, 0x37, 0x18,
	0x33, 0x4e, 0xc5, 0xcd, 0x24, 0xce, 0x72, 0x3c, 0x81, 0x47, 0xab, 0x85, 0x76, 0xef, 0xcb, 0xf3,
	0x70, 0xa5, 0xae, 0x97, 0xbe, 0x39, 0x90, 0x13, 0x9b, 0x73, 0xa3, 0xe2, 0xfe, 0x00, 0xf6, 0xb1,
	0xcf, 0x5d, 0x7c, 0x6f, 0xd1, 0x35, 0x19, 0xde, 0x23, 0x19, 0xde, 0x32, 0xc7, 0xa9, 0x61, 0x9f,
	0x2f, 0x3c, 0x98, 0xa7, 0xf0, 0x60, 0xd9, 0xbc, 0xd4, 0xa1, 0xdd, 0xb2, 0xd7, 0xe7, 0xf4, 0xe7,
	0x2d, 0xa8, 0xaf, 0xa4, 0x9c, 0xfc, 0xa5, 0x1e, 0x41, 0x01, 0x54, 0xd3, 0x7d, 0x45, 0xc7, 0x52,
	0xb8, 0xfc, 0x55, 0x30, 0x5a, 0xe5, 0x80, 0x34, 0x27, 0xf3, 0xf8, 0xfb, 0x5f, 0x7f, 0xfb, 0x71,
	0xa3, 0x69, 0xd6, 0x97, 0xff, 0xaf, 0x77, 0xd2, 0x32, 0xc5, 0xcf, 0xb5, 0x13, 0x44, 0xa0, 0xf2,
	0x82, 0x08, 0x74, 0x24, 0x3d, 0x95, 0x2c, 0xbe, 0xf1, 0xff, 0x12, 0xab, 0x12, 0x79, 0x2a, 0x45,
	0x0e, 0x51, 0xb3, 0x48, 0xc4, 0xfe, 0x8e, 0xfa, 0x77, 0x68, 0x06, 0xd5, 0x74, 0x55, 0x54, 0x52,
	0xe5, 0x7b, 0x63, 0x1c, 0xac, 0xad, 0xeb, 0x45, 0xf2, 0x95, 0x60, 0x9e, 0x49, 0x95, 0x8e, 0xd1,
	0x2e, 0x56, 0x59, 0x1d, 0x01, 0x8b, 0xfa, 0x77, 0x49, 0x7a, 0x3e, 0x54, 0xd3, 0x4d, 0x52, 0xba,
	0xe5, 0x6b, 0x55, 0xaa, 0xab, 0xb2, 0x3b, 0xf9, 0x93, 0xec, 0x3c, 0xd8, 0x4c, 0x06, 0x16, 0xa5,
	0x75, 0x2a, 0x5b, 0x46, 0xe3, 0x49, 0x99, 0x59, 0xd5, 0xf1, 0x48, 0x2a, 0x1d, 0xa0, 0xc2, 0x66,
	0xa1, 0x1f, 0x34, 0xf8, 0x5f, 0x7e, 0x76, 0x17, 0x7d, 0x2b, 0xda, 0x8c, 0x45, 0xdf, 0x0a, 0x07,
	0xde, 0xfc, 0x48, 0xea, 0x3d, 0x43, 0xe7, 0x7f, 0xa7, 0xa2, 0x2e, 0xf5, 0xef, 0x6c, 0xec, 0xf3,
	0xce, 0x62, 0x3f, 0x3e, 0xfe, 0x06, 0x9e, 0x52, 0x66, 0x79, 0x37, 0x94, 0x47, 0xb1, 0xc0, 0xde,
	0xad, 0x94, 0xc3, 0xb1, 0x95, 0x7d, 0x4c, 0x26, 0xe7, 0xaf, 0xcf, 0xc7, 0x54, 0xdc, 0x4c, 0x87,
	0x96, 0xc7, 0x26, 0xf6, 0x90, 0x33, 0x0f, 0x63, 0x6e, 0x2f, 0x28, 0x9d, 0x44, 0x7a, 0xcc, 0xec,
	0xd9, 0x99, 0x9d, 0xfb, 0x0a, 0x1d, 0x56, 0x65, 0x23, 0xce, 0xfe, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x75, 0xa7, 0x47, 0x3b, 0x9f, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NetworkServerServiceClient is the client API for NetworkServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkServerServiceClient interface {
	// Create creates the given network-server.
	Create(ctx context.Context, in *CreateNetworkServerRequest, opts ...grpc.CallOption) (*CreateNetworkServerResponse, error)
	// Get returns the network-server matching the given id.
	Get(ctx context.Context, in *GetNetworkServerRequest, opts ...grpc.CallOption) (*GetNetworkServerResponse, error)
	// Update updates the given network-server.
	Update(ctx context.Context, in *UpdateNetworkServerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Delete deletes the network-server matching the given id.
	Delete(ctx context.Context, in *DeleteNetworkServerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// List lists the available network-servers.
	List(ctx context.Context, in *ListNetworkServerRequest, opts ...grpc.CallOption) (*ListNetworkServerResponse, error)
	// GetADRAlgorithms returns the available ADR algorithms.
	GetADRAlgorithms(ctx context.Context, in *GetADRAlgorithmsRequest, opts ...grpc.CallOption) (*GetADRAlgorithmsResponse, error)
}

type networkServerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNetworkServerServiceClient(cc grpc.ClientConnInterface) NetworkServerServiceClient {
	return &networkServerServiceClient{cc}
}

func (c *networkServerServiceClient) Create(ctx context.Context, in *CreateNetworkServerRequest, opts ...grpc.CallOption) (*CreateNetworkServerResponse, error) {
	out := new(CreateNetworkServerResponse)
	err := c.cc.Invoke(ctx, "/api.NetworkServerService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServerServiceClient) Get(ctx context.Context, in *GetNetworkServerRequest, opts ...grpc.CallOption) (*GetNetworkServerResponse, error) {
	out := new(GetNetworkServerResponse)
	err := c.cc.Invoke(ctx, "/api.NetworkServerService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServerServiceClient) Update(ctx context.Context, in *UpdateNetworkServerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.NetworkServerService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServerServiceClient) Delete(ctx context.Context, in *DeleteNetworkServerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.NetworkServerService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServerServiceClient) List(ctx context.Context, in *ListNetworkServerRequest, opts ...grpc.CallOption) (*ListNetworkServerResponse, error) {
	out := new(ListNetworkServerResponse)
	err := c.cc.Invoke(ctx, "/api.NetworkServerService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkServerServiceClient) GetADRAlgorithms(ctx context.Context, in *GetADRAlgorithmsRequest, opts ...grpc.CallOption) (*GetADRAlgorithmsResponse, error) {
	out := new(GetADRAlgorithmsResponse)
	err := c.cc.Invoke(ctx, "/api.NetworkServerService/GetADRAlgorithms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetworkServerServiceServer is the server API for NetworkServerService service.
type NetworkServerServiceServer interface {
	// Create creates the given network-server.
	Create(context.Context, *CreateNetworkServerRequest) (*CreateNetworkServerResponse, error)
	// Get returns the network-server matching the given id.
	Get(context.Context, *GetNetworkServerRequest) (*GetNetworkServerResponse, error)
	// Update updates the given network-server.
	Update(context.Context, *UpdateNetworkServerRequest) (*empty.Empty, error)
	// Delete deletes the network-server matching the given id.
	Delete(context.Context, *DeleteNetworkServerRequest) (*empty.Empty, error)
	// List lists the available network-servers.
	List(context.Context, *ListNetworkServerRequest) (*ListNetworkServerResponse, error)
	// GetADRAlgorithms returns the available ADR algorithms.
	GetADRAlgorithms(context.Context, *GetADRAlgorithmsRequest) (*GetADRAlgorithmsResponse, error)
}

// UnimplementedNetworkServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNetworkServerServiceServer struct {
}

func (*UnimplementedNetworkServerServiceServer) Create(ctx context.Context, req *CreateNetworkServerRequest) (*CreateNetworkServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedNetworkServerServiceServer) Get(ctx context.Context, req *GetNetworkServerRequest) (*GetNetworkServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedNetworkServerServiceServer) Update(ctx context.Context, req *UpdateNetworkServerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedNetworkServerServiceServer) Delete(ctx context.Context, req *DeleteNetworkServerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedNetworkServerServiceServer) List(ctx context.Context, req *ListNetworkServerRequest) (*ListNetworkServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedNetworkServerServiceServer) GetADRAlgorithms(ctx context.Context, req *GetADRAlgorithmsRequest) (*GetADRAlgorithmsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetADRAlgorithms not implemented")
}

func RegisterNetworkServerServiceServer(s *grpc.Server, srv NetworkServerServiceServer) {
	s.RegisterService(&_NetworkServerService_serviceDesc, srv)
}

func _NetworkServerService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNetworkServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServerServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.NetworkServerService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServerServiceServer).Create(ctx, req.(*CreateNetworkServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkServerService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNetworkServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServerServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.NetworkServerService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServerServiceServer).Get(ctx, req.(*GetNetworkServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkServerService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateNetworkServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServerServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.NetworkServerService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServerServiceServer).Update(ctx, req.(*UpdateNetworkServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkServerService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNetworkServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServerServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.NetworkServerService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServerServiceServer).Delete(ctx, req.(*DeleteNetworkServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkServerService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNetworkServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServerServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.NetworkServerService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServerServiceServer).List(ctx, req.(*ListNetworkServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkServerService_GetADRAlgorithms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetADRAlgorithmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkServerServiceServer).GetADRAlgorithms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.NetworkServerService/GetADRAlgorithms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkServerServiceServer).GetADRAlgorithms(ctx, req.(*GetADRAlgorithmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetworkServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.NetworkServerService",
	HandlerType: (*NetworkServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _NetworkServerService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _NetworkServerService_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _NetworkServerService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _NetworkServerService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _NetworkServerService_List_Handler,
		},
		{
			MethodName: "GetADRAlgorithms",
			Handler:    _NetworkServerService_GetADRAlgorithms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "as/external/api/networkServer.proto",
}
