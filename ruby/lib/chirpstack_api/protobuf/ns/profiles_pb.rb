# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ns/profiles.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("ns/profiles.proto", :syntax => :proto3) do
    add_message "ns.ServiceProfile" do
      optional :id, :bytes, 1
      optional :ul_rate, :uint32, 2
      optional :ul_bucket_size, :uint32, 3
      optional :ul_rate_policy, :enum, 4, "ns.RatePolicy"
      optional :dl_rate, :uint32, 5
      optional :dl_bucket_size, :uint32, 6
      optional :dl_rate_policy, :enum, 7, "ns.RatePolicy"
      optional :add_gw_metadata, :bool, 8
      optional :dev_status_req_freq, :uint32, 9
      optional :report_dev_status_battery, :bool, 10
      optional :report_dev_status_margin, :bool, 11
      optional :dr_min, :uint32, 12
      optional :dr_max, :uint32, 13
      optional :channel_mask, :bytes, 14
      optional :pr_allowed, :bool, 15
      optional :hr_allowed, :bool, 16
      optional :ra_allowed, :bool, 17
      optional :nwk_geo_loc, :bool, 18
      optional :target_per, :uint32, 19
      optional :min_gw_diversity, :uint32, 20
    end
    add_message "ns.DeviceProfile" do
      optional :id, :bytes, 1
      optional :supports_class_b, :bool, 2
      optional :class_b_timeout, :uint32, 3
      optional :ping_slot_period, :uint32, 4
      optional :ping_slot_dr, :uint32, 5
      optional :ping_slot_freq, :uint32, 6
      optional :supports_class_c, :bool, 7
      optional :class_c_timeout, :uint32, 8
      optional :mac_version, :string, 9
      optional :reg_params_revision, :string, 10
      optional :rx_delay_1, :uint32, 11
      optional :rx_dr_offset_1, :uint32, 12
      optional :rx_datarate_2, :uint32, 13
      optional :rx_freq_2, :uint32, 14
      repeated :factory_preset_freqs, :uint32, 15
      optional :max_eirp, :uint32, 16
      optional :max_duty_cycle, :uint32, 17
      optional :supports_join, :bool, 18
      optional :rf_region, :string, 19
      optional :supports_32bit_f_cnt, :bool, 20
    end
    add_message "ns.RoutingProfile" do
      optional :id, :bytes, 1
      optional :as_id, :string, 2
      optional :ca_cert, :string, 3
      optional :tls_cert, :string, 4
      optional :tls_key, :string, 5
    end
    add_enum "ns.RatePolicy" do
      value :DROP, 0
      value :MARK, 1
    end
  end
end

module ChirpStackAPI
  module NS
    ServiceProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ns.ServiceProfile").msgclass
    DeviceProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ns.DeviceProfile").msgclass
    RoutingProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ns.RoutingProfile").msgclass
    RatePolicy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ns.RatePolicy").enummodule
  end
end
