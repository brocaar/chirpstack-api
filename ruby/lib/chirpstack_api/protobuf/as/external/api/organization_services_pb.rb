# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: as/external/api/organization.proto for package 'ChirpStackAPI.AS.External.API'

require 'grpc'
require 'as/external/api/organization_pb'

module ChirpStackAPI
  module AS
    module External
      module API
        module OrganizationService
          # OrganizationService is the service managing the organization access.
          class Service

            include GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'api.OrganizationService'

            # Get organization list.
            rpc :List, ::ChirpStackAPI::AS::External::API::ListOrganizationRequest, ::ChirpStackAPI::AS::External::API::ListOrganizationResponse
            # Get data for a particular organization.
            rpc :Get, ::ChirpStackAPI::AS::External::API::GetOrganizationRequest, ::ChirpStackAPI::AS::External::API::GetOrganizationResponse
            # Create a new organization.
            rpc :Create, ::ChirpStackAPI::AS::External::API::CreateOrganizationRequest, ::ChirpStackAPI::AS::External::API::CreateOrganizationResponse
            # Update an existing organization.
            rpc :Update, ::ChirpStackAPI::AS::External::API::UpdateOrganizationRequest, ::Google::Protobuf::Empty
            # Delete an organization.
            rpc :Delete, ::ChirpStackAPI::AS::External::API::DeleteOrganizationRequest, ::Google::Protobuf::Empty
            # Get organization's user list.
            rpc :ListUsers, ::ChirpStackAPI::AS::External::API::ListOrganizationUsersRequest, ::ChirpStackAPI::AS::External::API::ListOrganizationUsersResponse
            # Get data for a particular organization user.
            rpc :GetUser, ::ChirpStackAPI::AS::External::API::GetOrganizationUserRequest, ::ChirpStackAPI::AS::External::API::GetOrganizationUserResponse
            # Add a new user to an organization.
            rpc :AddUser, ::ChirpStackAPI::AS::External::API::AddOrganizationUserRequest, ::Google::Protobuf::Empty
            # Update a user in an organization.
            rpc :UpdateUser, ::ChirpStackAPI::AS::External::API::UpdateOrganizationUserRequest, ::Google::Protobuf::Empty
            # Delete a user from an organization.
            rpc :DeleteUser, ::ChirpStackAPI::AS::External::API::DeleteOrganizationUserRequest, ::Google::Protobuf::Empty
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
