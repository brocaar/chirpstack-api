# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: as/external/api/networkServer.proto for package 'ChirpStackAPI.AS.External.API'

require 'grpc'
require 'as/external/api/networkServer_pb'

module ChirpStackAPI
  module AS
    module External
      module API
        module NetworkServerService
          # NetworkServerService is the service managing network-servers.
          class Service

            include GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'api.NetworkServerService'

            # Create creates the given network-server.
            rpc :Create, ::ChirpStackAPI::AS::External::API::CreateNetworkServerRequest, ::ChirpStackAPI::AS::External::API::CreateNetworkServerResponse
            # Get returns the network-server matching the given id.
            rpc :Get, ::ChirpStackAPI::AS::External::API::GetNetworkServerRequest, ::ChirpStackAPI::AS::External::API::GetNetworkServerResponse
            # Update updates the given network-server.
            rpc :Update, ::ChirpStackAPI::AS::External::API::UpdateNetworkServerRequest, ::Google::Protobuf::Empty
            # Delete deletes the network-server matching the given id.
            rpc :Delete, ::ChirpStackAPI::AS::External::API::DeleteNetworkServerRequest, ::Google::Protobuf::Empty
            # List lists the available network-servers.
            rpc :List, ::ChirpStackAPI::AS::External::API::ListNetworkServerRequest, ::ChirpStackAPI::AS::External::API::ListNetworkServerResponse
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
