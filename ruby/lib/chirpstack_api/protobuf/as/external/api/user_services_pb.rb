# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: as/external/api/user.proto for package 'ChirpStackAPI.AS.External.API'

require 'grpc'
require 'as/external/api/user_pb'

module ChirpStackAPI
  module AS
    module External
      module API
        module UserService
          # UserService is the service managing the user access.
          class Service

            include GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'api.UserService'

            # Get user list.
            rpc :List, ::ChirpStackAPI::AS::External::API::ListUserRequest, ::ChirpStackAPI::AS::External::API::ListUserResponse
            # Get data for a particular user.
            rpc :Get, ::ChirpStackAPI::AS::External::API::GetUserRequest, ::ChirpStackAPI::AS::External::API::GetUserResponse
            # Create a new user.
            rpc :Create, ::ChirpStackAPI::AS::External::API::CreateUserRequest, ::ChirpStackAPI::AS::External::API::CreateUserResponse
            # Update an existing user.
            rpc :Update, ::ChirpStackAPI::AS::External::API::UpdateUserRequest, ::Google::Protobuf::Empty
            # Delete a user.
            rpc :Delete, ::ChirpStackAPI::AS::External::API::DeleteUserRequest, ::Google::Protobuf::Empty
            # UpdatePassword updates a password.
            rpc :UpdatePassword, ::ChirpStackAPI::AS::External::API::UpdateUserPasswordRequest, ::Google::Protobuf::Empty
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
