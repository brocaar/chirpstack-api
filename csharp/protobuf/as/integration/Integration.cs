// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: as/integration/integration.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Chirpstack.ApplicationServer.Integration {

  /// <summary>Holder for reflection information generated from as/integration/integration.proto</summary>
  public static partial class IntegrationReflection {

    #region Descriptor
    /// <summary>File descriptor for as/integration/integration.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IntegrationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBhcy9pbnRlZ3JhdGlvbi9pbnRlZ3JhdGlvbi5wcm90bxILaW50ZWdyYXRp",
            "b24aE2NvbW1vbi9jb21tb24ucHJvdG8aC2d3L2d3LnByb3RvGh9nb29nbGUv",
            "cHJvdG9idWYvdGltZXN0YW1wLnByb3RvIq8ECgtVcGxpbmtFdmVudBIlCg5h",
            "cHBsaWNhdGlvbl9pZBgBIAEoBFINYXBwbGljYXRpb25JRBIYChBhcHBsaWNh",
            "dGlvbl9uYW1lGAIgASgJEhMKC2RldmljZV9uYW1lGAMgASgJEhcKB2Rldl9l",
            "dWkYBCABKAxSBmRldkVVSRIhCgdyeF9pbmZvGAUgAygLMhAuZ3cuVXBsaW5r",
            "UlhJbmZvEiEKB3R4X2luZm8YBiABKAsyEC5ndy5VcGxpbmtUWEluZm8SCwoD",
            "YWRyGAcgASgIEgoKAmRyGAggASgNEg0KBWZfY250GAkgASgNEg4KBmZfcG9y",
            "dBgKIAEoDRIMCgRkYXRhGAsgASgMEh8KC29iamVjdF9qc29uGAwgASgJUgpv",
            "YmplY3RKU09OEjAKBHRhZ3MYDSADKAsyIi5pbnRlZ3JhdGlvbi5VcGxpbmtF",
            "dmVudC5UYWdzRW50cnkSGAoQY29uZmlybWVkX3VwbGluaxgOIAEoCBIQCghk",
            "ZXZfYWRkchgPIAEoDBIwCgxwdWJsaXNoZWRfYXQYECABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEioKEWRldmljZV9wcm9maWxlX2lkGBEgASgJ",
            "Ug9kZXZpY2VQcm9maWxlSUQSGwoTZGV2aWNlX3Byb2ZpbGVfbmFtZRgSIAEo",
            "CRorCglUYWdzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4",
            "ASLtAgoJSm9pbkV2ZW50EiUKDmFwcGxpY2F0aW9uX2lkGAEgASgEUg1hcHBs",
            "aWNhdGlvbklEEhgKEGFwcGxpY2F0aW9uX25hbWUYAiABKAkSEwoLZGV2aWNl",
            "X25hbWUYAyABKAkSFwoHZGV2X2V1aRgEIAEoDFIGZGV2RVVJEhAKCGRldl9h",
            "ZGRyGAUgASgMEiEKB3J4X2luZm8YBiADKAsyEC5ndy5VcGxpbmtSWEluZm8S",
            "IQoHdHhfaW5mbxgHIAEoCzIQLmd3LlVwbGlua1RYSW5mbxIKCgJkchgIIAEo",
            "DRIuCgR0YWdzGAkgAygLMiAuaW50ZWdyYXRpb24uSm9pbkV2ZW50LlRhZ3NF",
            "bnRyeRIwCgxwdWJsaXNoZWRfYXQYCiABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wGisKCVRhZ3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBIqwCCghBY2tFdmVudBIlCg5hcHBsaWNhdGlvbl9pZBgBIAEo",
            "BFINYXBwbGljYXRpb25JRBIYChBhcHBsaWNhdGlvbl9uYW1lGAIgASgJEhMK",
            "C2RldmljZV9uYW1lGAMgASgJEhcKB2Rldl9ldWkYBCABKAxSBmRldkVVSRIU",
            "CgxhY2tub3dsZWRnZWQYBSABKAgSDQoFZl9jbnQYBiABKA0SLQoEdGFncxgH",
            "IAMoCzIfLmludGVncmF0aW9uLkFja0V2ZW50LlRhZ3NFbnRyeRIwCgxwdWJs",
            "aXNoZWRfYXQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGisK",
            "CVRhZ3NFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIt4C",
            "CgpUeEFja0V2ZW50EiUKDmFwcGxpY2F0aW9uX2lkGAEgASgEUg1hcHBsaWNh",
            "dGlvbklEEhgKEGFwcGxpY2F0aW9uX25hbWUYAiABKAkSEwoLZGV2aWNlX25h",
            "bWUYAyABKAkSFwoHZGV2X2V1aRgEIAEoDFIGZGV2RVVJEg0KBWZfY250GAUg",
            "ASgNEi8KBHRhZ3MYBiADKAsyIS5pbnRlZ3JhdGlvbi5UeEFja0V2ZW50LlRh",
            "Z3NFbnRyeRIdCgpnYXRld2F5X2lkGAcgASgMUglnYXRld2F5SUQSIwoHdHhf",
            "aW5mbxgIIAEoCzISLmd3LkRvd25saW5rVFhJbmZvEjAKDHB1Ymxpc2hlZF9h",
            "dBgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaKwoJVGFnc0Vu",
            "dHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEizwIKCkVycm9y",
            "RXZlbnQSJQoOYXBwbGljYXRpb25faWQYASABKARSDWFwcGxpY2F0aW9uSUQS",
            "GAoQYXBwbGljYXRpb25fbmFtZRgCIAEoCRITCgtkZXZpY2VfbmFtZRgDIAEo",
            "CRIXCgdkZXZfZXVpGAQgASgMUgZkZXZFVUkSJAoEdHlwZRgFIAEoDjIWLmlu",
            "dGVncmF0aW9uLkVycm9yVHlwZRINCgVlcnJvchgGIAEoCRINCgVmX2NudBgH",
            "IAEoDRIvCgR0YWdzGAggAygLMiEuaW50ZWdyYXRpb24uRXJyb3JFdmVudC5U",
            "YWdzRW50cnkSMAoMcHVibGlzaGVkX2F0GAkgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBorCglUYWdzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZh",
            "bHVlGAIgASgJOgI4ASL2AgoLU3RhdHVzRXZlbnQSJQoOYXBwbGljYXRpb25f",
            "aWQYASABKARSDWFwcGxpY2F0aW9uSUQSGAoQYXBwbGljYXRpb25fbmFtZRgC",
            "IAEoCRITCgtkZXZpY2VfbmFtZRgDIAEoCRIXCgdkZXZfZXVpGAQgASgMUgZk",
            "ZXZFVUkSDgoGbWFyZ2luGAUgASgFEh0KFWV4dGVybmFsX3Bvd2VyX3NvdXJj",
            "ZRgGIAEoCBIhChliYXR0ZXJ5X2xldmVsX3VuYXZhaWxhYmxlGAcgASgIEhUK",
            "DWJhdHRlcnlfbGV2ZWwYCCABKAISMAoEdGFncxgJIAMoCzIiLmludGVncmF0",
            "aW9uLlN0YXR1c0V2ZW50LlRhZ3NFbnRyeRIwCgxwdWJsaXNoZWRfYXQYCiAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wGisKCVRhZ3NFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIuMCCg1Mb2NhdGlvbkV2",
            "ZW50EiUKDmFwcGxpY2F0aW9uX2lkGAEgASgEUg1hcHBsaWNhdGlvbklEEhgK",
            "EGFwcGxpY2F0aW9uX25hbWUYAiABKAkSEwoLZGV2aWNlX25hbWUYAyABKAkS",
            "FwoHZGV2X2V1aRgEIAEoDFIGZGV2RVVJEiIKCGxvY2F0aW9uGAUgASgLMhAu",
            "Y29tbW9uLkxvY2F0aW9uEjIKBHRhZ3MYBiADKAsyJC5pbnRlZ3JhdGlvbi5M",
            "b2NhdGlvbkV2ZW50LlRhZ3NFbnRyeRIdCgp1cGxpbmtfaWRzGAcgAygMUgl1",
            "cGxpbmtJRHMSDQoFZl9jbnQYCCABKA0SMAoMcHVibGlzaGVkX2F0GAkgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBorCglUYWdzRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLmAgoQSW50ZWdyYXRpb25F",
            "dmVudBIlCg5hcHBsaWNhdGlvbl9pZBgBIAEoBFINYXBwbGljYXRpb25JRBIY",
            "ChBhcHBsaWNhdGlvbl9uYW1lGAIgASgJEhMKC2RldmljZV9uYW1lGAMgASgJ",
            "EhcKB2Rldl9ldWkYBCABKAxSBmRldkVVSRI1CgR0YWdzGAUgAygLMicuaW50",
            "ZWdyYXRpb24uSW50ZWdyYXRpb25FdmVudC5UYWdzRW50cnkSGAoQaW50ZWdy",
            "YXRpb25fbmFtZRgGIAEoCRISCgpldmVudF90eXBlGAcgASgJEh8KC29iamVj",
            "dF9qc29uGAggASgJUgpvYmplY3RKU09OEjAKDHB1Ymxpc2hlZF9hdBgJIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaKwoJVGFnc0VudHJ5EgsK",
            "A2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEq0wEKCUVycm9yVHlwZRIL",
            "CgdVTktOT1dOEAASGQoVRE9XTkxJTktfUEFZTE9BRF9TSVpFEAESEQoNRE9X",
            "TkxJTktfRkNOVBACEhAKDFVQTElOS19DT0RFQxADEhIKDkRPV05MSU5LX0NP",
            "REVDEAQSCAoET1RBQRAFEhUKEVVQTElOS19GQ05UX1JFU0VUEAYSDgoKVVBM",
            "SU5LX01JQxAHEh4KGlVQTElOS19GQ05UX1JFVFJBTlNNSVNTSU9OEAgSFAoQ",
            "RE9XTkxJTktfR0FURVdBWRAJQpkBCiBpby5jaGlycHN0YWNrLmFwaS5hcy5p",
            "bnRlZ3JhdGlvbkIQSW50ZWdyYXRpb25Qcm90b1ABWjZnaXRodWIuY29tL2Jy",
            "b2NhYXIvY2hpcnBzdGFjay1hcGkvZ28vdjMvYXMvaW50ZWdyYXRpb26qAihD",
            "aGlycHN0YWNrLkFwcGxpY2F0aW9uU2VydmVyLkludGVncmF0aW9uYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Chirpstack.Common.CommonReflection.Descriptor, global::Chirpstack.Gateway.GwReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Chirpstack.ApplicationServer.Integration.ErrorType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Chirpstack.ApplicationServer.Integration.UplinkEvent), global::Chirpstack.ApplicationServer.Integration.UplinkEvent.Parser, new[]{ "ApplicationId", "ApplicationName", "DeviceName", "DevEui", "RxInfo", "TxInfo", "Adr", "Dr", "FCnt", "FPort", "Data", "ObjectJson", "Tags", "ConfirmedUplink", "DevAddr", "PublishedAt", "DeviceProfileId", "DeviceProfileName" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chirpstack.ApplicationServer.Integration.JoinEvent), global::Chirpstack.ApplicationServer.Integration.JoinEvent.Parser, new[]{ "ApplicationId", "ApplicationName", "DeviceName", "DevEui", "DevAddr", "RxInfo", "TxInfo", "Dr", "Tags", "PublishedAt" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chirpstack.ApplicationServer.Integration.AckEvent), global::Chirpstack.ApplicationServer.Integration.AckEvent.Parser, new[]{ "ApplicationId", "ApplicationName", "DeviceName", "DevEui", "Acknowledged", "FCnt", "Tags", "PublishedAt" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chirpstack.ApplicationServer.Integration.TxAckEvent), global::Chirpstack.ApplicationServer.Integration.TxAckEvent.Parser, new[]{ "ApplicationId", "ApplicationName", "DeviceName", "DevEui", "FCnt", "Tags", "GatewayId", "TxInfo", "PublishedAt" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chirpstack.ApplicationServer.Integration.ErrorEvent), global::Chirpstack.ApplicationServer.Integration.ErrorEvent.Parser, new[]{ "ApplicationId", "ApplicationName", "DeviceName", "DevEui", "Type", "Error", "FCnt", "Tags", "PublishedAt" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chirpstack.ApplicationServer.Integration.StatusEvent), global::Chirpstack.ApplicationServer.Integration.StatusEvent.Parser, new[]{ "ApplicationId", "ApplicationName", "DeviceName", "DevEui", "Margin", "ExternalPowerSource", "BatteryLevelUnavailable", "BatteryLevel", "Tags", "PublishedAt" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chirpstack.ApplicationServer.Integration.LocationEvent), global::Chirpstack.ApplicationServer.Integration.LocationEvent.Parser, new[]{ "ApplicationId", "ApplicationName", "DeviceName", "DevEui", "Location", "Tags", "UplinkIds", "FCnt", "PublishedAt" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chirpstack.ApplicationServer.Integration.IntegrationEvent), global::Chirpstack.ApplicationServer.Integration.IntegrationEvent.Parser, new[]{ "ApplicationId", "ApplicationName", "DeviceName", "DevEui", "Tags", "IntegrationName", "EventType", "ObjectJson", "PublishedAt" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum ErrorType {
    /// <summary>
    /// Unknown type.
    /// </summary>
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    /// <summary>
    /// Error related to the downlink payload size.
    /// Usually seen when the payload exceeded the maximum allowed payload size.
    /// </summary>
    [pbr::OriginalName("DOWNLINK_PAYLOAD_SIZE")] DownlinkPayloadSize = 1,
    /// <summary>
    /// Error related to the downlink frame-counter.
    /// Usually seen when the frame-counter has already been used.
    /// </summary>
    [pbr::OriginalName("DOWNLINK_FCNT")] DownlinkFcnt = 2,
    /// <summary>
    /// Uplink codec error.
    /// </summary>
    [pbr::OriginalName("UPLINK_CODEC")] UplinkCodec = 3,
    /// <summary>
    /// Downlink codec error.
    /// </summary>
    [pbr::OriginalName("DOWNLINK_CODEC")] DownlinkCodec = 4,
    /// <summary>
    /// OTAA error.
    /// </summary>
    [pbr::OriginalName("OTAA")] Otaa = 5,
    /// <summary>
    /// Uplink frame-counter was reset.
    /// </summary>
    [pbr::OriginalName("UPLINK_FCNT_RESET")] UplinkFcntReset = 6,
    /// <summary>
    /// Uplink MIC error.
    /// </summary>
    [pbr::OriginalName("UPLINK_MIC")] UplinkMic = 7,
    /// <summary>
    /// Uplink frame-counter retransmission.
    /// </summary>
    [pbr::OriginalName("UPLINK_FCNT_RETRANSMISSION")] UplinkFcntRetransmission = 8,
    /// <summary>
    /// Downlink gateway error.
    /// </summary>
    [pbr::OriginalName("DOWNLINK_GATEWAY")] DownlinkGateway = 9,
  }

  #endregion

  #region Messages
  /// <summary>
  /// UplinkEvent is the message sent when an uplink payload has been received.
  /// </summary>
  public sealed partial class UplinkEvent : pb::IMessage<UplinkEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UplinkEvent> _parser = new pb::MessageParser<UplinkEvent>(() => new UplinkEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UplinkEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chirpstack.ApplicationServer.Integration.IntegrationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UplinkEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UplinkEvent(UplinkEvent other) : this() {
      applicationId_ = other.applicationId_;
      applicationName_ = other.applicationName_;
      deviceName_ = other.deviceName_;
      devEui_ = other.devEui_;
      rxInfo_ = other.rxInfo_.Clone();
      txInfo_ = other.txInfo_ != null ? other.txInfo_.Clone() : null;
      adr_ = other.adr_;
      dr_ = other.dr_;
      fCnt_ = other.fCnt_;
      fPort_ = other.fPort_;
      data_ = other.data_;
      objectJson_ = other.objectJson_;
      tags_ = other.tags_.Clone();
      confirmedUplink_ = other.confirmedUplink_;
      devAddr_ = other.devAddr_;
      publishedAt_ = other.publishedAt_ != null ? other.publishedAt_.Clone() : null;
      deviceProfileId_ = other.deviceProfileId_;
      deviceProfileName_ = other.deviceProfileName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UplinkEvent Clone() {
      return new UplinkEvent(this);
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private ulong applicationId_;
    /// <summary>
    /// Application ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "application_name" field.</summary>
    public const int ApplicationNameFieldNumber = 2;
    private string applicationName_ = "";
    /// <summary>
    /// Application name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ApplicationName {
      get { return applicationName_; }
      set {
        applicationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 3;
    private string deviceName_ = "";
    /// <summary>
    /// Device name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_eui" field.</summary>
    public const int DevEuiFieldNumber = 4;
    private pb::ByteString devEui_ = pb::ByteString.Empty;
    /// <summary>
    /// Device EUI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DevEui {
      get { return devEui_; }
      set {
        devEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rx_info" field.</summary>
    public const int RxInfoFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Chirpstack.Gateway.UplinkRXInfo> _repeated_rxInfo_codec
        = pb::FieldCodec.ForMessage(42, global::Chirpstack.Gateway.UplinkRXInfo.Parser);
    private readonly pbc::RepeatedField<global::Chirpstack.Gateway.UplinkRXInfo> rxInfo_ = new pbc::RepeatedField<global::Chirpstack.Gateway.UplinkRXInfo>();
    /// <summary>
    /// Receiving gateway RX info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Chirpstack.Gateway.UplinkRXInfo> RxInfo {
      get { return rxInfo_; }
    }

    /// <summary>Field number for the "tx_info" field.</summary>
    public const int TxInfoFieldNumber = 6;
    private global::Chirpstack.Gateway.UplinkTXInfo txInfo_;
    /// <summary>
    /// TX info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Chirpstack.Gateway.UplinkTXInfo TxInfo {
      get { return txInfo_; }
      set {
        txInfo_ = value;
      }
    }

    /// <summary>Field number for the "adr" field.</summary>
    public const int AdrFieldNumber = 7;
    private bool adr_;
    /// <summary>
    /// Device has ADR bit set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Adr {
      get { return adr_; }
      set {
        adr_ = value;
      }
    }

    /// <summary>Field number for the "dr" field.</summary>
    public const int DrFieldNumber = 8;
    private uint dr_;
    /// <summary>
    /// Data-rate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Dr {
      get { return dr_; }
      set {
        dr_ = value;
      }
    }

    /// <summary>Field number for the "f_cnt" field.</summary>
    public const int FCntFieldNumber = 9;
    private uint fCnt_;
    /// <summary>
    /// Frame counter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FCnt {
      get { return fCnt_; }
      set {
        fCnt_ = value;
      }
    }

    /// <summary>Field number for the "f_port" field.</summary>
    public const int FPortFieldNumber = 10;
    private uint fPort_;
    /// <summary>
    /// Frame port.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FPort {
      get { return fPort_; }
      set {
        fPort_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 11;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// FRMPayload data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object_json" field.</summary>
    public const int ObjectJsonFieldNumber = 12;
    private string objectJson_ = "";
    /// <summary>
    /// JSON string containing the decoded object.
    /// Note that this is only set when a codec is configured in the Device Profile.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectJson {
      get { return objectJson_; }
      set {
        objectJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 13;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 106);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// User-defined device tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "confirmed_uplink" field.</summary>
    public const int ConfirmedUplinkFieldNumber = 14;
    private bool confirmedUplink_;
    /// <summary>
    /// Uplink was of type confirmed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ConfirmedUplink {
      get { return confirmedUplink_; }
      set {
        confirmedUplink_ = value;
      }
    }

    /// <summary>Field number for the "dev_addr" field.</summary>
    public const int DevAddrFieldNumber = 15;
    private pb::ByteString devAddr_ = pb::ByteString.Empty;
    /// <summary>
    /// Device address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DevAddr {
      get { return devAddr_; }
      set {
        devAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "published_at" field.</summary>
    public const int PublishedAtFieldNumber = 16;
    private global::Google.Protobuf.WellKnownTypes.Timestamp publishedAt_;
    /// <summary>
    /// Published at timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PublishedAt {
      get { return publishedAt_; }
      set {
        publishedAt_ = value;
      }
    }

    /// <summary>Field number for the "device_profile_id" field.</summary>
    public const int DeviceProfileIdFieldNumber = 17;
    private string deviceProfileId_ = "";
    /// <summary>
    /// Device Profile UUID as string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceProfileId {
      get { return deviceProfileId_; }
      set {
        deviceProfileId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_profile_name" field.</summary>
    public const int DeviceProfileNameFieldNumber = 18;
    private string deviceProfileName_ = "";
    /// <summary>
    /// Device Profile name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceProfileName {
      get { return deviceProfileName_; }
      set {
        deviceProfileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UplinkEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UplinkEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ApplicationName != other.ApplicationName) return false;
      if (DeviceName != other.DeviceName) return false;
      if (DevEui != other.DevEui) return false;
      if(!rxInfo_.Equals(other.rxInfo_)) return false;
      if (!object.Equals(TxInfo, other.TxInfo)) return false;
      if (Adr != other.Adr) return false;
      if (Dr != other.Dr) return false;
      if (FCnt != other.FCnt) return false;
      if (FPort != other.FPort) return false;
      if (Data != other.Data) return false;
      if (ObjectJson != other.ObjectJson) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (ConfirmedUplink != other.ConfirmedUplink) return false;
      if (DevAddr != other.DevAddr) return false;
      if (!object.Equals(PublishedAt, other.PublishedAt)) return false;
      if (DeviceProfileId != other.DeviceProfileId) return false;
      if (DeviceProfileName != other.DeviceProfileName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0UL) hash ^= ApplicationId.GetHashCode();
      if (ApplicationName.Length != 0) hash ^= ApplicationName.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (DevEui.Length != 0) hash ^= DevEui.GetHashCode();
      hash ^= rxInfo_.GetHashCode();
      if (txInfo_ != null) hash ^= TxInfo.GetHashCode();
      if (Adr != false) hash ^= Adr.GetHashCode();
      if (Dr != 0) hash ^= Dr.GetHashCode();
      if (FCnt != 0) hash ^= FCnt.GetHashCode();
      if (FPort != 0) hash ^= FPort.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (ObjectJson.Length != 0) hash ^= ObjectJson.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (ConfirmedUplink != false) hash ^= ConfirmedUplink.GetHashCode();
      if (DevAddr.Length != 0) hash ^= DevAddr.GetHashCode();
      if (publishedAt_ != null) hash ^= PublishedAt.GetHashCode();
      if (DeviceProfileId.Length != 0) hash ^= DeviceProfileId.GetHashCode();
      if (DeviceProfileName.Length != 0) hash ^= DeviceProfileName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      rxInfo_.WriteTo(output, _repeated_rxInfo_codec);
      if (txInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TxInfo);
      }
      if (Adr != false) {
        output.WriteRawTag(56);
        output.WriteBool(Adr);
      }
      if (Dr != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Dr);
      }
      if (FCnt != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(FCnt);
      }
      if (FPort != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(FPort);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(Data);
      }
      if (ObjectJson.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ObjectJson);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (ConfirmedUplink != false) {
        output.WriteRawTag(112);
        output.WriteBool(ConfirmedUplink);
      }
      if (DevAddr.Length != 0) {
        output.WriteRawTag(122);
        output.WriteBytes(DevAddr);
      }
      if (publishedAt_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(PublishedAt);
      }
      if (DeviceProfileId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(DeviceProfileId);
      }
      if (DeviceProfileName.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(DeviceProfileName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      rxInfo_.WriteTo(ref output, _repeated_rxInfo_codec);
      if (txInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TxInfo);
      }
      if (Adr != false) {
        output.WriteRawTag(56);
        output.WriteBool(Adr);
      }
      if (Dr != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Dr);
      }
      if (FCnt != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(FCnt);
      }
      if (FPort != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(FPort);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(Data);
      }
      if (ObjectJson.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ObjectJson);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (ConfirmedUplink != false) {
        output.WriteRawTag(112);
        output.WriteBool(ConfirmedUplink);
      }
      if (DevAddr.Length != 0) {
        output.WriteRawTag(122);
        output.WriteBytes(DevAddr);
      }
      if (publishedAt_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(PublishedAt);
      }
      if (DeviceProfileId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(DeviceProfileId);
      }
      if (DeviceProfileName.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(DeviceProfileName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (DevEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevEui);
      }
      size += rxInfo_.CalculateSize(_repeated_rxInfo_codec);
      if (txInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TxInfo);
      }
      if (Adr != false) {
        size += 1 + 1;
      }
      if (Dr != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dr);
      }
      if (FCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FCnt);
      }
      if (FPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FPort);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (ObjectJson.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectJson);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (ConfirmedUplink != false) {
        size += 1 + 1;
      }
      if (DevAddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevAddr);
      }
      if (publishedAt_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublishedAt);
      }
      if (DeviceProfileId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeviceProfileId);
      }
      if (DeviceProfileName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeviceProfileName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UplinkEvent other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0UL) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ApplicationName.Length != 0) {
        ApplicationName = other.ApplicationName;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      if (other.DevEui.Length != 0) {
        DevEui = other.DevEui;
      }
      rxInfo_.Add(other.rxInfo_);
      if (other.txInfo_ != null) {
        if (txInfo_ == null) {
          TxInfo = new global::Chirpstack.Gateway.UplinkTXInfo();
        }
        TxInfo.MergeFrom(other.TxInfo);
      }
      if (other.Adr != false) {
        Adr = other.Adr;
      }
      if (other.Dr != 0) {
        Dr = other.Dr;
      }
      if (other.FCnt != 0) {
        FCnt = other.FCnt;
      }
      if (other.FPort != 0) {
        FPort = other.FPort;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.ObjectJson.Length != 0) {
        ObjectJson = other.ObjectJson;
      }
      tags_.Add(other.tags_);
      if (other.ConfirmedUplink != false) {
        ConfirmedUplink = other.ConfirmedUplink;
      }
      if (other.DevAddr.Length != 0) {
        DevAddr = other.DevAddr;
      }
      if (other.publishedAt_ != null) {
        if (publishedAt_ == null) {
          PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PublishedAt.MergeFrom(other.PublishedAt);
      }
      if (other.DeviceProfileId.Length != 0) {
        DeviceProfileId = other.DeviceProfileId;
      }
      if (other.DeviceProfileName.Length != 0) {
        DeviceProfileName = other.DeviceProfileName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 42: {
            rxInfo_.AddEntriesFrom(input, _repeated_rxInfo_codec);
            break;
          }
          case 50: {
            if (txInfo_ == null) {
              TxInfo = new global::Chirpstack.Gateway.UplinkTXInfo();
            }
            input.ReadMessage(TxInfo);
            break;
          }
          case 56: {
            Adr = input.ReadBool();
            break;
          }
          case 64: {
            Dr = input.ReadUInt32();
            break;
          }
          case 72: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 80: {
            FPort = input.ReadUInt32();
            break;
          }
          case 90: {
            Data = input.ReadBytes();
            break;
          }
          case 98: {
            ObjectJson = input.ReadString();
            break;
          }
          case 106: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 112: {
            ConfirmedUplink = input.ReadBool();
            break;
          }
          case 122: {
            DevAddr = input.ReadBytes();
            break;
          }
          case 130: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
          case 138: {
            DeviceProfileId = input.ReadString();
            break;
          }
          case 146: {
            DeviceProfileName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 42: {
            rxInfo_.AddEntriesFrom(ref input, _repeated_rxInfo_codec);
            break;
          }
          case 50: {
            if (txInfo_ == null) {
              TxInfo = new global::Chirpstack.Gateway.UplinkTXInfo();
            }
            input.ReadMessage(TxInfo);
            break;
          }
          case 56: {
            Adr = input.ReadBool();
            break;
          }
          case 64: {
            Dr = input.ReadUInt32();
            break;
          }
          case 72: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 80: {
            FPort = input.ReadUInt32();
            break;
          }
          case 90: {
            Data = input.ReadBytes();
            break;
          }
          case 98: {
            ObjectJson = input.ReadString();
            break;
          }
          case 106: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
          case 112: {
            ConfirmedUplink = input.ReadBool();
            break;
          }
          case 122: {
            DevAddr = input.ReadBytes();
            break;
          }
          case 130: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
          case 138: {
            DeviceProfileId = input.ReadString();
            break;
          }
          case 146: {
            DeviceProfileName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// JoinEvent is the message sent when a device joined the network.
  /// Note that this is only sent after the first received uplink after the
  /// device (re)activation.
  /// </summary>
  public sealed partial class JoinEvent : pb::IMessage<JoinEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JoinEvent> _parser = new pb::MessageParser<JoinEvent>(() => new JoinEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JoinEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chirpstack.ApplicationServer.Integration.IntegrationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinEvent(JoinEvent other) : this() {
      applicationId_ = other.applicationId_;
      applicationName_ = other.applicationName_;
      deviceName_ = other.deviceName_;
      devEui_ = other.devEui_;
      devAddr_ = other.devAddr_;
      rxInfo_ = other.rxInfo_.Clone();
      txInfo_ = other.txInfo_ != null ? other.txInfo_.Clone() : null;
      dr_ = other.dr_;
      tags_ = other.tags_.Clone();
      publishedAt_ = other.publishedAt_ != null ? other.publishedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JoinEvent Clone() {
      return new JoinEvent(this);
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private ulong applicationId_;
    /// <summary>
    /// Application ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "application_name" field.</summary>
    public const int ApplicationNameFieldNumber = 2;
    private string applicationName_ = "";
    /// <summary>
    /// Application name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ApplicationName {
      get { return applicationName_; }
      set {
        applicationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 3;
    private string deviceName_ = "";
    /// <summary>
    /// Device name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_eui" field.</summary>
    public const int DevEuiFieldNumber = 4;
    private pb::ByteString devEui_ = pb::ByteString.Empty;
    /// <summary>
    /// Device EUI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DevEui {
      get { return devEui_; }
      set {
        devEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_addr" field.</summary>
    public const int DevAddrFieldNumber = 5;
    private pb::ByteString devAddr_ = pb::ByteString.Empty;
    /// <summary>
    /// Device address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DevAddr {
      get { return devAddr_; }
      set {
        devAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rx_info" field.</summary>
    public const int RxInfoFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Chirpstack.Gateway.UplinkRXInfo> _repeated_rxInfo_codec
        = pb::FieldCodec.ForMessage(50, global::Chirpstack.Gateway.UplinkRXInfo.Parser);
    private readonly pbc::RepeatedField<global::Chirpstack.Gateway.UplinkRXInfo> rxInfo_ = new pbc::RepeatedField<global::Chirpstack.Gateway.UplinkRXInfo>();
    /// <summary>
    /// Receiving gateway RX info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Chirpstack.Gateway.UplinkRXInfo> RxInfo {
      get { return rxInfo_; }
    }

    /// <summary>Field number for the "tx_info" field.</summary>
    public const int TxInfoFieldNumber = 7;
    private global::Chirpstack.Gateway.UplinkTXInfo txInfo_;
    /// <summary>
    /// TX info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Chirpstack.Gateway.UplinkTXInfo TxInfo {
      get { return txInfo_; }
      set {
        txInfo_ = value;
      }
    }

    /// <summary>Field number for the "dr" field.</summary>
    public const int DrFieldNumber = 8;
    private uint dr_;
    /// <summary>
    /// Data-rate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Dr {
      get { return dr_; }
      set {
        dr_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// User-defined device tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "published_at" field.</summary>
    public const int PublishedAtFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp publishedAt_;
    /// <summary>
    /// Published at timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PublishedAt {
      get { return publishedAt_; }
      set {
        publishedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JoinEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JoinEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ApplicationName != other.ApplicationName) return false;
      if (DeviceName != other.DeviceName) return false;
      if (DevEui != other.DevEui) return false;
      if (DevAddr != other.DevAddr) return false;
      if(!rxInfo_.Equals(other.rxInfo_)) return false;
      if (!object.Equals(TxInfo, other.TxInfo)) return false;
      if (Dr != other.Dr) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (!object.Equals(PublishedAt, other.PublishedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0UL) hash ^= ApplicationId.GetHashCode();
      if (ApplicationName.Length != 0) hash ^= ApplicationName.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (DevEui.Length != 0) hash ^= DevEui.GetHashCode();
      if (DevAddr.Length != 0) hash ^= DevAddr.GetHashCode();
      hash ^= rxInfo_.GetHashCode();
      if (txInfo_ != null) hash ^= TxInfo.GetHashCode();
      if (Dr != 0) hash ^= Dr.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (publishedAt_ != null) hash ^= PublishedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (DevAddr.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(DevAddr);
      }
      rxInfo_.WriteTo(output, _repeated_rxInfo_codec);
      if (txInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TxInfo);
      }
      if (Dr != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Dr);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (publishedAt_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (DevAddr.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(DevAddr);
      }
      rxInfo_.WriteTo(ref output, _repeated_rxInfo_codec);
      if (txInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TxInfo);
      }
      if (Dr != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Dr);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (publishedAt_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (DevEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevEui);
      }
      if (DevAddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevAddr);
      }
      size += rxInfo_.CalculateSize(_repeated_rxInfo_codec);
      if (txInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TxInfo);
      }
      if (Dr != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dr);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (publishedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JoinEvent other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0UL) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ApplicationName.Length != 0) {
        ApplicationName = other.ApplicationName;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      if (other.DevEui.Length != 0) {
        DevEui = other.DevEui;
      }
      if (other.DevAddr.Length != 0) {
        DevAddr = other.DevAddr;
      }
      rxInfo_.Add(other.rxInfo_);
      if (other.txInfo_ != null) {
        if (txInfo_ == null) {
          TxInfo = new global::Chirpstack.Gateway.UplinkTXInfo();
        }
        TxInfo.MergeFrom(other.TxInfo);
      }
      if (other.Dr != 0) {
        Dr = other.Dr;
      }
      tags_.Add(other.tags_);
      if (other.publishedAt_ != null) {
        if (publishedAt_ == null) {
          PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PublishedAt.MergeFrom(other.PublishedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 42: {
            DevAddr = input.ReadBytes();
            break;
          }
          case 50: {
            rxInfo_.AddEntriesFrom(input, _repeated_rxInfo_codec);
            break;
          }
          case 58: {
            if (txInfo_ == null) {
              TxInfo = new global::Chirpstack.Gateway.UplinkTXInfo();
            }
            input.ReadMessage(TxInfo);
            break;
          }
          case 64: {
            Dr = input.ReadUInt32();
            break;
          }
          case 74: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 82: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 42: {
            DevAddr = input.ReadBytes();
            break;
          }
          case 50: {
            rxInfo_.AddEntriesFrom(ref input, _repeated_rxInfo_codec);
            break;
          }
          case 58: {
            if (txInfo_ == null) {
              TxInfo = new global::Chirpstack.Gateway.UplinkTXInfo();
            }
            input.ReadMessage(TxInfo);
            break;
          }
          case 64: {
            Dr = input.ReadUInt32();
            break;
          }
          case 74: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
          case 82: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// AckEvent is the message sent when a confirmation on a confirmed downlink
  /// has been received -or- when the downlink timed out.
  /// </summary>
  public sealed partial class AckEvent : pb::IMessage<AckEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AckEvent> _parser = new pb::MessageParser<AckEvent>(() => new AckEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AckEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chirpstack.ApplicationServer.Integration.IntegrationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AckEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AckEvent(AckEvent other) : this() {
      applicationId_ = other.applicationId_;
      applicationName_ = other.applicationName_;
      deviceName_ = other.deviceName_;
      devEui_ = other.devEui_;
      acknowledged_ = other.acknowledged_;
      fCnt_ = other.fCnt_;
      tags_ = other.tags_.Clone();
      publishedAt_ = other.publishedAt_ != null ? other.publishedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AckEvent Clone() {
      return new AckEvent(this);
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private ulong applicationId_;
    /// <summary>
    /// Application ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "application_name" field.</summary>
    public const int ApplicationNameFieldNumber = 2;
    private string applicationName_ = "";
    /// <summary>
    /// Application name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ApplicationName {
      get { return applicationName_; }
      set {
        applicationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 3;
    private string deviceName_ = "";
    /// <summary>
    /// Device name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_eui" field.</summary>
    public const int DevEuiFieldNumber = 4;
    private pb::ByteString devEui_ = pb::ByteString.Empty;
    /// <summary>
    /// Device EUI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DevEui {
      get { return devEui_; }
      set {
        devEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "acknowledged" field.</summary>
    public const int AcknowledgedFieldNumber = 5;
    private bool acknowledged_;
    /// <summary>
    /// Frame was acknowledged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Acknowledged {
      get { return acknowledged_; }
      set {
        acknowledged_ = value;
      }
    }

    /// <summary>Field number for the "f_cnt" field.</summary>
    public const int FCntFieldNumber = 6;
    private uint fCnt_;
    /// <summary>
    /// Downlink frame counter to which the acknowledgement relates.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FCnt {
      get { return fCnt_; }
      set {
        fCnt_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 7;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 58);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// User-defined device tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "published_at" field.</summary>
    public const int PublishedAtFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp publishedAt_;
    /// <summary>
    /// Published at timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PublishedAt {
      get { return publishedAt_; }
      set {
        publishedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AckEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AckEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ApplicationName != other.ApplicationName) return false;
      if (DeviceName != other.DeviceName) return false;
      if (DevEui != other.DevEui) return false;
      if (Acknowledged != other.Acknowledged) return false;
      if (FCnt != other.FCnt) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (!object.Equals(PublishedAt, other.PublishedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0UL) hash ^= ApplicationId.GetHashCode();
      if (ApplicationName.Length != 0) hash ^= ApplicationName.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (DevEui.Length != 0) hash ^= DevEui.GetHashCode();
      if (Acknowledged != false) hash ^= Acknowledged.GetHashCode();
      if (FCnt != 0) hash ^= FCnt.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (publishedAt_ != null) hash ^= PublishedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (Acknowledged != false) {
        output.WriteRawTag(40);
        output.WriteBool(Acknowledged);
      }
      if (FCnt != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(FCnt);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (publishedAt_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (Acknowledged != false) {
        output.WriteRawTag(40);
        output.WriteBool(Acknowledged);
      }
      if (FCnt != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(FCnt);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (publishedAt_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (DevEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevEui);
      }
      if (Acknowledged != false) {
        size += 1 + 1;
      }
      if (FCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FCnt);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (publishedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AckEvent other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0UL) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ApplicationName.Length != 0) {
        ApplicationName = other.ApplicationName;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      if (other.DevEui.Length != 0) {
        DevEui = other.DevEui;
      }
      if (other.Acknowledged != false) {
        Acknowledged = other.Acknowledged;
      }
      if (other.FCnt != 0) {
        FCnt = other.FCnt;
      }
      tags_.Add(other.tags_);
      if (other.publishedAt_ != null) {
        if (publishedAt_ == null) {
          PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PublishedAt.MergeFrom(other.PublishedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 40: {
            Acknowledged = input.ReadBool();
            break;
          }
          case 48: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 58: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 66: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 40: {
            Acknowledged = input.ReadBool();
            break;
          }
          case 48: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 58: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
          case 66: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TxAckEvent is the message sent when a downlink was acknowledged by the gateway
  /// for transmission. As a downlink can be scheduled in the future, this event
  /// does not confirm that the message has already been transmitted.
  /// </summary>
  public sealed partial class TxAckEvent : pb::IMessage<TxAckEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TxAckEvent> _parser = new pb::MessageParser<TxAckEvent>(() => new TxAckEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TxAckEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chirpstack.ApplicationServer.Integration.IntegrationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxAckEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxAckEvent(TxAckEvent other) : this() {
      applicationId_ = other.applicationId_;
      applicationName_ = other.applicationName_;
      deviceName_ = other.deviceName_;
      devEui_ = other.devEui_;
      fCnt_ = other.fCnt_;
      tags_ = other.tags_.Clone();
      gatewayId_ = other.gatewayId_;
      txInfo_ = other.txInfo_ != null ? other.txInfo_.Clone() : null;
      publishedAt_ = other.publishedAt_ != null ? other.publishedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TxAckEvent Clone() {
      return new TxAckEvent(this);
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private ulong applicationId_;
    /// <summary>
    /// Application ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "application_name" field.</summary>
    public const int ApplicationNameFieldNumber = 2;
    private string applicationName_ = "";
    /// <summary>
    /// Application name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ApplicationName {
      get { return applicationName_; }
      set {
        applicationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 3;
    private string deviceName_ = "";
    /// <summary>
    /// Device name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_eui" field.</summary>
    public const int DevEuiFieldNumber = 4;
    private pb::ByteString devEui_ = pb::ByteString.Empty;
    /// <summary>
    /// Device EUI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DevEui {
      get { return devEui_; }
      set {
        devEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "f_cnt" field.</summary>
    public const int FCntFieldNumber = 5;
    private uint fCnt_;
    /// <summary>
    /// Downlink frame-counter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FCnt {
      get { return fCnt_; }
      set {
        fCnt_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// User-defined device tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "gateway_id" field.</summary>
    public const int GatewayIdFieldNumber = 7;
    private pb::ByteString gatewayId_ = pb::ByteString.Empty;
    /// <summary>
    /// Gateway ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString GatewayId {
      get { return gatewayId_; }
      set {
        gatewayId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tx_info" field.</summary>
    public const int TxInfoFieldNumber = 8;
    private global::Chirpstack.Gateway.DownlinkTXInfo txInfo_;
    /// <summary>
    /// TX info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Chirpstack.Gateway.DownlinkTXInfo TxInfo {
      get { return txInfo_; }
      set {
        txInfo_ = value;
      }
    }

    /// <summary>Field number for the "published_at" field.</summary>
    public const int PublishedAtFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp publishedAt_;
    /// <summary>
    /// Published at timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PublishedAt {
      get { return publishedAt_; }
      set {
        publishedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TxAckEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TxAckEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ApplicationName != other.ApplicationName) return false;
      if (DeviceName != other.DeviceName) return false;
      if (DevEui != other.DevEui) return false;
      if (FCnt != other.FCnt) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (GatewayId != other.GatewayId) return false;
      if (!object.Equals(TxInfo, other.TxInfo)) return false;
      if (!object.Equals(PublishedAt, other.PublishedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0UL) hash ^= ApplicationId.GetHashCode();
      if (ApplicationName.Length != 0) hash ^= ApplicationName.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (DevEui.Length != 0) hash ^= DevEui.GetHashCode();
      if (FCnt != 0) hash ^= FCnt.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (GatewayId.Length != 0) hash ^= GatewayId.GetHashCode();
      if (txInfo_ != null) hash ^= TxInfo.GetHashCode();
      if (publishedAt_ != null) hash ^= PublishedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (FCnt != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FCnt);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (GatewayId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(GatewayId);
      }
      if (txInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TxInfo);
      }
      if (publishedAt_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (FCnt != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(FCnt);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (GatewayId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(GatewayId);
      }
      if (txInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TxInfo);
      }
      if (publishedAt_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (DevEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevEui);
      }
      if (FCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FCnt);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (GatewayId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(GatewayId);
      }
      if (txInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TxInfo);
      }
      if (publishedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TxAckEvent other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0UL) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ApplicationName.Length != 0) {
        ApplicationName = other.ApplicationName;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      if (other.DevEui.Length != 0) {
        DevEui = other.DevEui;
      }
      if (other.FCnt != 0) {
        FCnt = other.FCnt;
      }
      tags_.Add(other.tags_);
      if (other.GatewayId.Length != 0) {
        GatewayId = other.GatewayId;
      }
      if (other.txInfo_ != null) {
        if (txInfo_ == null) {
          TxInfo = new global::Chirpstack.Gateway.DownlinkTXInfo();
        }
        TxInfo.MergeFrom(other.TxInfo);
      }
      if (other.publishedAt_ != null) {
        if (publishedAt_ == null) {
          PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PublishedAt.MergeFrom(other.PublishedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 40: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 50: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 58: {
            GatewayId = input.ReadBytes();
            break;
          }
          case 66: {
            if (txInfo_ == null) {
              TxInfo = new global::Chirpstack.Gateway.DownlinkTXInfo();
            }
            input.ReadMessage(TxInfo);
            break;
          }
          case 74: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 40: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 50: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
          case 58: {
            GatewayId = input.ReadBytes();
            break;
          }
          case 66: {
            if (txInfo_ == null) {
              TxInfo = new global::Chirpstack.Gateway.DownlinkTXInfo();
            }
            input.ReadMessage(TxInfo);
            break;
          }
          case 74: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ErrorEvent is the message sent when an error occurred.
  /// </summary>
  public sealed partial class ErrorEvent : pb::IMessage<ErrorEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ErrorEvent> _parser = new pb::MessageParser<ErrorEvent>(() => new ErrorEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ErrorEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chirpstack.ApplicationServer.Integration.IntegrationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorEvent(ErrorEvent other) : this() {
      applicationId_ = other.applicationId_;
      applicationName_ = other.applicationName_;
      deviceName_ = other.deviceName_;
      devEui_ = other.devEui_;
      type_ = other.type_;
      error_ = other.error_;
      fCnt_ = other.fCnt_;
      tags_ = other.tags_.Clone();
      publishedAt_ = other.publishedAt_ != null ? other.publishedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorEvent Clone() {
      return new ErrorEvent(this);
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private ulong applicationId_;
    /// <summary>
    /// Application ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "application_name" field.</summary>
    public const int ApplicationNameFieldNumber = 2;
    private string applicationName_ = "";
    /// <summary>
    /// Application name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ApplicationName {
      get { return applicationName_; }
      set {
        applicationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 3;
    private string deviceName_ = "";
    /// <summary>
    /// Device name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_eui" field.</summary>
    public const int DevEuiFieldNumber = 4;
    private pb::ByteString devEui_ = pb::ByteString.Empty;
    /// <summary>
    /// Device EUI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DevEui {
      get { return devEui_; }
      set {
        devEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::Chirpstack.ApplicationServer.Integration.ErrorType type_ = global::Chirpstack.ApplicationServer.Integration.ErrorType.Unknown;
    /// <summary>
    /// Error type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Chirpstack.ApplicationServer.Integration.ErrorType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 6;
    private string error_ = "";
    /// <summary>
    /// Error message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "f_cnt" field.</summary>
    public const int FCntFieldNumber = 7;
    private uint fCnt_;
    /// <summary>
    /// Downlink frame-counter (in case the downlink is related to a scheduled downlink).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FCnt {
      get { return fCnt_; }
      set {
        fCnt_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 66);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// User-defined device tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "published_at" field.</summary>
    public const int PublishedAtFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp publishedAt_;
    /// <summary>
    /// Published at timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PublishedAt {
      get { return publishedAt_; }
      set {
        publishedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ErrorEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ErrorEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ApplicationName != other.ApplicationName) return false;
      if (DeviceName != other.DeviceName) return false;
      if (DevEui != other.DevEui) return false;
      if (Type != other.Type) return false;
      if (Error != other.Error) return false;
      if (FCnt != other.FCnt) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (!object.Equals(PublishedAt, other.PublishedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0UL) hash ^= ApplicationId.GetHashCode();
      if (ApplicationName.Length != 0) hash ^= ApplicationName.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (DevEui.Length != 0) hash ^= DevEui.GetHashCode();
      if (Type != global::Chirpstack.ApplicationServer.Integration.ErrorType.Unknown) hash ^= Type.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (FCnt != 0) hash ^= FCnt.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (publishedAt_ != null) hash ^= PublishedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (Type != global::Chirpstack.ApplicationServer.Integration.ErrorType.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Error);
      }
      if (FCnt != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(FCnt);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (publishedAt_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (Type != global::Chirpstack.ApplicationServer.Integration.ErrorType.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Error);
      }
      if (FCnt != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(FCnt);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (publishedAt_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (DevEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevEui);
      }
      if (Type != global::Chirpstack.ApplicationServer.Integration.ErrorType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (FCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FCnt);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (publishedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ErrorEvent other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0UL) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ApplicationName.Length != 0) {
        ApplicationName = other.ApplicationName;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      if (other.DevEui.Length != 0) {
        DevEui = other.DevEui;
      }
      if (other.Type != global::Chirpstack.ApplicationServer.Integration.ErrorType.Unknown) {
        Type = other.Type;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.FCnt != 0) {
        FCnt = other.FCnt;
      }
      tags_.Add(other.tags_);
      if (other.publishedAt_ != null) {
        if (publishedAt_ == null) {
          PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PublishedAt.MergeFrom(other.PublishedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 40: {
            Type = (global::Chirpstack.ApplicationServer.Integration.ErrorType) input.ReadEnum();
            break;
          }
          case 50: {
            Error = input.ReadString();
            break;
          }
          case 56: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 66: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 74: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 40: {
            Type = (global::Chirpstack.ApplicationServer.Integration.ErrorType) input.ReadEnum();
            break;
          }
          case 50: {
            Error = input.ReadString();
            break;
          }
          case 56: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 66: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
          case 74: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// StatusEvent is the message sent when a device-status mac-command was sent
  /// by the device.
  /// </summary>
  public sealed partial class StatusEvent : pb::IMessage<StatusEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StatusEvent> _parser = new pb::MessageParser<StatusEvent>(() => new StatusEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StatusEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chirpstack.ApplicationServer.Integration.IntegrationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatusEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatusEvent(StatusEvent other) : this() {
      applicationId_ = other.applicationId_;
      applicationName_ = other.applicationName_;
      deviceName_ = other.deviceName_;
      devEui_ = other.devEui_;
      margin_ = other.margin_;
      externalPowerSource_ = other.externalPowerSource_;
      batteryLevelUnavailable_ = other.batteryLevelUnavailable_;
      batteryLevel_ = other.batteryLevel_;
      tags_ = other.tags_.Clone();
      publishedAt_ = other.publishedAt_ != null ? other.publishedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StatusEvent Clone() {
      return new StatusEvent(this);
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private ulong applicationId_;
    /// <summary>
    /// Application ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "application_name" field.</summary>
    public const int ApplicationNameFieldNumber = 2;
    private string applicationName_ = "";
    /// <summary>
    /// Application name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ApplicationName {
      get { return applicationName_; }
      set {
        applicationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 3;
    private string deviceName_ = "";
    /// <summary>
    /// Device name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_eui" field.</summary>
    public const int DevEuiFieldNumber = 4;
    private pb::ByteString devEui_ = pb::ByteString.Empty;
    /// <summary>
    /// Device EUI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DevEui {
      get { return devEui_; }
      set {
        devEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "margin" field.</summary>
    public const int MarginFieldNumber = 5;
    private int margin_;
    /// <summary>
    /// The demodulation signal-to-noise ratio in dB for the last successfully
    /// received device-status request by the Network Server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Margin {
      get { return margin_; }
      set {
        margin_ = value;
      }
    }

    /// <summary>Field number for the "external_power_source" field.</summary>
    public const int ExternalPowerSourceFieldNumber = 6;
    private bool externalPowerSource_;
    /// <summary>
    /// Device is connected to an external power source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ExternalPowerSource {
      get { return externalPowerSource_; }
      set {
        externalPowerSource_ = value;
      }
    }

    /// <summary>Field number for the "battery_level_unavailable" field.</summary>
    public const int BatteryLevelUnavailableFieldNumber = 7;
    private bool batteryLevelUnavailable_;
    /// <summary>
    /// Battery level is not available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BatteryLevelUnavailable {
      get { return batteryLevelUnavailable_; }
      set {
        batteryLevelUnavailable_ = value;
      }
    }

    /// <summary>Field number for the "battery_level" field.</summary>
    public const int BatteryLevelFieldNumber = 8;
    private float batteryLevel_;
    /// <summary>
    /// Battery level.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BatteryLevel {
      get { return batteryLevel_; }
      set {
        batteryLevel_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// User-defined device tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "published_at" field.</summary>
    public const int PublishedAtFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp publishedAt_;
    /// <summary>
    /// Published at timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PublishedAt {
      get { return publishedAt_; }
      set {
        publishedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StatusEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StatusEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ApplicationName != other.ApplicationName) return false;
      if (DeviceName != other.DeviceName) return false;
      if (DevEui != other.DevEui) return false;
      if (Margin != other.Margin) return false;
      if (ExternalPowerSource != other.ExternalPowerSource) return false;
      if (BatteryLevelUnavailable != other.BatteryLevelUnavailable) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BatteryLevel, other.BatteryLevel)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (!object.Equals(PublishedAt, other.PublishedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0UL) hash ^= ApplicationId.GetHashCode();
      if (ApplicationName.Length != 0) hash ^= ApplicationName.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (DevEui.Length != 0) hash ^= DevEui.GetHashCode();
      if (Margin != 0) hash ^= Margin.GetHashCode();
      if (ExternalPowerSource != false) hash ^= ExternalPowerSource.GetHashCode();
      if (BatteryLevelUnavailable != false) hash ^= BatteryLevelUnavailable.GetHashCode();
      if (BatteryLevel != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BatteryLevel);
      hash ^= Tags.GetHashCode();
      if (publishedAt_ != null) hash ^= PublishedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (Margin != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Margin);
      }
      if (ExternalPowerSource != false) {
        output.WriteRawTag(48);
        output.WriteBool(ExternalPowerSource);
      }
      if (BatteryLevelUnavailable != false) {
        output.WriteRawTag(56);
        output.WriteBool(BatteryLevelUnavailable);
      }
      if (BatteryLevel != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(BatteryLevel);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (publishedAt_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (Margin != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Margin);
      }
      if (ExternalPowerSource != false) {
        output.WriteRawTag(48);
        output.WriteBool(ExternalPowerSource);
      }
      if (BatteryLevelUnavailable != false) {
        output.WriteRawTag(56);
        output.WriteBool(BatteryLevelUnavailable);
      }
      if (BatteryLevel != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(BatteryLevel);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (publishedAt_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (DevEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevEui);
      }
      if (Margin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Margin);
      }
      if (ExternalPowerSource != false) {
        size += 1 + 1;
      }
      if (BatteryLevelUnavailable != false) {
        size += 1 + 1;
      }
      if (BatteryLevel != 0F) {
        size += 1 + 4;
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (publishedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StatusEvent other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0UL) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ApplicationName.Length != 0) {
        ApplicationName = other.ApplicationName;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      if (other.DevEui.Length != 0) {
        DevEui = other.DevEui;
      }
      if (other.Margin != 0) {
        Margin = other.Margin;
      }
      if (other.ExternalPowerSource != false) {
        ExternalPowerSource = other.ExternalPowerSource;
      }
      if (other.BatteryLevelUnavailable != false) {
        BatteryLevelUnavailable = other.BatteryLevelUnavailable;
      }
      if (other.BatteryLevel != 0F) {
        BatteryLevel = other.BatteryLevel;
      }
      tags_.Add(other.tags_);
      if (other.publishedAt_ != null) {
        if (publishedAt_ == null) {
          PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PublishedAt.MergeFrom(other.PublishedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 40: {
            Margin = input.ReadInt32();
            break;
          }
          case 48: {
            ExternalPowerSource = input.ReadBool();
            break;
          }
          case 56: {
            BatteryLevelUnavailable = input.ReadBool();
            break;
          }
          case 69: {
            BatteryLevel = input.ReadFloat();
            break;
          }
          case 74: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 82: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 40: {
            Margin = input.ReadInt32();
            break;
          }
          case 48: {
            ExternalPowerSource = input.ReadBool();
            break;
          }
          case 56: {
            BatteryLevelUnavailable = input.ReadBool();
            break;
          }
          case 69: {
            BatteryLevel = input.ReadFloat();
            break;
          }
          case 74: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
          case 82: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LocationEvent is the message sent when a geolocation resolve was returned.
  /// </summary>
  public sealed partial class LocationEvent : pb::IMessage<LocationEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationEvent> _parser = new pb::MessageParser<LocationEvent>(() => new LocationEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocationEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chirpstack.ApplicationServer.Integration.IntegrationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocationEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocationEvent(LocationEvent other) : this() {
      applicationId_ = other.applicationId_;
      applicationName_ = other.applicationName_;
      deviceName_ = other.deviceName_;
      devEui_ = other.devEui_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      tags_ = other.tags_.Clone();
      uplinkIds_ = other.uplinkIds_.Clone();
      fCnt_ = other.fCnt_;
      publishedAt_ = other.publishedAt_ != null ? other.publishedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocationEvent Clone() {
      return new LocationEvent(this);
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private ulong applicationId_;
    /// <summary>
    /// Application ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "application_name" field.</summary>
    public const int ApplicationNameFieldNumber = 2;
    private string applicationName_ = "";
    /// <summary>
    /// Application name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ApplicationName {
      get { return applicationName_; }
      set {
        applicationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 3;
    private string deviceName_ = "";
    /// <summary>
    /// Device name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_eui" field.</summary>
    public const int DevEuiFieldNumber = 4;
    private pb::ByteString devEui_ = pb::ByteString.Empty;
    /// <summary>
    /// Device EUI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DevEui {
      get { return devEui_; }
      set {
        devEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 5;
    private global::Chirpstack.Common.Location location_;
    /// <summary>
    /// Location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Chirpstack.Common.Location Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// User-defined device tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "uplink_ids" field.</summary>
    public const int UplinkIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_uplinkIds_codec
        = pb::FieldCodec.ForBytes(58);
    private readonly pbc::RepeatedField<pb::ByteString> uplinkIds_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// Uplink IDs used for geolocation.
    /// This is set in case the geolocation is based on the uplink meta-data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> UplinkIds {
      get { return uplinkIds_; }
    }

    /// <summary>Field number for the "f_cnt" field.</summary>
    public const int FCntFieldNumber = 8;
    private uint fCnt_;
    /// <summary>
    /// Frame counter (in case the geolocation is based on the payload).
    /// This is set in case the geolocation is based on the uplink payload content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FCnt {
      get { return fCnt_; }
      set {
        fCnt_ = value;
      }
    }

    /// <summary>Field number for the "published_at" field.</summary>
    public const int PublishedAtFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp publishedAt_;
    /// <summary>
    /// Published at timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PublishedAt {
      get { return publishedAt_; }
      set {
        publishedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocationEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocationEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ApplicationName != other.ApplicationName) return false;
      if (DeviceName != other.DeviceName) return false;
      if (DevEui != other.DevEui) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if(!uplinkIds_.Equals(other.uplinkIds_)) return false;
      if (FCnt != other.FCnt) return false;
      if (!object.Equals(PublishedAt, other.PublishedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0UL) hash ^= ApplicationId.GetHashCode();
      if (ApplicationName.Length != 0) hash ^= ApplicationName.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (DevEui.Length != 0) hash ^= DevEui.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      hash ^= Tags.GetHashCode();
      hash ^= uplinkIds_.GetHashCode();
      if (FCnt != 0) hash ^= FCnt.GetHashCode();
      if (publishedAt_ != null) hash ^= PublishedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (location_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Location);
      }
      tags_.WriteTo(output, _map_tags_codec);
      uplinkIds_.WriteTo(output, _repeated_uplinkIds_codec);
      if (FCnt != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(FCnt);
      }
      if (publishedAt_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      if (location_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Location);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      uplinkIds_.WriteTo(ref output, _repeated_uplinkIds_codec);
      if (FCnt != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(FCnt);
      }
      if (publishedAt_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (DevEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevEui);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      size += uplinkIds_.CalculateSize(_repeated_uplinkIds_codec);
      if (FCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FCnt);
      }
      if (publishedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocationEvent other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0UL) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ApplicationName.Length != 0) {
        ApplicationName = other.ApplicationName;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      if (other.DevEui.Length != 0) {
        DevEui = other.DevEui;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Chirpstack.Common.Location();
        }
        Location.MergeFrom(other.Location);
      }
      tags_.Add(other.tags_);
      uplinkIds_.Add(other.uplinkIds_);
      if (other.FCnt != 0) {
        FCnt = other.FCnt;
      }
      if (other.publishedAt_ != null) {
        if (publishedAt_ == null) {
          PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PublishedAt.MergeFrom(other.PublishedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 42: {
            if (location_ == null) {
              Location = new global::Chirpstack.Common.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 50: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 58: {
            uplinkIds_.AddEntriesFrom(input, _repeated_uplinkIds_codec);
            break;
          }
          case 64: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 74: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 42: {
            if (location_ == null) {
              Location = new global::Chirpstack.Common.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 50: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
          case 58: {
            uplinkIds_.AddEntriesFrom(ref input, _repeated_uplinkIds_codec);
            break;
          }
          case 64: {
            FCnt = input.ReadUInt32();
            break;
          }
          case 74: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// IntegrationEvent is the message that can be sent by an integration.
  /// It allows for sending events which are provided by an external integration
  /// which are "not native" to ChirpStack.
  /// </summary>
  public sealed partial class IntegrationEvent : pb::IMessage<IntegrationEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IntegrationEvent> _parser = new pb::MessageParser<IntegrationEvent>(() => new IntegrationEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IntegrationEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chirpstack.ApplicationServer.Integration.IntegrationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IntegrationEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IntegrationEvent(IntegrationEvent other) : this() {
      applicationId_ = other.applicationId_;
      applicationName_ = other.applicationName_;
      deviceName_ = other.deviceName_;
      devEui_ = other.devEui_;
      tags_ = other.tags_.Clone();
      integrationName_ = other.integrationName_;
      eventType_ = other.eventType_;
      objectJson_ = other.objectJson_;
      publishedAt_ = other.publishedAt_ != null ? other.publishedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IntegrationEvent Clone() {
      return new IntegrationEvent(this);
    }

    /// <summary>Field number for the "application_id" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private ulong applicationId_;
    /// <summary>
    /// Application ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "application_name" field.</summary>
    public const int ApplicationNameFieldNumber = 2;
    private string applicationName_ = "";
    /// <summary>
    /// Application name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ApplicationName {
      get { return applicationName_; }
      set {
        applicationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 3;
    private string deviceName_ = "";
    /// <summary>
    /// Device name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_eui" field.</summary>
    public const int DevEuiFieldNumber = 4;
    private pb::ByteString devEui_ = pb::ByteString.Empty;
    /// <summary>
    /// Device EUI.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DevEui {
      get { return devEui_; }
      set {
        devEui_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    /// <summary>
    /// User-defined device tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "integration_name" field.</summary>
    public const int IntegrationNameFieldNumber = 6;
    private string integrationName_ = "";
    /// <summary>
    /// Integration name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IntegrationName {
      get { return integrationName_; }
      set {
        integrationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 7;
    private string eventType_ = "";
    /// <summary>
    /// Event type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventType {
      get { return eventType_; }
      set {
        eventType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object_json" field.</summary>
    public const int ObjectJsonFieldNumber = 8;
    private string objectJson_ = "";
    /// <summary>
    /// JSON string containing the event object.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ObjectJson {
      get { return objectJson_; }
      set {
        objectJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "published_at" field.</summary>
    public const int PublishedAtFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp publishedAt_;
    /// <summary>
    /// Published at timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PublishedAt {
      get { return publishedAt_; }
      set {
        publishedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IntegrationEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IntegrationEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (ApplicationName != other.ApplicationName) return false;
      if (DeviceName != other.DeviceName) return false;
      if (DevEui != other.DevEui) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (IntegrationName != other.IntegrationName) return false;
      if (EventType != other.EventType) return false;
      if (ObjectJson != other.ObjectJson) return false;
      if (!object.Equals(PublishedAt, other.PublishedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0UL) hash ^= ApplicationId.GetHashCode();
      if (ApplicationName.Length != 0) hash ^= ApplicationName.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (DevEui.Length != 0) hash ^= DevEui.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (IntegrationName.Length != 0) hash ^= IntegrationName.GetHashCode();
      if (EventType.Length != 0) hash ^= EventType.GetHashCode();
      if (ObjectJson.Length != 0) hash ^= ObjectJson.GetHashCode();
      if (publishedAt_ != null) hash ^= PublishedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (IntegrationName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(IntegrationName);
      }
      if (EventType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(EventType);
      }
      if (ObjectJson.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ObjectJson);
      }
      if (publishedAt_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApplicationId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      if (DevEui.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DevEui);
      }
      tags_.WriteTo(ref output, _map_tags_codec);
      if (IntegrationName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(IntegrationName);
      }
      if (EventType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(EventType);
      }
      if (ObjectJson.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ObjectJson);
      }
      if (publishedAt_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PublishedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ApplicationId);
      }
      if (ApplicationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationName);
      }
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (DevEui.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DevEui);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (IntegrationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IntegrationName);
      }
      if (EventType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventType);
      }
      if (ObjectJson.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectJson);
      }
      if (publishedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IntegrationEvent other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0UL) {
        ApplicationId = other.ApplicationId;
      }
      if (other.ApplicationName.Length != 0) {
        ApplicationName = other.ApplicationName;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      if (other.DevEui.Length != 0) {
        DevEui = other.DevEui;
      }
      tags_.Add(other.tags_);
      if (other.IntegrationName.Length != 0) {
        IntegrationName = other.IntegrationName;
      }
      if (other.EventType.Length != 0) {
        EventType = other.EventType;
      }
      if (other.ObjectJson.Length != 0) {
        ObjectJson = other.ObjectJson;
      }
      if (other.publishedAt_ != null) {
        if (publishedAt_ == null) {
          PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PublishedAt.MergeFrom(other.PublishedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 42: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 50: {
            IntegrationName = input.ReadString();
            break;
          }
          case 58: {
            EventType = input.ReadString();
            break;
          }
          case 66: {
            ObjectJson = input.ReadString();
            break;
          }
          case 74: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ApplicationId = input.ReadUInt64();
            break;
          }
          case 18: {
            ApplicationName = input.ReadString();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            DevEui = input.ReadBytes();
            break;
          }
          case 42: {
            tags_.AddEntriesFrom(ref input, _map_tags_codec);
            break;
          }
          case 50: {
            IntegrationName = input.ReadString();
            break;
          }
          case 58: {
            EventType = input.ReadString();
            break;
          }
          case 66: {
            ObjectJson = input.ReadString();
            break;
          }
          case 74: {
            if (publishedAt_ == null) {
              PublishedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PublishedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
