"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import google.protobuf.empty_pb2
import grpc

from .serviceProfile_pb2 import *
# ServiceProfileService is the service managing service-profiles.
class ServiceProfileServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    # Create creates the given service-profile.
    Create:grpc.UnaryUnaryMultiCallable[
        global___CreateServiceProfileRequest,
        global___CreateServiceProfileResponse] = ...

    # Get returns the service-profile matching the given id.
    Get:grpc.UnaryUnaryMultiCallable[
        global___GetServiceProfileRequest,
        global___GetServiceProfileResponse] = ...

    # Update updates the given serviceprofile.
    Update:grpc.UnaryUnaryMultiCallable[
        global___UpdateServiceProfileRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # Delete deletes the service-profile matching the given id.
    Delete:grpc.UnaryUnaryMultiCallable[
        global___DeleteServiceProfileRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # List lists the available service-profiles.
    List:grpc.UnaryUnaryMultiCallable[
        global___ListServiceProfileRequest,
        global___ListServiceProfileResponse] = ...


# ServiceProfileService is the service managing service-profiles.
class ServiceProfileServiceServicer(metaclass=abc.ABCMeta):
    # Create creates the given service-profile.
    @abc.abstractmethod
    def Create(self,
        request: global___CreateServiceProfileRequest,
        context: grpc.ServicerContext,
    ) -> global___CreateServiceProfileResponse: ...

    # Get returns the service-profile matching the given id.
    @abc.abstractmethod
    def Get(self,
        request: global___GetServiceProfileRequest,
        context: grpc.ServicerContext,
    ) -> global___GetServiceProfileResponse: ...

    # Update updates the given serviceprofile.
    @abc.abstractmethod
    def Update(self,
        request: global___UpdateServiceProfileRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # Delete deletes the service-profile matching the given id.
    @abc.abstractmethod
    def Delete(self,
        request: global___DeleteServiceProfileRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # List lists the available service-profiles.
    @abc.abstractmethod
    def List(self,
        request: global___ListServiceProfileRequest,
        context: grpc.ServicerContext,
    ) -> global___ListServiceProfileResponse: ...


def add_ServiceProfileServiceServicer_to_server(servicer: ServiceProfileServiceServicer, server: grpc.Server) -> None: ...
