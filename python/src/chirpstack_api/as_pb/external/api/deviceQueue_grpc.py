# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: chirpstack-api/as_pb/external/api/deviceQueue.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import google.protobuf.empty_pb2
import chirpstack_api.as_pb.external.api.deviceQueue_pb2


class DeviceQueueServiceBase(abc.ABC):

    @abc.abstractmethod
    async def Enqueue(self, stream: 'grpclib.server.Stream[chirpstack_api.as_pb.external.api.deviceQueue_pb2.EnqueueDeviceQueueItemRequest, chirpstack_api.as_pb.external.api.deviceQueue_pb2.EnqueueDeviceQueueItemResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Flush(self, stream: 'grpclib.server.Stream[chirpstack_api.as_pb.external.api.deviceQueue_pb2.FlushDeviceQueueRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def List(self, stream: 'grpclib.server.Stream[chirpstack_api.as_pb.external.api.deviceQueue_pb2.ListDeviceQueueItemsRequest, chirpstack_api.as_pb.external.api.deviceQueue_pb2.ListDeviceQueueItemsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/api.DeviceQueueService/Enqueue': grpclib.const.Handler(
                self.Enqueue,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.as_pb.external.api.deviceQueue_pb2.EnqueueDeviceQueueItemRequest,
                chirpstack_api.as_pb.external.api.deviceQueue_pb2.EnqueueDeviceQueueItemResponse,
            ),
            '/api.DeviceQueueService/Flush': grpclib.const.Handler(
                self.Flush,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.as_pb.external.api.deviceQueue_pb2.FlushDeviceQueueRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/api.DeviceQueueService/List': grpclib.const.Handler(
                self.List,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.as_pb.external.api.deviceQueue_pb2.ListDeviceQueueItemsRequest,
                chirpstack_api.as_pb.external.api.deviceQueue_pb2.ListDeviceQueueItemsResponse,
            ),
        }


class DeviceQueueServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Enqueue = grpclib.client.UnaryUnaryMethod(
            channel,
            '/api.DeviceQueueService/Enqueue',
            chirpstack_api.as_pb.external.api.deviceQueue_pb2.EnqueueDeviceQueueItemRequest,
            chirpstack_api.as_pb.external.api.deviceQueue_pb2.EnqueueDeviceQueueItemResponse,
        )
        self.Flush = grpclib.client.UnaryUnaryMethod(
            channel,
            '/api.DeviceQueueService/Flush',
            chirpstack_api.as_pb.external.api.deviceQueue_pb2.FlushDeviceQueueRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.List = grpclib.client.UnaryUnaryMethod(
            channel,
            '/api.DeviceQueueService/List',
            chirpstack_api.as_pb.external.api.deviceQueue_pb2.ListDeviceQueueItemsRequest,
            chirpstack_api.as_pb.external.api.deviceQueue_pb2.ListDeviceQueueItemsResponse,
        )
