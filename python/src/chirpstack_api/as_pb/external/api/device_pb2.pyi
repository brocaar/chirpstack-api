"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import chirpstack_api.as_pb.external.api.frameLog_pb2
import chirpstack_api.common.common_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Device(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class VariablesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    DEV_EUI_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    APPLICATION_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DEVICE_PROFILE_ID_FIELD_NUMBER: builtins.int
    SKIP_F_CNT_CHECK_FIELD_NUMBER: builtins.int
    REFERENCE_ALTITUDE_FIELD_NUMBER: builtins.int
    VARIABLES_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    IS_DISABLED_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    # Name of the device (if left blank, it will be set to the DevEUI).
    name: typing.Text = ...
    # ID of the application to which the device must be added.
    # It is possible to move a device to a different application on update,
    # given that both the old and the new application share the same
    # service-profile.
    application_id: builtins.int = ...
    # Description of the device.
    description: typing.Text = ...
    # DeviceProfileID attached to the device.
    device_profile_id: typing.Text = ...
    # Skip frame-counter checks (this is insecure, but could be helpful for debugging).
    skip_f_cnt_check: builtins.bool = ...
    # Reference altitude.
    # When using geolocation, this altitude will be used as a reference
    # (when supported by the geolocation-server) to increase geolocation
    # accuracy.
    reference_altitude: builtins.float = ...
    # Variables (user defined).
    # These variables can be used together with integrations to store tokens /
    # secrets that must be configured per device. These variables are not
    # exposed in the event payloads.
    @property
    def variables(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    # Tags (user defined).
    # These tags are exposed in the event payloads or to integration. Tags are
    # intended for aggregation and filtering.
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    # Device is disabled.
    is_disabled: builtins.bool = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        name : typing.Text = ...,
        application_id : builtins.int = ...,
        description : typing.Text = ...,
        device_profile_id : typing.Text = ...,
        skip_f_cnt_check : builtins.bool = ...,
        reference_altitude : builtins.float = ...,
        variables : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        tags : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        is_disabled : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"application_id",b"application_id",u"description",b"description",u"dev_eui",b"dev_eui",u"device_profile_id",b"device_profile_id",u"is_disabled",b"is_disabled",u"name",b"name",u"reference_altitude",b"reference_altitude",u"skip_f_cnt_check",b"skip_f_cnt_check",u"tags",b"tags",u"variables",b"variables"]) -> None: ...
global___Device = Device

class DeviceListItem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    APPLICATION_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    DEVICE_PROFILE_ID_FIELD_NUMBER: builtins.int
    DEVICE_PROFILE_NAME_FIELD_NUMBER: builtins.int
    DEVICE_STATUS_BATTERY_FIELD_NUMBER: builtins.int
    DEVICE_STATUS_MARGIN_FIELD_NUMBER: builtins.int
    DEVICE_STATUS_EXTERNAL_POWER_SOURCE_FIELD_NUMBER: builtins.int
    DEVICE_STATUS_BATTERY_LEVEL_UNAVAILABLE_FIELD_NUMBER: builtins.int
    DEVICE_STATUS_BATTERY_LEVEL_FIELD_NUMBER: builtins.int
    LAST_SEEN_AT_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    # Name of the device.
    name: typing.Text = ...
    # Application ID.
    application_id: builtins.int = ...
    # Description of the device.
    description: typing.Text = ...
    # Device-profile ID attached to the device.
    device_profile_id: typing.Text = ...
    # Device-profile name.
    device_profile_name: typing.Text = ...
    # The device battery status (deprecated, use device_status_battery_level).
    # 0:      The end-device is connected to an external power source
    # 1..254: The battery level, 1 being at minimum and 254 being at maximum
    # 255:    The end-device was not able to measure the battery level
    # 256:    The device-status is not available.
    device_status_battery: builtins.int = ...
    # The device margin status
    # -32..32: The demodulation SNR ration in dB
    # 256:     The device-status is not available.
    device_status_margin: builtins.int = ...
    # Device is connected to an external power source.
    device_status_external_power_source: builtins.bool = ...
    # Device battery status is unavailable.
    device_status_battery_level_unavailable: builtins.bool = ...
    # Device battery level as a percentage.
    device_status_battery_level: builtins.float = ...
    # The last time the application-server received any data from the device,
    # or an empty string when the device never sent any data.
    @property
    def last_seen_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        name : typing.Text = ...,
        application_id : builtins.int = ...,
        description : typing.Text = ...,
        device_profile_id : typing.Text = ...,
        device_profile_name : typing.Text = ...,
        device_status_battery : builtins.int = ...,
        device_status_margin : builtins.int = ...,
        device_status_external_power_source : builtins.bool = ...,
        device_status_battery_level_unavailable : builtins.bool = ...,
        device_status_battery_level : builtins.float = ...,
        last_seen_at : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"last_seen_at",b"last_seen_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"application_id",b"application_id",u"description",b"description",u"dev_eui",b"dev_eui",u"device_profile_id",b"device_profile_id",u"device_profile_name",b"device_profile_name",u"device_status_battery",b"device_status_battery",u"device_status_battery_level",b"device_status_battery_level",u"device_status_battery_level_unavailable",b"device_status_battery_level_unavailable",u"device_status_external_power_source",b"device_status_external_power_source",u"device_status_margin",b"device_status_margin",u"last_seen_at",b"last_seen_at",u"name",b"name"]) -> None: ...
global___DeviceListItem = DeviceListItem

class DeviceKeys(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    NWK_KEY_FIELD_NUMBER: builtins.int
    APP_KEY_FIELD_NUMBER: builtins.int
    GEN_APP_KEY_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    # Network root key (HEX encoded).
    # Note: For LoRaWAN 1.0.x, use this field for the LoRaWAN 1.0.x 'AppKey`!
    nwk_key: typing.Text = ...
    # Application root key (HEX encoded).
    # Note: This field only needs to be set for LoRaWAN 1.1.x devices!
    app_key: typing.Text = ...
    # Gen application key (HEX encoded).
    # This is an optional key that only must be set for LORaWAN 1.0.x devices
    # that implement the remote multicast setup specification.
    gen_app_key: typing.Text = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        nwk_key : typing.Text = ...,
        app_key : typing.Text = ...,
        gen_app_key : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"app_key",b"app_key",u"dev_eui",b"dev_eui",u"gen_app_key",b"gen_app_key",u"nwk_key",b"nwk_key"]) -> None: ...
global___DeviceKeys = DeviceKeys

class CreateDeviceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEVICE_FIELD_NUMBER: builtins.int
    # Device object to create.
    @property
    def device(self) -> global___Device: ...
    def __init__(self,
        *,
        device : typing.Optional[global___Device] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"device",b"device"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"device",b"device"]) -> None: ...
global___CreateDeviceRequest = CreateDeviceRequest

class GetDeviceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_eui",b"dev_eui"]) -> None: ...
global___GetDeviceRequest = GetDeviceRequest

class GetDeviceResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEVICE_FIELD_NUMBER: builtins.int
    LAST_SEEN_AT_FIELD_NUMBER: builtins.int
    DEVICE_STATUS_BATTERY_FIELD_NUMBER: builtins.int
    DEVICE_STATUS_MARGIN_FIELD_NUMBER: builtins.int
    LOCATION_FIELD_NUMBER: builtins.int
    # Device object.
    @property
    def device(self) -> global___Device: ...
    # Created at 2
    # Updated at 3
    # First seen at 4

    # Last seen timestamp.
    @property
    def last_seen_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    # The device battery status
    # 0:      The end-device is connected to an external power source
    # 1..254: The battery level, 1 being at minimum and 254 being at maximum
    # 255:    The end-device was not able to measure the battery level
    # 256:    The device-status is not available.
    device_status_battery: builtins.int = ...
    # The device margin status
    # -32..32: The demodulation SNR ration in dB
    # 256:     The device-status is not available.
    device_status_margin: builtins.int = ...
    # Device location.
    # This will set when the network-server was able to resolve the location
    # using the geolocation-server.
    @property
    def location(self) -> chirpstack_api.common.common_pb2.Location: ...
    def __init__(self,
        *,
        device : typing.Optional[global___Device] = ...,
        last_seen_at : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        device_status_battery : builtins.int = ...,
        device_status_margin : builtins.int = ...,
        location : typing.Optional[chirpstack_api.common.common_pb2.Location] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"device",b"device",u"last_seen_at",b"last_seen_at",u"location",b"location"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"device",b"device",u"device_status_battery",b"device_status_battery",u"device_status_margin",b"device_status_margin",u"last_seen_at",b"last_seen_at",u"location",b"location"]) -> None: ...
global___GetDeviceResponse = GetDeviceResponse

class ListDeviceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TagsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    LIMIT_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    APPLICATION_ID_FIELD_NUMBER: builtins.int
    SEARCH_FIELD_NUMBER: builtins.int
    MULTICAST_GROUP_ID_FIELD_NUMBER: builtins.int
    SERVICE_PROFILE_ID_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    # Max number of devices to return in the result-set.
    limit: builtins.int = ...
    # Offset in the result-set (for pagination).
    offset: builtins.int = ...
    # Application ID to filter on.
    application_id: builtins.int = ...
    # Search on name or DevEUI.
    search: typing.Text = ...
    # Multicast-group ID to filter on (string formatted UUID).
    multicast_group_id: typing.Text = ...
    # Service-profile ID to filter on (string formatted UUID).
    service_profile_id: typing.Text = ...
    # Tags to filter on.
    @property
    def tags(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        limit : builtins.int = ...,
        offset : builtins.int = ...,
        application_id : builtins.int = ...,
        search : typing.Text = ...,
        multicast_group_id : typing.Text = ...,
        service_profile_id : typing.Text = ...,
        tags : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"application_id",b"application_id",u"limit",b"limit",u"multicast_group_id",b"multicast_group_id",u"offset",b"offset",u"search",b"search",u"service_profile_id",b"service_profile_id",u"tags",b"tags"]) -> None: ...
global___ListDeviceRequest = ListDeviceRequest

class ListDeviceResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TOTAL_COUNT_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    # Total number of devices available within the result-set.
    total_count: builtins.int = ...
    # Devices within this result-set.
    @property
    def result(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeviceListItem]: ...
    def __init__(self,
        *,
        total_count : builtins.int = ...,
        result : typing.Optional[typing.Iterable[global___DeviceListItem]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"result",b"result",u"total_count",b"total_count"]) -> None: ...
global___ListDeviceResponse = ListDeviceResponse

class DeleteDeviceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_eui",b"dev_eui"]) -> None: ...
global___DeleteDeviceRequest = DeleteDeviceRequest

class UpdateDeviceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEVICE_FIELD_NUMBER: builtins.int
    # Device object to update.
    @property
    def device(self) -> global___Device: ...
    def __init__(self,
        *,
        device : typing.Optional[global___Device] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"device",b"device"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"device",b"device"]) -> None: ...
global___UpdateDeviceRequest = UpdateDeviceRequest

class CreateDeviceKeysRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEVICE_KEYS_FIELD_NUMBER: builtins.int
    # Device-keys object to create.
    @property
    def device_keys(self) -> global___DeviceKeys: ...
    def __init__(self,
        *,
        device_keys : typing.Optional[global___DeviceKeys] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"device_keys",b"device_keys"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"device_keys",b"device_keys"]) -> None: ...
global___CreateDeviceKeysRequest = CreateDeviceKeysRequest

class GetDeviceKeysRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_eui",b"dev_eui"]) -> None: ...
global___GetDeviceKeysRequest = GetDeviceKeysRequest

class GetDeviceKeysResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEVICE_KEYS_FIELD_NUMBER: builtins.int
    # Device-key object.
    @property
    def device_keys(self) -> global___DeviceKeys: ...
    def __init__(self,
        *,
        device_keys : typing.Optional[global___DeviceKeys] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"device_keys",b"device_keys"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"device_keys",b"device_keys"]) -> None: ...
global___GetDeviceKeysResponse = GetDeviceKeysResponse

class UpdateDeviceKeysRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEVICE_KEYS_FIELD_NUMBER: builtins.int
    # Device-keys object to update.
    @property
    def device_keys(self) -> global___DeviceKeys: ...
    def __init__(self,
        *,
        device_keys : typing.Optional[global___DeviceKeys] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"device_keys",b"device_keys"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"device_keys",b"device_keys"]) -> None: ...
global___UpdateDeviceKeysRequest = UpdateDeviceKeysRequest

class DeleteDeviceKeysRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_eui",b"dev_eui"]) -> None: ...
global___DeleteDeviceKeysRequest = DeleteDeviceKeysRequest

class DeviceActivation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    DEV_ADDR_FIELD_NUMBER: builtins.int
    APP_S_KEY_FIELD_NUMBER: builtins.int
    NWK_S_ENC_KEY_FIELD_NUMBER: builtins.int
    S_NWK_S_INT_KEY_FIELD_NUMBER: builtins.int
    F_NWK_S_INT_KEY_FIELD_NUMBER: builtins.int
    F_CNT_UP_FIELD_NUMBER: builtins.int
    N_F_CNT_DOWN_FIELD_NUMBER: builtins.int
    A_F_CNT_DOWN_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    # Device address (HEX encoded).
    dev_addr: typing.Text = ...
    # Application session key (HEX encoded).
    app_s_key: typing.Text = ...
    # Network session encryption key (HEX encoded).
    nwk_s_enc_key: typing.Text = ...
    # Serving network session integrity key (HEX encoded).
    s_nwk_s_int_key: typing.Text = ...
    # Forwarding network session integrity key (HEX encoded).
    f_nwk_s_int_key: typing.Text = ...
    # Uplink frame-counter.
    f_cnt_up: builtins.int = ...
    # Downlink network frame-counter.
    n_f_cnt_down: builtins.int = ...
    # Downlink application frame-counter.
    a_f_cnt_down: builtins.int = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        dev_addr : typing.Text = ...,
        app_s_key : typing.Text = ...,
        nwk_s_enc_key : typing.Text = ...,
        s_nwk_s_int_key : typing.Text = ...,
        f_nwk_s_int_key : typing.Text = ...,
        f_cnt_up : builtins.int = ...,
        n_f_cnt_down : builtins.int = ...,
        a_f_cnt_down : builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"a_f_cnt_down",b"a_f_cnt_down",u"app_s_key",b"app_s_key",u"dev_addr",b"dev_addr",u"dev_eui",b"dev_eui",u"f_cnt_up",b"f_cnt_up",u"f_nwk_s_int_key",b"f_nwk_s_int_key",u"n_f_cnt_down",b"n_f_cnt_down",u"nwk_s_enc_key",b"nwk_s_enc_key",u"s_nwk_s_int_key",b"s_nwk_s_int_key"]) -> None: ...
global___DeviceActivation = DeviceActivation

class ActivateDeviceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEVICE_ACTIVATION_FIELD_NUMBER: builtins.int
    @property
    def device_activation(self) -> global___DeviceActivation: ...
    def __init__(self,
        *,
        device_activation : typing.Optional[global___DeviceActivation] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"device_activation",b"device_activation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"device_activation",b"device_activation"]) -> None: ...
global___ActivateDeviceRequest = ActivateDeviceRequest

class DeactivateDeviceRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_eui",b"dev_eui"]) -> None: ...
global___DeactivateDeviceRequest = DeactivateDeviceRequest

class GetDeviceActivationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_eui",b"dev_eui"]) -> None: ...
global___GetDeviceActivationRequest = GetDeviceActivationRequest

class GetDeviceActivationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEVICE_ACTIVATION_FIELD_NUMBER: builtins.int
    # Device-activation object.
    @property
    def device_activation(self) -> global___DeviceActivation: ...
    def __init__(self,
        *,
        device_activation : typing.Optional[global___DeviceActivation] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"device_activation",b"device_activation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"device_activation",b"device_activation"]) -> None: ...
global___GetDeviceActivationResponse = GetDeviceActivationResponse

class GetRandomDevAddrRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_eui",b"dev_eui"]) -> None: ...
global___GetRandomDevAddrRequest = GetRandomDevAddrRequest

class GetRandomDevAddrResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_ADDR_FIELD_NUMBER: builtins.int
    # Device address (HEX encoded).
    dev_addr: typing.Text = ...
    def __init__(self,
        *,
        dev_addr : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_addr",b"dev_addr"]) -> None: ...
global___GetRandomDevAddrResponse = GetRandomDevAddrResponse

class DeviceStats(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class RxPacketsPerFrequencyEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : builtins.int = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    class RxPacketsPerDrEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : builtins.int = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    class ErrorsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: builtins.int = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    TIMESTAMP_FIELD_NUMBER: builtins.int
    RX_PACKETS_FIELD_NUMBER: builtins.int
    GW_RSSI_FIELD_NUMBER: builtins.int
    GW_SNR_FIELD_NUMBER: builtins.int
    RX_PACKETS_PER_FREQUENCY_FIELD_NUMBER: builtins.int
    RX_PACKETS_PER_DR_FIELD_NUMBER: builtins.int
    ERRORS_FIELD_NUMBER: builtins.int
    # Timestamp of the (aggregated) measurement.
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    # Packets received from the device.
    rx_packets: builtins.int = ...
    # Average RSSI (as reported by the gateway(s)).
    gw_rssi: builtins.float = ...
    # Average SNR (as reported by the gateway(s)).
    gw_snr: builtins.float = ...
    # Packets received by frequency.
    @property
    def rx_packets_per_frequency(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]: ...
    # Packets received by DR.
    @property
    def rx_packets_per_dr(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]: ...
    # Error count.
    @property
    def errors(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.int]: ...
    def __init__(self,
        *,
        timestamp : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        rx_packets : builtins.int = ...,
        gw_rssi : builtins.float = ...,
        gw_snr : builtins.float = ...,
        rx_packets_per_frequency : typing.Optional[typing.Mapping[builtins.int, builtins.int]] = ...,
        rx_packets_per_dr : typing.Optional[typing.Mapping[builtins.int, builtins.int]] = ...,
        errors : typing.Optional[typing.Mapping[typing.Text, builtins.int]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"timestamp",b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"errors",b"errors",u"gw_rssi",b"gw_rssi",u"gw_snr",b"gw_snr",u"rx_packets",b"rx_packets",u"rx_packets_per_dr",b"rx_packets_per_dr",u"rx_packets_per_frequency",b"rx_packets_per_frequency",u"timestamp",b"timestamp"]) -> None: ...
global___DeviceStats = DeviceStats

class GetDeviceStatsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    START_TIMESTAMP_FIELD_NUMBER: builtins.int
    END_TIMESTAMP_FIELD_NUMBER: builtins.int
    # DevEUI (HEX encoded).
    dev_eui: typing.Text = ...
    # Aggregation interval.  One of "second", "minute", "hour", "day", "week",
    # "month", "quarter", "year".  Case insensitive.
    interval: typing.Text = ...
    # Timestamp to start from.
    @property
    def start_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    # Timestamp until to get from.
    @property
    def end_timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        interval : typing.Text = ...,
        start_timestamp : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_timestamp : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"end_timestamp",b"end_timestamp",u"start_timestamp",b"start_timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_eui",b"dev_eui",u"end_timestamp",b"end_timestamp",u"interval",b"interval",u"start_timestamp",b"start_timestamp"]) -> None: ...
global___GetDeviceStatsRequest = GetDeviceStatsRequest

class GetDeviceStatsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULT_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeviceStats]: ...
    def __init__(self,
        *,
        result : typing.Optional[typing.Iterable[global___DeviceStats]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"result",b"result"]) -> None: ...
global___GetDeviceStatsResponse = GetDeviceStatsResponse

class StreamDeviceFrameLogsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_eui",b"dev_eui"]) -> None: ...
global___StreamDeviceFrameLogsRequest = StreamDeviceFrameLogsRequest

class StreamDeviceFrameLogsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    UPLINK_FRAME_FIELD_NUMBER: builtins.int
    DOWNLINK_FRAME_FIELD_NUMBER: builtins.int
    # Contains an uplink frame.
    @property
    def uplink_frame(self) -> chirpstack_api.as_pb.external.api.frameLog_pb2.UplinkFrameLog: ...
    # Contains a downlink frame.
    @property
    def downlink_frame(self) -> chirpstack_api.as_pb.external.api.frameLog_pb2.DownlinkFrameLog: ...
    def __init__(self,
        *,
        uplink_frame : typing.Optional[chirpstack_api.as_pb.external.api.frameLog_pb2.UplinkFrameLog] = ...,
        downlink_frame : typing.Optional[chirpstack_api.as_pb.external.api.frameLog_pb2.DownlinkFrameLog] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"downlink_frame",b"downlink_frame",u"frame",b"frame",u"uplink_frame",b"uplink_frame"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"downlink_frame",b"downlink_frame",u"frame",b"frame",u"uplink_frame",b"uplink_frame"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"frame",b"frame"]) -> typing.Optional[typing_extensions.Literal["uplink_frame","downlink_frame"]]: ...
global___StreamDeviceFrameLogsResponse = StreamDeviceFrameLogsResponse

class StreamDeviceEventLogsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_eui",b"dev_eui"]) -> None: ...
global___StreamDeviceEventLogsRequest = StreamDeviceEventLogsRequest

class StreamDeviceEventLogsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    PAYLOAD_JSON_FIELD_NUMBER: builtins.int
    PUBLISHED_AT_FIELD_NUMBER: builtins.int
    STREAM_ID_FIELD_NUMBER: builtins.int
    # The event type.
    type: typing.Text = ...
    # The event payload in JSON encoding.
    payload_json: typing.Text = ...
    # Published at timestamp.
    @property
    def published_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    # Stream ID.
    stream_id: typing.Text = ...
    def __init__(self,
        *,
        type : typing.Text = ...,
        payload_json : typing.Text = ...,
        published_at : typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        stream_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"published_at",b"published_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"payload_json",b"payload_json",u"published_at",b"published_at",u"stream_id",b"stream_id",u"type",b"type"]) -> None: ...
global___StreamDeviceEventLogsResponse = StreamDeviceEventLogsResponse

class ClearDeviceNoncesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    DEV_EUI_FIELD_NUMBER: builtins.int
    # Device EUI (HEX encoded).
    dev_eui: typing.Text = ...
    def __init__(self,
        *,
        dev_eui : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"dev_eui",b"dev_eui"]) -> None: ...
global___ClearDeviceNoncesRequest = ClearDeviceNoncesRequest
