"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import google.protobuf.empty_pb2
import grpc

from .as_pb_pb2 import *
# ApplicationServerService is the service providing the application-server interface.
class ApplicationServerServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    # HandleUplinkData handles uplink data received from an end-device.
    HandleUplinkData:grpc.UnaryUnaryMultiCallable[
        global___HandleUplinkDataRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # HandleProprietaryUplink handles proprietary uplink payloads.
    HandleProprietaryUplink:grpc.UnaryUnaryMultiCallable[
        global___HandleProprietaryUplinkRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # HandleError handles an error message.
    HandleError:grpc.UnaryUnaryMultiCallable[
        global___HandleErrorRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # HandleDownlinkACK handles a downlink ACK or nACK response.
    HandleDownlinkACK:grpc.UnaryUnaryMultiCallable[
        global___HandleDownlinkACKRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # HandleGatewayStats handles the given gateway stats.
    HandleGatewayStats:grpc.UnaryUnaryMultiCallable[
        global___HandleGatewayStatsRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # HandleTXACK handles the TX acknowledgement.
    HandleTxAck:grpc.UnaryUnaryMultiCallable[
        global___HandleTxAckRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # SetDeviceStatus updates the device-status for a device.
    SetDeviceStatus:grpc.UnaryUnaryMultiCallable[
        global___SetDeviceStatusRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # SetDeviceLocation updates the device-location for a device.
    SetDeviceLocation:grpc.UnaryUnaryMultiCallable[
        global___SetDeviceLocationRequest,
        google.protobuf.empty_pb2.Empty] = ...

    # ReEncryptDeviceQueueItems requests the application-server to re-encrypt
    # the given payload items using the new parameters. This request is
    # for example triggered when the associated frame-counter of a downlink
    # payload will be used by a mac-layer only payload, e.g. when the NS has
    # mac-commands (or ACKs) to send to the device and combining this with
    # an application-layer payload would exceed the max. payload size.
    # Note there is no requirement that the number of returned items must be
    # equal to the number of requested items.
    ReEncryptDeviceQueueItems:grpc.UnaryUnaryMultiCallable[
        global___ReEncryptDeviceQueueItemsRequest,
        global___ReEncryptDeviceQueueItemsResponse] = ...


# ApplicationServerService is the service providing the application-server interface.
class ApplicationServerServiceServicer(metaclass=abc.ABCMeta):
    # HandleUplinkData handles uplink data received from an end-device.
    @abc.abstractmethod
    def HandleUplinkData(self,
        request: global___HandleUplinkDataRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # HandleProprietaryUplink handles proprietary uplink payloads.
    @abc.abstractmethod
    def HandleProprietaryUplink(self,
        request: global___HandleProprietaryUplinkRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # HandleError handles an error message.
    @abc.abstractmethod
    def HandleError(self,
        request: global___HandleErrorRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # HandleDownlinkACK handles a downlink ACK or nACK response.
    @abc.abstractmethod
    def HandleDownlinkACK(self,
        request: global___HandleDownlinkACKRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # HandleGatewayStats handles the given gateway stats.
    @abc.abstractmethod
    def HandleGatewayStats(self,
        request: global___HandleGatewayStatsRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # HandleTXACK handles the TX acknowledgement.
    @abc.abstractmethod
    def HandleTxAck(self,
        request: global___HandleTxAckRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # SetDeviceStatus updates the device-status for a device.
    @abc.abstractmethod
    def SetDeviceStatus(self,
        request: global___SetDeviceStatusRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # SetDeviceLocation updates the device-location for a device.
    @abc.abstractmethod
    def SetDeviceLocation(self,
        request: global___SetDeviceLocationRequest,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty: ...

    # ReEncryptDeviceQueueItems requests the application-server to re-encrypt
    # the given payload items using the new parameters. This request is
    # for example triggered when the associated frame-counter of a downlink
    # payload will be used by a mac-layer only payload, e.g. when the NS has
    # mac-commands (or ACKs) to send to the device and combining this with
    # an application-layer payload would exceed the max. payload size.
    # Note there is no requirement that the number of returned items must be
    # equal to the number of requested items.
    @abc.abstractmethod
    def ReEncryptDeviceQueueItems(self,
        request: global___ReEncryptDeviceQueueItemsRequest,
        context: grpc.ServicerContext,
    ) -> global___ReEncryptDeviceQueueItemsResponse: ...


def add_ApplicationServerServiceServicer_to_server(servicer: ApplicationServerServiceServicer, server: grpc.Server) -> None: ...
