# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: chirpstack-api/nc/nc.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.empty_pb2
import chirpstack_api.gw.gw_pb2
import chirpstack_api.nc.nc_pb2


class NetworkControllerServiceBase(abc.ABC):

    @abc.abstractmethod
    async def HandleUplinkMetaData(self, stream: 'grpclib.server.Stream[chirpstack_api.nc.nc_pb2.HandleUplinkMetaDataRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def HandleDownlinkMetaData(self, stream: 'grpclib.server.Stream[chirpstack_api.nc.nc_pb2.HandleDownlinkMetaDataRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def HandleUplinkMACCommand(self, stream: 'grpclib.server.Stream[chirpstack_api.nc.nc_pb2.HandleUplinkMACCommandRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def HandleRejectedUplinkFrameSet(self, stream: 'grpclib.server.Stream[chirpstack_api.nc.nc_pb2.HandleRejectedUplinkFrameSetRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/nc.NetworkControllerService/HandleUplinkMetaData': grpclib.const.Handler(
                self.HandleUplinkMetaData,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.nc.nc_pb2.HandleUplinkMetaDataRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/nc.NetworkControllerService/HandleDownlinkMetaData': grpclib.const.Handler(
                self.HandleDownlinkMetaData,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.nc.nc_pb2.HandleDownlinkMetaDataRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/nc.NetworkControllerService/HandleUplinkMACCommand': grpclib.const.Handler(
                self.HandleUplinkMACCommand,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.nc.nc_pb2.HandleUplinkMACCommandRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/nc.NetworkControllerService/HandleRejectedUplinkFrameSet': grpclib.const.Handler(
                self.HandleRejectedUplinkFrameSet,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.nc.nc_pb2.HandleRejectedUplinkFrameSetRequest,
                google.protobuf.empty_pb2.Empty,
            ),
        }


class NetworkControllerServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.HandleUplinkMetaData = grpclib.client.UnaryUnaryMethod(
            channel,
            '/nc.NetworkControllerService/HandleUplinkMetaData',
            chirpstack_api.nc.nc_pb2.HandleUplinkMetaDataRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.HandleDownlinkMetaData = grpclib.client.UnaryUnaryMethod(
            channel,
            '/nc.NetworkControllerService/HandleDownlinkMetaData',
            chirpstack_api.nc.nc_pb2.HandleDownlinkMetaDataRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.HandleUplinkMACCommand = grpclib.client.UnaryUnaryMethod(
            channel,
            '/nc.NetworkControllerService/HandleUplinkMACCommand',
            chirpstack_api.nc.nc_pb2.HandleUplinkMACCommandRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.HandleRejectedUplinkFrameSet = grpclib.client.UnaryUnaryMethod(
            channel,
            '/nc.NetworkControllerService/HandleRejectedUplinkFrameSet',
            chirpstack_api.nc.nc_pb2.HandleRejectedUplinkFrameSetRequest,
            google.protobuf.empty_pb2.Empty,
        )
