# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: chirpstack-api/ns/ns.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.timestamp_pb2
import google.protobuf.duration_pb2
import google.protobuf.empty_pb2
import chirpstack_api.common.common_pb2
import chirpstack_api.gw.gw_pb2
import chirpstack_api.ns.profiles_pb2
import chirpstack_api.ns.ns_pb2


class NetworkServerServiceBase(abc.ABC):

    @abc.abstractmethod
    async def CreateServiceProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.CreateServiceProfileRequest, chirpstack_api.ns.ns_pb2.CreateServiceProfileResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetServiceProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetServiceProfileRequest, chirpstack_api.ns.ns_pb2.GetServiceProfileResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateServiceProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.UpdateServiceProfileRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteServiceProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.DeleteServiceProfileRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def CreateRoutingProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.CreateRoutingProfileRequest, chirpstack_api.ns.ns_pb2.CreateRoutingProfileResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetRoutingProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetRoutingProfileRequest, chirpstack_api.ns.ns_pb2.GetRoutingProfileResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateRoutingProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.UpdateRoutingProfileRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteRoutingProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.DeleteRoutingProfileRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def CreateDeviceProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.CreateDeviceProfileRequest, chirpstack_api.ns.ns_pb2.CreateDeviceProfileResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetDeviceProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetDeviceProfileRequest, chirpstack_api.ns.ns_pb2.GetDeviceProfileResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateDeviceProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.UpdateDeviceProfileRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteDeviceProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.DeleteDeviceProfileRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def CreateDevice(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.CreateDeviceRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def GetDevice(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetDeviceRequest, chirpstack_api.ns.ns_pb2.GetDeviceResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateDevice(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.UpdateDeviceRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteDevice(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.DeleteDeviceRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def ActivateDevice(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.ActivateDeviceRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def DeactivateDevice(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.DeactivateDeviceRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def GetDeviceActivation(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetDeviceActivationRequest, chirpstack_api.ns.ns_pb2.GetDeviceActivationResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateDeviceQueueItem(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.CreateDeviceQueueItemRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def FlushDeviceQueueForDevEUI(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.FlushDeviceQueueForDevEUIRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def GetDeviceQueueItemsForDevEUI(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetDeviceQueueItemsForDevEUIRequest, chirpstack_api.ns.ns_pb2.GetDeviceQueueItemsForDevEUIResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetNextDownlinkFCntForDevEUI(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetNextDownlinkFCntForDevEUIRequest, chirpstack_api.ns.ns_pb2.GetNextDownlinkFCntForDevEUIResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetRandomDevAddr(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, chirpstack_api.ns.ns_pb2.GetRandomDevAddrResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateMACCommandQueueItem(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.CreateMACCommandQueueItemRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def SendProprietaryPayload(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.SendProprietaryPayloadRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def CreateGateway(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.CreateGatewayRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def GetGateway(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetGatewayRequest, chirpstack_api.ns.ns_pb2.GetGatewayResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateGateway(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.UpdateGatewayRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteGateway(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.DeleteGatewayRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def GenerateGatewayClientCertificate(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GenerateGatewayClientCertificateRequest, chirpstack_api.ns.ns_pb2.GenerateGatewayClientCertificateResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateGatewayProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.CreateGatewayProfileRequest, chirpstack_api.ns.ns_pb2.CreateGatewayProfileResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetGatewayProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetGatewayProfileRequest, chirpstack_api.ns.ns_pb2.GetGatewayProfileResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateGatewayProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.UpdateGatewayProfileRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteGatewayProfile(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.DeleteGatewayProfileRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def GetGatewayStats(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetGatewayStatsRequest, chirpstack_api.ns.ns_pb2.GetGatewayStatsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def StreamFrameLogsForGateway(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.StreamFrameLogsForGatewayRequest, chirpstack_api.ns.ns_pb2.StreamFrameLogsForGatewayResponse]') -> None:
        pass

    @abc.abstractmethod
    async def StreamFrameLogsForDevice(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.StreamFrameLogsForDeviceRequest, chirpstack_api.ns.ns_pb2.StreamFrameLogsForDeviceResponse]') -> None:
        pass

    @abc.abstractmethod
    async def CreateMulticastGroup(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.CreateMulticastGroupRequest, chirpstack_api.ns.ns_pb2.CreateMulticastGroupResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetMulticastGroup(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetMulticastGroupRequest, chirpstack_api.ns.ns_pb2.GetMulticastGroupResponse]') -> None:
        pass

    @abc.abstractmethod
    async def UpdateMulticastGroup(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.UpdateMulticastGroupRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def DeleteMulticastGroup(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.DeleteMulticastGroupRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def AddDeviceToMulticastGroup(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.AddDeviceToMulticastGroupRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def RemoveDeviceFromMulticastGroup(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.RemoveDeviceFromMulticastGroupRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def EnqueueMulticastQueueItem(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.EnqueueMulticastQueueItemRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def FlushMulticastQueueForMulticastGroup(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.FlushMulticastQueueForMulticastGroupRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def GetMulticastQueueItemsForMulticastGroup(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.GetMulticastQueueItemsForMulticastGroupRequest, chirpstack_api.ns.ns_pb2.GetMulticastQueueItemsForMulticastGroupResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetVersion(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, chirpstack_api.ns.ns_pb2.GetVersionResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetADRAlgorithms(self, stream: 'grpclib.server.Stream[google.protobuf.empty_pb2.Empty, chirpstack_api.ns.ns_pb2.GetADRAlgorithmsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ClearDeviceNonces(self, stream: 'grpclib.server.Stream[chirpstack_api.ns.ns_pb2.ClearDeviceNoncesRequest, google.protobuf.empty_pb2.Empty]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/ns.NetworkServerService/CreateServiceProfile': grpclib.const.Handler(
                self.CreateServiceProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.CreateServiceProfileRequest,
                chirpstack_api.ns.ns_pb2.CreateServiceProfileResponse,
            ),
            '/ns.NetworkServerService/GetServiceProfile': grpclib.const.Handler(
                self.GetServiceProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetServiceProfileRequest,
                chirpstack_api.ns.ns_pb2.GetServiceProfileResponse,
            ),
            '/ns.NetworkServerService/UpdateServiceProfile': grpclib.const.Handler(
                self.UpdateServiceProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.UpdateServiceProfileRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/DeleteServiceProfile': grpclib.const.Handler(
                self.DeleteServiceProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.DeleteServiceProfileRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/CreateRoutingProfile': grpclib.const.Handler(
                self.CreateRoutingProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.CreateRoutingProfileRequest,
                chirpstack_api.ns.ns_pb2.CreateRoutingProfileResponse,
            ),
            '/ns.NetworkServerService/GetRoutingProfile': grpclib.const.Handler(
                self.GetRoutingProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetRoutingProfileRequest,
                chirpstack_api.ns.ns_pb2.GetRoutingProfileResponse,
            ),
            '/ns.NetworkServerService/UpdateRoutingProfile': grpclib.const.Handler(
                self.UpdateRoutingProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.UpdateRoutingProfileRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/DeleteRoutingProfile': grpclib.const.Handler(
                self.DeleteRoutingProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.DeleteRoutingProfileRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/CreateDeviceProfile': grpclib.const.Handler(
                self.CreateDeviceProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.CreateDeviceProfileRequest,
                chirpstack_api.ns.ns_pb2.CreateDeviceProfileResponse,
            ),
            '/ns.NetworkServerService/GetDeviceProfile': grpclib.const.Handler(
                self.GetDeviceProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetDeviceProfileRequest,
                chirpstack_api.ns.ns_pb2.GetDeviceProfileResponse,
            ),
            '/ns.NetworkServerService/UpdateDeviceProfile': grpclib.const.Handler(
                self.UpdateDeviceProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.UpdateDeviceProfileRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/DeleteDeviceProfile': grpclib.const.Handler(
                self.DeleteDeviceProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.DeleteDeviceProfileRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/CreateDevice': grpclib.const.Handler(
                self.CreateDevice,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.CreateDeviceRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/GetDevice': grpclib.const.Handler(
                self.GetDevice,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetDeviceRequest,
                chirpstack_api.ns.ns_pb2.GetDeviceResponse,
            ),
            '/ns.NetworkServerService/UpdateDevice': grpclib.const.Handler(
                self.UpdateDevice,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.UpdateDeviceRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/DeleteDevice': grpclib.const.Handler(
                self.DeleteDevice,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.DeleteDeviceRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/ActivateDevice': grpclib.const.Handler(
                self.ActivateDevice,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.ActivateDeviceRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/DeactivateDevice': grpclib.const.Handler(
                self.DeactivateDevice,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.DeactivateDeviceRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/GetDeviceActivation': grpclib.const.Handler(
                self.GetDeviceActivation,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetDeviceActivationRequest,
                chirpstack_api.ns.ns_pb2.GetDeviceActivationResponse,
            ),
            '/ns.NetworkServerService/CreateDeviceQueueItem': grpclib.const.Handler(
                self.CreateDeviceQueueItem,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.CreateDeviceQueueItemRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/FlushDeviceQueueForDevEUI': grpclib.const.Handler(
                self.FlushDeviceQueueForDevEUI,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.FlushDeviceQueueForDevEUIRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/GetDeviceQueueItemsForDevEUI': grpclib.const.Handler(
                self.GetDeviceQueueItemsForDevEUI,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetDeviceQueueItemsForDevEUIRequest,
                chirpstack_api.ns.ns_pb2.GetDeviceQueueItemsForDevEUIResponse,
            ),
            '/ns.NetworkServerService/GetNextDownlinkFCntForDevEUI': grpclib.const.Handler(
                self.GetNextDownlinkFCntForDevEUI,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetNextDownlinkFCntForDevEUIRequest,
                chirpstack_api.ns.ns_pb2.GetNextDownlinkFCntForDevEUIResponse,
            ),
            '/ns.NetworkServerService/GetRandomDevAddr': grpclib.const.Handler(
                self.GetRandomDevAddr,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.protobuf.empty_pb2.Empty,
                chirpstack_api.ns.ns_pb2.GetRandomDevAddrResponse,
            ),
            '/ns.NetworkServerService/CreateMACCommandQueueItem': grpclib.const.Handler(
                self.CreateMACCommandQueueItem,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.CreateMACCommandQueueItemRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/SendProprietaryPayload': grpclib.const.Handler(
                self.SendProprietaryPayload,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.SendProprietaryPayloadRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/CreateGateway': grpclib.const.Handler(
                self.CreateGateway,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.CreateGatewayRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/GetGateway': grpclib.const.Handler(
                self.GetGateway,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetGatewayRequest,
                chirpstack_api.ns.ns_pb2.GetGatewayResponse,
            ),
            '/ns.NetworkServerService/UpdateGateway': grpclib.const.Handler(
                self.UpdateGateway,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.UpdateGatewayRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/DeleteGateway': grpclib.const.Handler(
                self.DeleteGateway,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.DeleteGatewayRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/GenerateGatewayClientCertificate': grpclib.const.Handler(
                self.GenerateGatewayClientCertificate,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GenerateGatewayClientCertificateRequest,
                chirpstack_api.ns.ns_pb2.GenerateGatewayClientCertificateResponse,
            ),
            '/ns.NetworkServerService/CreateGatewayProfile': grpclib.const.Handler(
                self.CreateGatewayProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.CreateGatewayProfileRequest,
                chirpstack_api.ns.ns_pb2.CreateGatewayProfileResponse,
            ),
            '/ns.NetworkServerService/GetGatewayProfile': grpclib.const.Handler(
                self.GetGatewayProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetGatewayProfileRequest,
                chirpstack_api.ns.ns_pb2.GetGatewayProfileResponse,
            ),
            '/ns.NetworkServerService/UpdateGatewayProfile': grpclib.const.Handler(
                self.UpdateGatewayProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.UpdateGatewayProfileRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/DeleteGatewayProfile': grpclib.const.Handler(
                self.DeleteGatewayProfile,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.DeleteGatewayProfileRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/GetGatewayStats': grpclib.const.Handler(
                self.GetGatewayStats,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetGatewayStatsRequest,
                chirpstack_api.ns.ns_pb2.GetGatewayStatsResponse,
            ),
            '/ns.NetworkServerService/StreamFrameLogsForGateway': grpclib.const.Handler(
                self.StreamFrameLogsForGateway,
                grpclib.const.Cardinality.UNARY_STREAM,
                chirpstack_api.ns.ns_pb2.StreamFrameLogsForGatewayRequest,
                chirpstack_api.ns.ns_pb2.StreamFrameLogsForGatewayResponse,
            ),
            '/ns.NetworkServerService/StreamFrameLogsForDevice': grpclib.const.Handler(
                self.StreamFrameLogsForDevice,
                grpclib.const.Cardinality.UNARY_STREAM,
                chirpstack_api.ns.ns_pb2.StreamFrameLogsForDeviceRequest,
                chirpstack_api.ns.ns_pb2.StreamFrameLogsForDeviceResponse,
            ),
            '/ns.NetworkServerService/CreateMulticastGroup': grpclib.const.Handler(
                self.CreateMulticastGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.CreateMulticastGroupRequest,
                chirpstack_api.ns.ns_pb2.CreateMulticastGroupResponse,
            ),
            '/ns.NetworkServerService/GetMulticastGroup': grpclib.const.Handler(
                self.GetMulticastGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetMulticastGroupRequest,
                chirpstack_api.ns.ns_pb2.GetMulticastGroupResponse,
            ),
            '/ns.NetworkServerService/UpdateMulticastGroup': grpclib.const.Handler(
                self.UpdateMulticastGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.UpdateMulticastGroupRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/DeleteMulticastGroup': grpclib.const.Handler(
                self.DeleteMulticastGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.DeleteMulticastGroupRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/AddDeviceToMulticastGroup': grpclib.const.Handler(
                self.AddDeviceToMulticastGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.AddDeviceToMulticastGroupRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/RemoveDeviceFromMulticastGroup': grpclib.const.Handler(
                self.RemoveDeviceFromMulticastGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.RemoveDeviceFromMulticastGroupRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/EnqueueMulticastQueueItem': grpclib.const.Handler(
                self.EnqueueMulticastQueueItem,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.EnqueueMulticastQueueItemRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/FlushMulticastQueueForMulticastGroup': grpclib.const.Handler(
                self.FlushMulticastQueueForMulticastGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.FlushMulticastQueueForMulticastGroupRequest,
                google.protobuf.empty_pb2.Empty,
            ),
            '/ns.NetworkServerService/GetMulticastQueueItemsForMulticastGroup': grpclib.const.Handler(
                self.GetMulticastQueueItemsForMulticastGroup,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.GetMulticastQueueItemsForMulticastGroupRequest,
                chirpstack_api.ns.ns_pb2.GetMulticastQueueItemsForMulticastGroupResponse,
            ),
            '/ns.NetworkServerService/GetVersion': grpclib.const.Handler(
                self.GetVersion,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.protobuf.empty_pb2.Empty,
                chirpstack_api.ns.ns_pb2.GetVersionResponse,
            ),
            '/ns.NetworkServerService/GetADRAlgorithms': grpclib.const.Handler(
                self.GetADRAlgorithms,
                grpclib.const.Cardinality.UNARY_UNARY,
                google.protobuf.empty_pb2.Empty,
                chirpstack_api.ns.ns_pb2.GetADRAlgorithmsResponse,
            ),
            '/ns.NetworkServerService/ClearDeviceNonces': grpclib.const.Handler(
                self.ClearDeviceNonces,
                grpclib.const.Cardinality.UNARY_UNARY,
                chirpstack_api.ns.ns_pb2.ClearDeviceNoncesRequest,
                google.protobuf.empty_pb2.Empty,
            ),
        }


class NetworkServerServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.CreateServiceProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/CreateServiceProfile',
            chirpstack_api.ns.ns_pb2.CreateServiceProfileRequest,
            chirpstack_api.ns.ns_pb2.CreateServiceProfileResponse,
        )
        self.GetServiceProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetServiceProfile',
            chirpstack_api.ns.ns_pb2.GetServiceProfileRequest,
            chirpstack_api.ns.ns_pb2.GetServiceProfileResponse,
        )
        self.UpdateServiceProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/UpdateServiceProfile',
            chirpstack_api.ns.ns_pb2.UpdateServiceProfileRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.DeleteServiceProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/DeleteServiceProfile',
            chirpstack_api.ns.ns_pb2.DeleteServiceProfileRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.CreateRoutingProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/CreateRoutingProfile',
            chirpstack_api.ns.ns_pb2.CreateRoutingProfileRequest,
            chirpstack_api.ns.ns_pb2.CreateRoutingProfileResponse,
        )
        self.GetRoutingProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetRoutingProfile',
            chirpstack_api.ns.ns_pb2.GetRoutingProfileRequest,
            chirpstack_api.ns.ns_pb2.GetRoutingProfileResponse,
        )
        self.UpdateRoutingProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/UpdateRoutingProfile',
            chirpstack_api.ns.ns_pb2.UpdateRoutingProfileRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.DeleteRoutingProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/DeleteRoutingProfile',
            chirpstack_api.ns.ns_pb2.DeleteRoutingProfileRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.CreateDeviceProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/CreateDeviceProfile',
            chirpstack_api.ns.ns_pb2.CreateDeviceProfileRequest,
            chirpstack_api.ns.ns_pb2.CreateDeviceProfileResponse,
        )
        self.GetDeviceProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetDeviceProfile',
            chirpstack_api.ns.ns_pb2.GetDeviceProfileRequest,
            chirpstack_api.ns.ns_pb2.GetDeviceProfileResponse,
        )
        self.UpdateDeviceProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/UpdateDeviceProfile',
            chirpstack_api.ns.ns_pb2.UpdateDeviceProfileRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.DeleteDeviceProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/DeleteDeviceProfile',
            chirpstack_api.ns.ns_pb2.DeleteDeviceProfileRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.CreateDevice = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/CreateDevice',
            chirpstack_api.ns.ns_pb2.CreateDeviceRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.GetDevice = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetDevice',
            chirpstack_api.ns.ns_pb2.GetDeviceRequest,
            chirpstack_api.ns.ns_pb2.GetDeviceResponse,
        )
        self.UpdateDevice = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/UpdateDevice',
            chirpstack_api.ns.ns_pb2.UpdateDeviceRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.DeleteDevice = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/DeleteDevice',
            chirpstack_api.ns.ns_pb2.DeleteDeviceRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.ActivateDevice = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/ActivateDevice',
            chirpstack_api.ns.ns_pb2.ActivateDeviceRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.DeactivateDevice = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/DeactivateDevice',
            chirpstack_api.ns.ns_pb2.DeactivateDeviceRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.GetDeviceActivation = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetDeviceActivation',
            chirpstack_api.ns.ns_pb2.GetDeviceActivationRequest,
            chirpstack_api.ns.ns_pb2.GetDeviceActivationResponse,
        )
        self.CreateDeviceQueueItem = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/CreateDeviceQueueItem',
            chirpstack_api.ns.ns_pb2.CreateDeviceQueueItemRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.FlushDeviceQueueForDevEUI = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/FlushDeviceQueueForDevEUI',
            chirpstack_api.ns.ns_pb2.FlushDeviceQueueForDevEUIRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.GetDeviceQueueItemsForDevEUI = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetDeviceQueueItemsForDevEUI',
            chirpstack_api.ns.ns_pb2.GetDeviceQueueItemsForDevEUIRequest,
            chirpstack_api.ns.ns_pb2.GetDeviceQueueItemsForDevEUIResponse,
        )
        self.GetNextDownlinkFCntForDevEUI = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetNextDownlinkFCntForDevEUI',
            chirpstack_api.ns.ns_pb2.GetNextDownlinkFCntForDevEUIRequest,
            chirpstack_api.ns.ns_pb2.GetNextDownlinkFCntForDevEUIResponse,
        )
        self.GetRandomDevAddr = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetRandomDevAddr',
            google.protobuf.empty_pb2.Empty,
            chirpstack_api.ns.ns_pb2.GetRandomDevAddrResponse,
        )
        self.CreateMACCommandQueueItem = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/CreateMACCommandQueueItem',
            chirpstack_api.ns.ns_pb2.CreateMACCommandQueueItemRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.SendProprietaryPayload = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/SendProprietaryPayload',
            chirpstack_api.ns.ns_pb2.SendProprietaryPayloadRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.CreateGateway = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/CreateGateway',
            chirpstack_api.ns.ns_pb2.CreateGatewayRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.GetGateway = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetGateway',
            chirpstack_api.ns.ns_pb2.GetGatewayRequest,
            chirpstack_api.ns.ns_pb2.GetGatewayResponse,
        )
        self.UpdateGateway = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/UpdateGateway',
            chirpstack_api.ns.ns_pb2.UpdateGatewayRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.DeleteGateway = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/DeleteGateway',
            chirpstack_api.ns.ns_pb2.DeleteGatewayRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.GenerateGatewayClientCertificate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GenerateGatewayClientCertificate',
            chirpstack_api.ns.ns_pb2.GenerateGatewayClientCertificateRequest,
            chirpstack_api.ns.ns_pb2.GenerateGatewayClientCertificateResponse,
        )
        self.CreateGatewayProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/CreateGatewayProfile',
            chirpstack_api.ns.ns_pb2.CreateGatewayProfileRequest,
            chirpstack_api.ns.ns_pb2.CreateGatewayProfileResponse,
        )
        self.GetGatewayProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetGatewayProfile',
            chirpstack_api.ns.ns_pb2.GetGatewayProfileRequest,
            chirpstack_api.ns.ns_pb2.GetGatewayProfileResponse,
        )
        self.UpdateGatewayProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/UpdateGatewayProfile',
            chirpstack_api.ns.ns_pb2.UpdateGatewayProfileRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.DeleteGatewayProfile = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/DeleteGatewayProfile',
            chirpstack_api.ns.ns_pb2.DeleteGatewayProfileRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.GetGatewayStats = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetGatewayStats',
            chirpstack_api.ns.ns_pb2.GetGatewayStatsRequest,
            chirpstack_api.ns.ns_pb2.GetGatewayStatsResponse,
        )
        self.StreamFrameLogsForGateway = grpclib.client.UnaryStreamMethod(
            channel,
            '/ns.NetworkServerService/StreamFrameLogsForGateway',
            chirpstack_api.ns.ns_pb2.StreamFrameLogsForGatewayRequest,
            chirpstack_api.ns.ns_pb2.StreamFrameLogsForGatewayResponse,
        )
        self.StreamFrameLogsForDevice = grpclib.client.UnaryStreamMethod(
            channel,
            '/ns.NetworkServerService/StreamFrameLogsForDevice',
            chirpstack_api.ns.ns_pb2.StreamFrameLogsForDeviceRequest,
            chirpstack_api.ns.ns_pb2.StreamFrameLogsForDeviceResponse,
        )
        self.CreateMulticastGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/CreateMulticastGroup',
            chirpstack_api.ns.ns_pb2.CreateMulticastGroupRequest,
            chirpstack_api.ns.ns_pb2.CreateMulticastGroupResponse,
        )
        self.GetMulticastGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetMulticastGroup',
            chirpstack_api.ns.ns_pb2.GetMulticastGroupRequest,
            chirpstack_api.ns.ns_pb2.GetMulticastGroupResponse,
        )
        self.UpdateMulticastGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/UpdateMulticastGroup',
            chirpstack_api.ns.ns_pb2.UpdateMulticastGroupRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.DeleteMulticastGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/DeleteMulticastGroup',
            chirpstack_api.ns.ns_pb2.DeleteMulticastGroupRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.AddDeviceToMulticastGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/AddDeviceToMulticastGroup',
            chirpstack_api.ns.ns_pb2.AddDeviceToMulticastGroupRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.RemoveDeviceFromMulticastGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/RemoveDeviceFromMulticastGroup',
            chirpstack_api.ns.ns_pb2.RemoveDeviceFromMulticastGroupRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.EnqueueMulticastQueueItem = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/EnqueueMulticastQueueItem',
            chirpstack_api.ns.ns_pb2.EnqueueMulticastQueueItemRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.FlushMulticastQueueForMulticastGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/FlushMulticastQueueForMulticastGroup',
            chirpstack_api.ns.ns_pb2.FlushMulticastQueueForMulticastGroupRequest,
            google.protobuf.empty_pb2.Empty,
        )
        self.GetMulticastQueueItemsForMulticastGroup = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetMulticastQueueItemsForMulticastGroup',
            chirpstack_api.ns.ns_pb2.GetMulticastQueueItemsForMulticastGroupRequest,
            chirpstack_api.ns.ns_pb2.GetMulticastQueueItemsForMulticastGroupResponse,
        )
        self.GetVersion = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetVersion',
            google.protobuf.empty_pb2.Empty,
            chirpstack_api.ns.ns_pb2.GetVersionResponse,
        )
        self.GetADRAlgorithms = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/GetADRAlgorithms',
            google.protobuf.empty_pb2.Empty,
            chirpstack_api.ns.ns_pb2.GetADRAlgorithmsResponse,
        )
        self.ClearDeviceNonces = grpclib.client.UnaryUnaryMethod(
            channel,
            '/ns.NetworkServerService/ClearDeviceNonces',
            chirpstack_api.ns.ns_pb2.ClearDeviceNoncesRequest,
            google.protobuf.empty_pb2.Empty,
        )
