{
  "swagger": "2.0",
  "info": {
    "title": "as/external/api/organization.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/organizations": {
      "get": {
        "summary": "Get organization list.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListOrganizationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Max number of organizations to return in the result-set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "search",
            "description": "When provided, the given string will be used to search on\ndisplayName.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      },
      "post": {
        "summary": "Create a new organization.",
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateOrganizationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateOrganizationRequest"
            }
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/api/organizations/{id}": {
      "get": {
        "summary": "Get data for a particular organization.",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetOrganizationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Organization ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      },
      "delete": {
        "summary": "Delete an organization.",
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Organization ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/api/organizations/{organization.id}": {
      "put": {
        "summary": "Update an existing organization.",
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "organization.id",
            "description": "Organization ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateOrganizationRequest"
            }
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/api/organizations/{organization_id}/users": {
      "get": {
        "summary": "Get organization's user list.",
        "operationId": "ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListOrganizationUsersResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "Organization ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "Max number of users to return in the result-set.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/api/organizations/{organization_id}/users/{user_id}": {
      "get": {
        "summary": "Get data for a particular organization user.",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetOrganizationUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "Organization ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "user_id",
            "description": "User ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      },
      "delete": {
        "summary": "Delete a user from an organization.",
        "operationId": "DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "description": "Organization ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "user_id",
            "description": "User ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/api/organizations/{organization_user.organization_id}/users": {
      "post": {
        "summary": "Add a new user to an organization. The user is matched based on email, not user id.",
        "operationId": "AddUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "organization_user.organization_id",
            "description": "Organization ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiAddOrganizationUserRequest"
            }
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    },
    "/api/organizations/{organization_user.organization_id}/users/{organization_user.user_id}": {
      "put": {
        "summary": "Update a user in an organization.",
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "organization_user.organization_id",
            "description": "Organization ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "organization_user.user_id",
            "description": "User ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateOrganizationUserRequest"
            }
          }
        ],
        "tags": [
          "OrganizationService"
        ]
      }
    }
  },
  "definitions": {
    "apiAddOrganizationUserRequest": {
      "type": "object",
      "properties": {
        "organizationUser": {
          "$ref": "#/definitions/apiOrganizationUser",
          "description": "Organization-user object to create."
        }
      }
    },
    "apiCreateOrganizationRequest": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/apiOrganization",
          "description": "Organization object to create."
        }
      }
    },
    "apiCreateOrganizationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID."
        }
      }
    },
    "apiGetOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/apiOrganization",
          "description": "Organization object."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "apiGetOrganizationUserResponse": {
      "type": "object",
      "properties": {
        "organizationUser": {
          "$ref": "#/definitions/apiOrganizationUser",
          "description": "Organization-user object."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      },
      "title": "Response for a user in the organization"
    },
    "apiListOrganizationResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of organizations."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiOrganizationListItem"
          }
        }
      }
    },
    "apiListOrganizationUsersResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "The total number of users in the organization."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiOrganizationUserListItem"
          }
        }
      }
    },
    "apiOrganization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID."
        },
        "name": {
          "type": "string",
          "description": "Organization name."
        },
        "displayName": {
          "type": "string",
          "description": "Organization display name."
        },
        "canHaveGateways": {
          "type": "boolean",
          "format": "boolean",
          "title": "Can the organization create and \"own\" Gateways?"
        },
        "maxGatewayCount": {
          "type": "integer",
          "format": "int64",
          "description": "Max. gateway count for organization.\nWhen set to 0, the organization can have unlimited gateways."
        },
        "maxDeviceCount": {
          "type": "integer",
          "format": "int64",
          "description": "Max. device count for organization.\nWhen set to 0, the organization can have unlimited devices."
        }
      }
    },
    "apiOrganizationListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID."
        },
        "name": {
          "type": "string",
          "description": "Organization name."
        },
        "displayName": {
          "type": "string",
          "description": "Organization display name."
        },
        "canHaveGateways": {
          "type": "boolean",
          "format": "boolean",
          "title": "Can the organization create and \"own\" Gateways?"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "apiOrganizationUser": {
      "type": "object",
      "properties": {
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID."
        },
        "userID": {
          "type": "string",
          "format": "int64",
          "description": "User ID."
        },
        "isAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "User is admin within the context of the organization.\nThere is no need to set the is_device_admin and is_gateway_admin flags."
        },
        "isDeviceAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "User is able to modify device related resources (applications,\ndevice-profiles, devices, multicast-groups)."
        },
        "isGatewayAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "User is able to modify gateways."
        },
        "email": {
          "type": "string",
          "description": "Email (only used on get and when adding a user to an organization)."
        }
      }
    },
    "apiOrganizationUserListItem": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "string",
          "format": "int64",
          "description": "User ID.\nThis is not used on create, you must set the user email address\nassociated with the user to add an user to an organization."
        },
        "email": {
          "type": "string",
          "description": "Email."
        },
        "isAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "User is admin within the context of the organization.\nThere is no need to set the is_device_admin and is_gateway_admin flags."
        },
        "isDeviceAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "User is able to modify device related resources (applications,\ndevice-profiles, devices, multicast-groups)."
        },
        "isGatewayAdmin": {
          "type": "boolean",
          "format": "boolean",
          "description": "User is able to modify gateways."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "apiUpdateOrganizationRequest": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/apiOrganization",
          "description": "Organization object to update."
        }
      }
    },
    "apiUpdateOrganizationUserRequest": {
      "type": "object",
      "properties": {
        "organizationUser": {
          "$ref": "#/definitions/apiOrganizationUser",
          "description": "Organization-user object to update."
        }
      }
    }
  }
}
