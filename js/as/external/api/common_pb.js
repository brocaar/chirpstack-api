/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
var common_common_pb = require('../../../common/common_pb.js');
var gw_gw_pb = require('../../../gw/gw_pb.js');
goog.exportSymbol('proto.api.DownlinkFrameLog', null, global);
goog.exportSymbol('proto.api.DownlinkTXInfo', null, global);
goog.exportSymbol('proto.api.EncryptedFineTimestamp', null, global);
goog.exportSymbol('proto.api.RXWindow', null, global);
goog.exportSymbol('proto.api.UplinkFrameLog', null, global);
goog.exportSymbol('proto.api.UplinkRXInfo', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UplinkFrameLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.UplinkFrameLog.repeatedFields_, null);
};
goog.inherits(proto.api.UplinkFrameLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.UplinkFrameLog.displayName = 'proto.api.UplinkFrameLog';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.UplinkFrameLog.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UplinkFrameLog.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UplinkFrameLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UplinkFrameLog} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.UplinkFrameLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    txInfo: (f = msg.getTxInfo()) && gw_gw_pb.UplinkTXInfo.toObject(includeInstance, f),
    rxInfoList: jspb.Message.toObjectList(msg.getRxInfoList(),
    gw_gw_pb.UplinkRXInfo.toObject, includeInstance),
    phyPayloadJson: msg.getPhyPayloadJson()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UplinkFrameLog}
 */
proto.api.UplinkFrameLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UplinkFrameLog;
  return proto.api.UplinkFrameLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UplinkFrameLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UplinkFrameLog}
 */
proto.api.UplinkFrameLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new gw_gw_pb.UplinkTXInfo;
      reader.readMessage(value,gw_gw_pb.UplinkTXInfo.deserializeBinaryFromReader);
      msg.setTxInfo(value);
      break;
    case 2:
      var value = new gw_gw_pb.UplinkRXInfo;
      reader.readMessage(value,gw_gw_pb.UplinkRXInfo.deserializeBinaryFromReader);
      msg.getRxInfoList().push(value);
      msg.setRxInfoList(msg.getRxInfoList());
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhyPayloadJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.UplinkFrameLog} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UplinkFrameLog.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UplinkFrameLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UplinkFrameLog.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getTxInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      gw_gw_pb.UplinkTXInfo.serializeBinaryToWriter
    );
  }
  f = this.getRxInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      gw_gw_pb.UplinkRXInfo.serializeBinaryToWriter
    );
  }
  f = this.getPhyPayloadJson();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.UplinkFrameLog} The clone.
 */
proto.api.UplinkFrameLog.prototype.cloneMessage = function() {
  return /** @type {!proto.api.UplinkFrameLog} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional gw.UplinkTXInfo tx_info = 1;
 * @return {proto.gw.UplinkTXInfo}
 */
proto.api.UplinkFrameLog.prototype.getTxInfo = function() {
  return /** @type{proto.gw.UplinkTXInfo} */ (
    jspb.Message.getWrapperField(this, gw_gw_pb.UplinkTXInfo, 1));
};


/** @param {proto.gw.UplinkTXInfo|undefined} value  */
proto.api.UplinkFrameLog.prototype.setTxInfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.UplinkFrameLog.prototype.clearTxInfo = function() {
  this.setTxInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.UplinkFrameLog.prototype.hasTxInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated gw.UplinkRXInfo rx_info = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.gw.UplinkRXInfo>}
 */
proto.api.UplinkFrameLog.prototype.getRxInfoList = function() {
  return /** @type{!Array.<!proto.gw.UplinkRXInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, gw_gw_pb.UplinkRXInfo, 2));
};


/** @param {Array.<!proto.gw.UplinkRXInfo>} value  */
proto.api.UplinkFrameLog.prototype.setRxInfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.api.UplinkFrameLog.prototype.clearRxInfoList = function() {
  this.setRxInfoList([]);
};


/**
 * optional string phy_payload_json = 3;
 * @return {string}
 */
proto.api.UplinkFrameLog.prototype.getPhyPayloadJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.UplinkFrameLog.prototype.setPhyPayloadJson = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DownlinkFrameLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DownlinkFrameLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DownlinkFrameLog.displayName = 'proto.api.DownlinkFrameLog';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DownlinkFrameLog.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DownlinkFrameLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DownlinkFrameLog} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.DownlinkFrameLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    txInfo: (f = msg.getTxInfo()) && gw_gw_pb.DownlinkTXInfo.toObject(includeInstance, f),
    phyPayloadJson: msg.getPhyPayloadJson()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DownlinkFrameLog}
 */
proto.api.DownlinkFrameLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DownlinkFrameLog;
  return proto.api.DownlinkFrameLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DownlinkFrameLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DownlinkFrameLog}
 */
proto.api.DownlinkFrameLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new gw_gw_pb.DownlinkTXInfo;
      reader.readMessage(value,gw_gw_pb.DownlinkTXInfo.deserializeBinaryFromReader);
      msg.setTxInfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhyPayloadJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.DownlinkFrameLog} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DownlinkFrameLog.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DownlinkFrameLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DownlinkFrameLog.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getTxInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      gw_gw_pb.DownlinkTXInfo.serializeBinaryToWriter
    );
  }
  f = this.getPhyPayloadJson();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.DownlinkFrameLog} The clone.
 */
proto.api.DownlinkFrameLog.prototype.cloneMessage = function() {
  return /** @type {!proto.api.DownlinkFrameLog} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional gw.DownlinkTXInfo tx_info = 1;
 * @return {proto.gw.DownlinkTXInfo}
 */
proto.api.DownlinkFrameLog.prototype.getTxInfo = function() {
  return /** @type{proto.gw.DownlinkTXInfo} */ (
    jspb.Message.getWrapperField(this, gw_gw_pb.DownlinkTXInfo, 1));
};


/** @param {proto.gw.DownlinkTXInfo|undefined} value  */
proto.api.DownlinkFrameLog.prototype.setTxInfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.DownlinkFrameLog.prototype.clearTxInfo = function() {
  this.setTxInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.DownlinkFrameLog.prototype.hasTxInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string phy_payload_json = 2;
 * @return {string}
 */
proto.api.DownlinkFrameLog.prototype.getPhyPayloadJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.DownlinkFrameLog.prototype.setPhyPayloadJson = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UplinkRXInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.UplinkRXInfo.oneofGroups_);
};
goog.inherits(proto.api.UplinkRXInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.UplinkRXInfo.displayName = 'proto.api.UplinkRXInfo';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.UplinkRXInfo.oneofGroups_ = [[13,14]];

/**
 * @enum {number}
 */
proto.api.UplinkRXInfo.FineTimestampCase = {
  FINE_TIMESTAMP_NOT_SET: 0,
  ENCRYPTED_FINE_TIMESTAMP: 13,
  PLAIN_FINE_TIMESTAMP: 14
};

/**
 * @return {proto.api.UplinkRXInfo.FineTimestampCase}
 */
proto.api.UplinkRXInfo.prototype.getFineTimestampCase = function() {
  return /** @type {proto.api.UplinkRXInfo.FineTimestampCase} */(jspb.Message.computeOneofCase(this, proto.api.UplinkRXInfo.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UplinkRXInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UplinkRXInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UplinkRXInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.UplinkRXInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    gatewayId: msg.getGatewayId(),
    uplinkId: msg.getUplinkId(),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timeSinceGpsEpoch: (f = msg.getTimeSinceGpsEpoch()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    rssi: msg.getRssi(),
    loraSnr: msg.getLoraSnr(),
    channel: msg.getChannel(),
    rfChain: msg.getRfChain(),
    board: msg.getBoard(),
    antenna: msg.getAntenna(),
    location: (f = msg.getLocation()) && common_common_pb.Location.toObject(includeInstance, f),
    fineTimestampType: msg.getFineTimestampType(),
    encryptedFineTimestamp: (f = msg.getEncryptedFineTimestamp()) && proto.api.EncryptedFineTimestamp.toObject(includeInstance, f),
    plainFineTimestamp: (f = msg.getPlainFineTimestamp()) && gw_gw_pb.PlainFineTimestamp.toObject(includeInstance, f),
    context: msg.getContext_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UplinkRXInfo}
 */
proto.api.UplinkRXInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UplinkRXInfo;
  return proto.api.UplinkRXInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UplinkRXInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UplinkRXInfo}
 */
proto.api.UplinkRXInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatewayId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setUplinkId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTimeSinceGpsEpoch(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRssi(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLoraSnr(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChannel(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRfChain(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoard(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAntenna(value);
      break;
    case 11:
      var value = new common_common_pb.Location;
      reader.readMessage(value,common_common_pb.Location.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 12:
      var value = /** @type {!proto.gw.FineTimestampType} */ (reader.readEnum());
      msg.setFineTimestampType(value);
      break;
    case 13:
      var value = new proto.api.EncryptedFineTimestamp;
      reader.readMessage(value,proto.api.EncryptedFineTimestamp.deserializeBinaryFromReader);
      msg.setEncryptedFineTimestamp(value);
      break;
    case 14:
      var value = new gw_gw_pb.PlainFineTimestamp;
      reader.readMessage(value,gw_gw_pb.PlainFineTimestamp.deserializeBinaryFromReader);
      msg.setPlainFineTimestamp(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.UplinkRXInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UplinkRXInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UplinkRXInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UplinkRXInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getGatewayId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getUplinkId();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = this.getTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = this.getTimeSinceGpsEpoch();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = this.getRssi();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = this.getLoraSnr();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = this.getChannel();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = this.getRfChain();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = this.getBoard();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = this.getAntenna();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = this.getLocation();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      common_common_pb.Location.serializeBinaryToWriter
    );
  }
  f = this.getFineTimestampType();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = this.getEncryptedFineTimestamp();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.api.EncryptedFineTimestamp.serializeBinaryToWriter
    );
  }
  f = this.getPlainFineTimestamp();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      gw_gw_pb.PlainFineTimestamp.serializeBinaryToWriter
    );
  }
  f = this.getContext_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      15,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.UplinkRXInfo} The clone.
 */
proto.api.UplinkRXInfo.prototype.cloneMessage = function() {
  return /** @type {!proto.api.UplinkRXInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string gateway_id = 1;
 * @return {string}
 */
proto.api.UplinkRXInfo.prototype.getGatewayId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.UplinkRXInfo.prototype.setGatewayId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string uplink_id = 16;
 * @return {string}
 */
proto.api.UplinkRXInfo.prototype.getUplinkId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 16, ""));
};


/** @param {string} value  */
proto.api.UplinkRXInfo.prototype.setUplinkId = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * optional google.protobuf.Timestamp time = 2;
 * @return {proto.google.protobuf.Timestamp}
 */
proto.api.UplinkRXInfo.prototype.getTime = function() {
  return /** @type{proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {proto.google.protobuf.Timestamp|undefined} value  */
proto.api.UplinkRXInfo.prototype.setTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.UplinkRXInfo.prototype.clearTime = function() {
  this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.UplinkRXInfo.prototype.hasTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Duration time_since_gps_epoch = 3;
 * @return {proto.google.protobuf.Duration}
 */
proto.api.UplinkRXInfo.prototype.getTimeSinceGpsEpoch = function() {
  return /** @type{proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/** @param {proto.google.protobuf.Duration|undefined} value  */
proto.api.UplinkRXInfo.prototype.setTimeSinceGpsEpoch = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.UplinkRXInfo.prototype.clearTimeSinceGpsEpoch = function() {
  this.setTimeSinceGpsEpoch(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.UplinkRXInfo.prototype.hasTimeSinceGpsEpoch = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 rssi = 5;
 * @return {number}
 */
proto.api.UplinkRXInfo.prototype.getRssi = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.api.UplinkRXInfo.prototype.setRssi = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double lora_snr = 6;
 * @return {number}
 */
proto.api.UplinkRXInfo.prototype.getLoraSnr = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.api.UplinkRXInfo.prototype.setLoraSnr = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional uint32 channel = 7;
 * @return {number}
 */
proto.api.UplinkRXInfo.prototype.getChannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.api.UplinkRXInfo.prototype.setChannel = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional uint32 rf_chain = 8;
 * @return {number}
 */
proto.api.UplinkRXInfo.prototype.getRfChain = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.api.UplinkRXInfo.prototype.setRfChain = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional uint32 board = 9;
 * @return {number}
 */
proto.api.UplinkRXInfo.prototype.getBoard = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.api.UplinkRXInfo.prototype.setBoard = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional uint32 antenna = 10;
 * @return {number}
 */
proto.api.UplinkRXInfo.prototype.getAntenna = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {number} value  */
proto.api.UplinkRXInfo.prototype.setAntenna = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional common.Location location = 11;
 * @return {proto.common.Location}
 */
proto.api.UplinkRXInfo.prototype.getLocation = function() {
  return /** @type{proto.common.Location} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Location, 11));
};


/** @param {proto.common.Location|undefined} value  */
proto.api.UplinkRXInfo.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.api.UplinkRXInfo.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.UplinkRXInfo.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional gw.FineTimestampType fine_timestamp_type = 12;
 * @return {!proto.gw.FineTimestampType}
 */
proto.api.UplinkRXInfo.prototype.getFineTimestampType = function() {
  return /** @type {!proto.gw.FineTimestampType} */ (jspb.Message.getFieldProto3(this, 12, 0));
};


/** @param {!proto.gw.FineTimestampType} value  */
proto.api.UplinkRXInfo.prototype.setFineTimestampType = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional EncryptedFineTimestamp encrypted_fine_timestamp = 13;
 * @return {proto.api.EncryptedFineTimestamp}
 */
proto.api.UplinkRXInfo.prototype.getEncryptedFineTimestamp = function() {
  return /** @type{proto.api.EncryptedFineTimestamp} */ (
    jspb.Message.getWrapperField(this, proto.api.EncryptedFineTimestamp, 13));
};


/** @param {proto.api.EncryptedFineTimestamp|undefined} value  */
proto.api.UplinkRXInfo.prototype.setEncryptedFineTimestamp = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.api.UplinkRXInfo.oneofGroups_[0], value);
};


proto.api.UplinkRXInfo.prototype.clearEncryptedFineTimestamp = function() {
  this.setEncryptedFineTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.UplinkRXInfo.prototype.hasEncryptedFineTimestamp = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional gw.PlainFineTimestamp plain_fine_timestamp = 14;
 * @return {proto.gw.PlainFineTimestamp}
 */
proto.api.UplinkRXInfo.prototype.getPlainFineTimestamp = function() {
  return /** @type{proto.gw.PlainFineTimestamp} */ (
    jspb.Message.getWrapperField(this, gw_gw_pb.PlainFineTimestamp, 14));
};


/** @param {proto.gw.PlainFineTimestamp|undefined} value  */
proto.api.UplinkRXInfo.prototype.setPlainFineTimestamp = function(value) {
  jspb.Message.setOneofWrapperField(this, 14, proto.api.UplinkRXInfo.oneofGroups_[0], value);
};


proto.api.UplinkRXInfo.prototype.clearPlainFineTimestamp = function() {
  this.setPlainFineTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.UplinkRXInfo.prototype.hasPlainFineTimestamp = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bytes context = 15;
 * @return {!(string|Uint8Array)}
 */
proto.api.UplinkRXInfo.prototype.getContext = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 15, ""));
};


/**
 * optional bytes context = 15;
 * This is a type-conversion wrapper around `getContext()`
 * @return {string}
 */
proto.api.UplinkRXInfo.prototype.getContext_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContext()));
};


/**
 * optional bytes context = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContext()`
 * @return {!Uint8Array}
 */
proto.api.UplinkRXInfo.prototype.getContext_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContext()));
};


/** @param {!(string|Uint8Array)} value  */
proto.api.UplinkRXInfo.prototype.setContext = function(value) {
  jspb.Message.setField(this, 15, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.EncryptedFineTimestamp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.EncryptedFineTimestamp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.EncryptedFineTimestamp.displayName = 'proto.api.EncryptedFineTimestamp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.EncryptedFineTimestamp.prototype.toObject = function(opt_includeInstance) {
  return proto.api.EncryptedFineTimestamp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.EncryptedFineTimestamp} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.EncryptedFineTimestamp.toObject = function(includeInstance, msg) {
  var f, obj = {
    aesKeyIndex: msg.getAesKeyIndex(),
    encryptedNs: msg.getEncryptedNs_asB64(),
    fpgaId: msg.getFpgaId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.EncryptedFineTimestamp}
 */
proto.api.EncryptedFineTimestamp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.EncryptedFineTimestamp;
  return proto.api.EncryptedFineTimestamp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.EncryptedFineTimestamp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.EncryptedFineTimestamp}
 */
proto.api.EncryptedFineTimestamp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAesKeyIndex(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptedNs(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFpgaId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.EncryptedFineTimestamp} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EncryptedFineTimestamp.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.EncryptedFineTimestamp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EncryptedFineTimestamp.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAesKeyIndex();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = this.getEncryptedNs_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = this.getFpgaId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.EncryptedFineTimestamp} The clone.
 */
proto.api.EncryptedFineTimestamp.prototype.cloneMessage = function() {
  return /** @type {!proto.api.EncryptedFineTimestamp} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 aes_key_index = 1;
 * @return {number}
 */
proto.api.EncryptedFineTimestamp.prototype.getAesKeyIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.EncryptedFineTimestamp.prototype.setAesKeyIndex = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes encrypted_ns = 2;
 * @return {!(string|Uint8Array)}
 */
proto.api.EncryptedFineTimestamp.prototype.getEncryptedNs = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/**
 * optional bytes encrypted_ns = 2;
 * This is a type-conversion wrapper around `getEncryptedNs()`
 * @return {string}
 */
proto.api.EncryptedFineTimestamp.prototype.getEncryptedNs_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptedNs()));
};


/**
 * optional bytes encrypted_ns = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptedNs()`
 * @return {!Uint8Array}
 */
proto.api.EncryptedFineTimestamp.prototype.getEncryptedNs_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptedNs()));
};


/** @param {!(string|Uint8Array)} value  */
proto.api.EncryptedFineTimestamp.prototype.setEncryptedNs = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string fpga_id = 3;
 * @return {string}
 */
proto.api.EncryptedFineTimestamp.prototype.getFpgaId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.EncryptedFineTimestamp.prototype.setFpgaId = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DownlinkTXInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api.DownlinkTXInfo.oneofGroups_);
};
goog.inherits(proto.api.DownlinkTXInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DownlinkTXInfo.displayName = 'proto.api.DownlinkTXInfo';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api.DownlinkTXInfo.oneofGroups_ = [[8,9],[13,14,15]];

/**
 * @enum {number}
 */
proto.api.DownlinkTXInfo.ModulationInfoCase = {
  MODULATION_INFO_NOT_SET: 0,
  LORA_MODULATION_INFO: 8,
  FSK_MODULATION_INFO: 9
};

/**
 * @return {proto.api.DownlinkTXInfo.ModulationInfoCase}
 */
proto.api.DownlinkTXInfo.prototype.getModulationInfoCase = function() {
  return /** @type {proto.api.DownlinkTXInfo.ModulationInfoCase} */(jspb.Message.computeOneofCase(this, proto.api.DownlinkTXInfo.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.api.DownlinkTXInfo.TimingInfoCase = {
  TIMING_INFO_NOT_SET: 0,
  IMMEDIATELY_TIMING_INFO: 13,
  DELAY_TIMING_INFO: 14,
  GPS_EPOCH_TIMING_INFO: 15
};

/**
 * @return {proto.api.DownlinkTXInfo.TimingInfoCase}
 */
proto.api.DownlinkTXInfo.prototype.getTimingInfoCase = function() {
  return /** @type {proto.api.DownlinkTXInfo.TimingInfoCase} */(jspb.Message.computeOneofCase(this, proto.api.DownlinkTXInfo.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DownlinkTXInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DownlinkTXInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DownlinkTXInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.DownlinkTXInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    gatewayId: msg.getGatewayId(),
    downlinkId: msg.getDownlinkId(),
    frequency: msg.getFrequency(),
    power: msg.getPower(),
    modulation: msg.getModulation(),
    loraModulationInfo: (f = msg.getLoraModulationInfo()) && gw_gw_pb.LoRaModulationInfo.toObject(includeInstance, f),
    fskModulationInfo: (f = msg.getFskModulationInfo()) && gw_gw_pb.FSKModulationInfo.toObject(includeInstance, f),
    board: msg.getBoard(),
    antenna: msg.getAntenna(),
    timing: msg.getTiming(),
    immediatelyTimingInfo: (f = msg.getImmediatelyTimingInfo()) && gw_gw_pb.ImmediatelyTimingInfo.toObject(includeInstance, f),
    delayTimingInfo: (f = msg.getDelayTimingInfo()) && gw_gw_pb.DelayTimingInfo.toObject(includeInstance, f),
    gpsEpochTimingInfo: (f = msg.getGpsEpochTimingInfo()) && gw_gw_pb.GPSEpochTimingInfo.toObject(includeInstance, f),
    context: msg.getContext_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DownlinkTXInfo}
 */
proto.api.DownlinkTXInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DownlinkTXInfo;
  return proto.api.DownlinkTXInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DownlinkTXInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DownlinkTXInfo}
 */
proto.api.DownlinkTXInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatewayId(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownlinkId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFrequency(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPower(value);
      break;
    case 7:
      var value = /** @type {!proto.common.Modulation} */ (reader.readEnum());
      msg.setModulation(value);
      break;
    case 8:
      var value = new gw_gw_pb.LoRaModulationInfo;
      reader.readMessage(value,gw_gw_pb.LoRaModulationInfo.deserializeBinaryFromReader);
      msg.setLoraModulationInfo(value);
      break;
    case 9:
      var value = new gw_gw_pb.FSKModulationInfo;
      reader.readMessage(value,gw_gw_pb.FSKModulationInfo.deserializeBinaryFromReader);
      msg.setFskModulationInfo(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBoard(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAntenna(value);
      break;
    case 12:
      var value = /** @type {!proto.gw.DownlinkTiming} */ (reader.readEnum());
      msg.setTiming(value);
      break;
    case 13:
      var value = new gw_gw_pb.ImmediatelyTimingInfo;
      reader.readMessage(value,gw_gw_pb.ImmediatelyTimingInfo.deserializeBinaryFromReader);
      msg.setImmediatelyTimingInfo(value);
      break;
    case 14:
      var value = new gw_gw_pb.DelayTimingInfo;
      reader.readMessage(value,gw_gw_pb.DelayTimingInfo.deserializeBinaryFromReader);
      msg.setDelayTimingInfo(value);
      break;
    case 15:
      var value = new gw_gw_pb.GPSEpochTimingInfo;
      reader.readMessage(value,gw_gw_pb.GPSEpochTimingInfo.deserializeBinaryFromReader);
      msg.setGpsEpochTimingInfo(value);
      break;
    case 16:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.DownlinkTXInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DownlinkTXInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DownlinkTXInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DownlinkTXInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getGatewayId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getDownlinkId();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = this.getFrequency();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = this.getPower();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = this.getModulation();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = this.getLoraModulationInfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      gw_gw_pb.LoRaModulationInfo.serializeBinaryToWriter
    );
  }
  f = this.getFskModulationInfo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      gw_gw_pb.FSKModulationInfo.serializeBinaryToWriter
    );
  }
  f = this.getBoard();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = this.getAntenna();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = this.getTiming();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = this.getImmediatelyTimingInfo();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      gw_gw_pb.ImmediatelyTimingInfo.serializeBinaryToWriter
    );
  }
  f = this.getDelayTimingInfo();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      gw_gw_pb.DelayTimingInfo.serializeBinaryToWriter
    );
  }
  f = this.getGpsEpochTimingInfo();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      gw_gw_pb.GPSEpochTimingInfo.serializeBinaryToWriter
    );
  }
  f = this.getContext_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      16,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.DownlinkTXInfo} The clone.
 */
proto.api.DownlinkTXInfo.prototype.cloneMessage = function() {
  return /** @type {!proto.api.DownlinkTXInfo} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string gateway_id = 1;
 * @return {string}
 */
proto.api.DownlinkTXInfo.prototype.getGatewayId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.DownlinkTXInfo.prototype.setGatewayId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string downlink_id = 17;
 * @return {string}
 */
proto.api.DownlinkTXInfo.prototype.getDownlinkId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 17, ""));
};


/** @param {string} value  */
proto.api.DownlinkTXInfo.prototype.setDownlinkId = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * optional uint32 frequency = 5;
 * @return {number}
 */
proto.api.DownlinkTXInfo.prototype.getFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.api.DownlinkTXInfo.prototype.setFrequency = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int32 power = 6;
 * @return {number}
 */
proto.api.DownlinkTXInfo.prototype.getPower = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.api.DownlinkTXInfo.prototype.setPower = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional common.Modulation modulation = 7;
 * @return {!proto.common.Modulation}
 */
proto.api.DownlinkTXInfo.prototype.getModulation = function() {
  return /** @type {!proto.common.Modulation} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {!proto.common.Modulation} value  */
proto.api.DownlinkTXInfo.prototype.setModulation = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional gw.LoRaModulationInfo lora_modulation_info = 8;
 * @return {proto.gw.LoRaModulationInfo}
 */
proto.api.DownlinkTXInfo.prototype.getLoraModulationInfo = function() {
  return /** @type{proto.gw.LoRaModulationInfo} */ (
    jspb.Message.getWrapperField(this, gw_gw_pb.LoRaModulationInfo, 8));
};


/** @param {proto.gw.LoRaModulationInfo|undefined} value  */
proto.api.DownlinkTXInfo.prototype.setLoraModulationInfo = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.api.DownlinkTXInfo.oneofGroups_[0], value);
};


proto.api.DownlinkTXInfo.prototype.clearLoraModulationInfo = function() {
  this.setLoraModulationInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.DownlinkTXInfo.prototype.hasLoraModulationInfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional gw.FSKModulationInfo fsk_modulation_info = 9;
 * @return {proto.gw.FSKModulationInfo}
 */
proto.api.DownlinkTXInfo.prototype.getFskModulationInfo = function() {
  return /** @type{proto.gw.FSKModulationInfo} */ (
    jspb.Message.getWrapperField(this, gw_gw_pb.FSKModulationInfo, 9));
};


/** @param {proto.gw.FSKModulationInfo|undefined} value  */
proto.api.DownlinkTXInfo.prototype.setFskModulationInfo = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.api.DownlinkTXInfo.oneofGroups_[0], value);
};


proto.api.DownlinkTXInfo.prototype.clearFskModulationInfo = function() {
  this.setFskModulationInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.DownlinkTXInfo.prototype.hasFskModulationInfo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 board = 10;
 * @return {number}
 */
proto.api.DownlinkTXInfo.prototype.getBoard = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 10, 0));
};


/** @param {number} value  */
proto.api.DownlinkTXInfo.prototype.setBoard = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional uint32 antenna = 11;
 * @return {number}
 */
proto.api.DownlinkTXInfo.prototype.getAntenna = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 11, 0));
};


/** @param {number} value  */
proto.api.DownlinkTXInfo.prototype.setAntenna = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional gw.DownlinkTiming timing = 12;
 * @return {!proto.gw.DownlinkTiming}
 */
proto.api.DownlinkTXInfo.prototype.getTiming = function() {
  return /** @type {!proto.gw.DownlinkTiming} */ (jspb.Message.getFieldProto3(this, 12, 0));
};


/** @param {!proto.gw.DownlinkTiming} value  */
proto.api.DownlinkTXInfo.prototype.setTiming = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional gw.ImmediatelyTimingInfo immediately_timing_info = 13;
 * @return {proto.gw.ImmediatelyTimingInfo}
 */
proto.api.DownlinkTXInfo.prototype.getImmediatelyTimingInfo = function() {
  return /** @type{proto.gw.ImmediatelyTimingInfo} */ (
    jspb.Message.getWrapperField(this, gw_gw_pb.ImmediatelyTimingInfo, 13));
};


/** @param {proto.gw.ImmediatelyTimingInfo|undefined} value  */
proto.api.DownlinkTXInfo.prototype.setImmediatelyTimingInfo = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.api.DownlinkTXInfo.oneofGroups_[1], value);
};


proto.api.DownlinkTXInfo.prototype.clearImmediatelyTimingInfo = function() {
  this.setImmediatelyTimingInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.DownlinkTXInfo.prototype.hasImmediatelyTimingInfo = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional gw.DelayTimingInfo delay_timing_info = 14;
 * @return {proto.gw.DelayTimingInfo}
 */
proto.api.DownlinkTXInfo.prototype.getDelayTimingInfo = function() {
  return /** @type{proto.gw.DelayTimingInfo} */ (
    jspb.Message.getWrapperField(this, gw_gw_pb.DelayTimingInfo, 14));
};


/** @param {proto.gw.DelayTimingInfo|undefined} value  */
proto.api.DownlinkTXInfo.prototype.setDelayTimingInfo = function(value) {
  jspb.Message.setOneofWrapperField(this, 14, proto.api.DownlinkTXInfo.oneofGroups_[1], value);
};


proto.api.DownlinkTXInfo.prototype.clearDelayTimingInfo = function() {
  this.setDelayTimingInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.DownlinkTXInfo.prototype.hasDelayTimingInfo = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional gw.GPSEpochTimingInfo gps_epoch_timing_info = 15;
 * @return {proto.gw.GPSEpochTimingInfo}
 */
proto.api.DownlinkTXInfo.prototype.getGpsEpochTimingInfo = function() {
  return /** @type{proto.gw.GPSEpochTimingInfo} */ (
    jspb.Message.getWrapperField(this, gw_gw_pb.GPSEpochTimingInfo, 15));
};


/** @param {proto.gw.GPSEpochTimingInfo|undefined} value  */
proto.api.DownlinkTXInfo.prototype.setGpsEpochTimingInfo = function(value) {
  jspb.Message.setOneofWrapperField(this, 15, proto.api.DownlinkTXInfo.oneofGroups_[1], value);
};


proto.api.DownlinkTXInfo.prototype.clearGpsEpochTimingInfo = function() {
  this.setGpsEpochTimingInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.DownlinkTXInfo.prototype.hasGpsEpochTimingInfo = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bytes context = 16;
 * @return {!(string|Uint8Array)}
 */
proto.api.DownlinkTXInfo.prototype.getContext = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 16, ""));
};


/**
 * optional bytes context = 16;
 * This is a type-conversion wrapper around `getContext()`
 * @return {string}
 */
proto.api.DownlinkTXInfo.prototype.getContext_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContext()));
};


/**
 * optional bytes context = 16;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContext()`
 * @return {!Uint8Array}
 */
proto.api.DownlinkTXInfo.prototype.getContext_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContext()));
};


/** @param {!(string|Uint8Array)} value  */
proto.api.DownlinkTXInfo.prototype.setContext = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * @enum {number}
 */
proto.api.RXWindow = {
  RX1: 0,
  RX2: 1
};

goog.object.extend(exports, proto.api);
