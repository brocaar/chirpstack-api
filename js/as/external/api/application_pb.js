/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.exportSymbol('proto.api.Application', null, global);
goog.exportSymbol('proto.api.ApplicationListItem', null, global);
goog.exportSymbol('proto.api.CreateApplicationRequest', null, global);
goog.exportSymbol('proto.api.CreateApplicationResponse', null, global);
goog.exportSymbol('proto.api.CreateHTTPIntegrationRequest', null, global);
goog.exportSymbol('proto.api.CreateInfluxDBIntegrationRequest', null, global);
goog.exportSymbol('proto.api.CreateThingsBoardIntegrationRequest', null, global);
goog.exportSymbol('proto.api.DeleteApplicationRequest', null, global);
goog.exportSymbol('proto.api.DeleteHTTPIntegrationRequest', null, global);
goog.exportSymbol('proto.api.DeleteInfluxDBIntegrationRequest', null, global);
goog.exportSymbol('proto.api.DeleteThingsBoardIntegrationRequest', null, global);
goog.exportSymbol('proto.api.GetApplicationRequest', null, global);
goog.exportSymbol('proto.api.GetApplicationResponse', null, global);
goog.exportSymbol('proto.api.GetHTTPIntegrationRequest', null, global);
goog.exportSymbol('proto.api.GetHTTPIntegrationResponse', null, global);
goog.exportSymbol('proto.api.GetInfluxDBIntegrationRequest', null, global);
goog.exportSymbol('proto.api.GetInfluxDBIntegrationResponse', null, global);
goog.exportSymbol('proto.api.GetThingsBoardIntegrationRequest', null, global);
goog.exportSymbol('proto.api.GetThingsBoardIntegrationResponse', null, global);
goog.exportSymbol('proto.api.HTTPIntegration', null, global);
goog.exportSymbol('proto.api.HTTPIntegrationHeader', null, global);
goog.exportSymbol('proto.api.InfluxDBIntegration', null, global);
goog.exportSymbol('proto.api.InfluxDBPrecision', null, global);
goog.exportSymbol('proto.api.IntegrationKind', null, global);
goog.exportSymbol('proto.api.IntegrationListItem', null, global);
goog.exportSymbol('proto.api.ListApplicationRequest', null, global);
goog.exportSymbol('proto.api.ListApplicationResponse', null, global);
goog.exportSymbol('proto.api.ListIntegrationRequest', null, global);
goog.exportSymbol('proto.api.ListIntegrationResponse', null, global);
goog.exportSymbol('proto.api.ThingsBoardIntegration', null, global);
goog.exportSymbol('proto.api.UpdateApplicationRequest', null, global);
goog.exportSymbol('proto.api.UpdateHTTPIntegrationRequest', null, global);
goog.exportSymbol('proto.api.UpdateInfluxDBIntegrationRequest', null, global);
goog.exportSymbol('proto.api.UpdateThingsBoardIntegrationRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Application = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Application, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Application.displayName = 'proto.api.Application';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Application.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Application.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Application} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.Application.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    name: msg.getName(),
    description: msg.getDescription(),
    organizationId: msg.getOrganizationId(),
    serviceProfileId: msg.getServiceProfileId(),
    payloadCodec: msg.getPayloadCodec(),
    payloadEncoderScript: msg.getPayloadEncoderScript(),
    payloadDecoderScript: msg.getPayloadDecoderScript()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Application}
 */
proto.api.Application.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Application;
  return proto.api.Application.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Application} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Application}
 */
proto.api.Application.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrganizationId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceProfileId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadCodec(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadEncoderScript(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadDecoderScript(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.Application} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.Application.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Application.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.Application.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getOrganizationId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = this.getServiceProfileId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getPayloadCodec();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getPayloadEncoderScript();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getPayloadDecoderScript();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.Application} The clone.
 */
proto.api.Application.prototype.cloneMessage = function() {
  return /** @type {!proto.api.Application} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.api.Application.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.Application.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.Application.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.Application.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.Application.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.Application.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 organization_id = 4;
 * @return {number}
 */
proto.api.Application.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.api.Application.prototype.setOrganizationId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string service_profile_id = 5;
 * @return {string}
 */
proto.api.Application.prototype.getServiceProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.Application.prototype.setServiceProfileId = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string payload_codec = 6;
 * @return {string}
 */
proto.api.Application.prototype.getPayloadCodec = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.api.Application.prototype.setPayloadCodec = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string payload_encoder_script = 7;
 * @return {string}
 */
proto.api.Application.prototype.getPayloadEncoderScript = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.api.Application.prototype.setPayloadEncoderScript = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string payload_decoder_script = 8;
 * @return {string}
 */
proto.api.Application.prototype.getPayloadDecoderScript = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.api.Application.prototype.setPayloadDecoderScript = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ApplicationListItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ApplicationListItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ApplicationListItem.displayName = 'proto.api.ApplicationListItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ApplicationListItem.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ApplicationListItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ApplicationListItem} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ApplicationListItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    name: msg.getName(),
    description: msg.getDescription(),
    organizationId: msg.getOrganizationId(),
    serviceProfileId: msg.getServiceProfileId(),
    serviceProfileName: msg.getServiceProfileName()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ApplicationListItem}
 */
proto.api.ApplicationListItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ApplicationListItem;
  return proto.api.ApplicationListItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ApplicationListItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ApplicationListItem}
 */
proto.api.ApplicationListItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrganizationId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceProfileId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceProfileName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ApplicationListItem} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ApplicationListItem.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ApplicationListItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ApplicationListItem.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getOrganizationId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = this.getServiceProfileId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getServiceProfileName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ApplicationListItem} The clone.
 */
proto.api.ApplicationListItem.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ApplicationListItem} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.api.ApplicationListItem.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ApplicationListItem.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.ApplicationListItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.ApplicationListItem.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.api.ApplicationListItem.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.ApplicationListItem.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 organization_id = 4;
 * @return {number}
 */
proto.api.ApplicationListItem.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.api.ApplicationListItem.prototype.setOrganizationId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string service_profile_id = 5;
 * @return {string}
 */
proto.api.ApplicationListItem.prototype.getServiceProfileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.ApplicationListItem.prototype.setServiceProfileId = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string service_profile_name = 6;
 * @return {string}
 */
proto.api.ApplicationListItem.prototype.getServiceProfileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.api.ApplicationListItem.prototype.setServiceProfileName = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CreateApplicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.CreateApplicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CreateApplicationRequest.displayName = 'proto.api.CreateApplicationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CreateApplicationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CreateApplicationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CreateApplicationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.CreateApplicationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    application: (f = msg.getApplication()) && proto.api.Application.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CreateApplicationRequest}
 */
proto.api.CreateApplicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CreateApplicationRequest;
  return proto.api.CreateApplicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CreateApplicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CreateApplicationRequest}
 */
proto.api.CreateApplicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Application;
      reader.readMessage(value,proto.api.Application.deserializeBinaryFromReader);
      msg.setApplication(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.CreateApplicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateApplicationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CreateApplicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateApplicationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplication();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Application.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.CreateApplicationRequest} The clone.
 */
proto.api.CreateApplicationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.CreateApplicationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Application application = 1;
 * @return {proto.api.Application}
 */
proto.api.CreateApplicationRequest.prototype.getApplication = function() {
  return /** @type{proto.api.Application} */ (
    jspb.Message.getWrapperField(this, proto.api.Application, 1));
};


/** @param {proto.api.Application|undefined} value  */
proto.api.CreateApplicationRequest.prototype.setApplication = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.CreateApplicationRequest.prototype.clearApplication = function() {
  this.setApplication(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.CreateApplicationRequest.prototype.hasApplication = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CreateApplicationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.CreateApplicationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CreateApplicationResponse.displayName = 'proto.api.CreateApplicationResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CreateApplicationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CreateApplicationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CreateApplicationResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.CreateApplicationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CreateApplicationResponse}
 */
proto.api.CreateApplicationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CreateApplicationResponse;
  return proto.api.CreateApplicationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CreateApplicationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CreateApplicationResponse}
 */
proto.api.CreateApplicationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.CreateApplicationResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateApplicationResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CreateApplicationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateApplicationResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.CreateApplicationResponse} The clone.
 */
proto.api.CreateApplicationResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.CreateApplicationResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.api.CreateApplicationResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.CreateApplicationResponse.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetApplicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetApplicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetApplicationRequest.displayName = 'proto.api.GetApplicationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetApplicationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetApplicationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetApplicationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetApplicationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetApplicationRequest}
 */
proto.api.GetApplicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetApplicationRequest;
  return proto.api.GetApplicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetApplicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetApplicationRequest}
 */
proto.api.GetApplicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetApplicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetApplicationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetApplicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetApplicationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetApplicationRequest} The clone.
 */
proto.api.GetApplicationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetApplicationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.api.GetApplicationRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.GetApplicationRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetApplicationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetApplicationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetApplicationResponse.displayName = 'proto.api.GetApplicationResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetApplicationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetApplicationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetApplicationResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetApplicationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    application: (f = msg.getApplication()) && proto.api.Application.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetApplicationResponse}
 */
proto.api.GetApplicationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetApplicationResponse;
  return proto.api.GetApplicationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetApplicationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetApplicationResponse}
 */
proto.api.GetApplicationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Application;
      reader.readMessage(value,proto.api.Application.deserializeBinaryFromReader);
      msg.setApplication(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetApplicationResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetApplicationResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetApplicationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetApplicationResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplication();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Application.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetApplicationResponse} The clone.
 */
proto.api.GetApplicationResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetApplicationResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Application application = 1;
 * @return {proto.api.Application}
 */
proto.api.GetApplicationResponse.prototype.getApplication = function() {
  return /** @type{proto.api.Application} */ (
    jspb.Message.getWrapperField(this, proto.api.Application, 1));
};


/** @param {proto.api.Application|undefined} value  */
proto.api.GetApplicationResponse.prototype.setApplication = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.GetApplicationResponse.prototype.clearApplication = function() {
  this.setApplication(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.GetApplicationResponse.prototype.hasApplication = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UpdateApplicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.UpdateApplicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.UpdateApplicationRequest.displayName = 'proto.api.UpdateApplicationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UpdateApplicationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UpdateApplicationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UpdateApplicationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.UpdateApplicationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    application: (f = msg.getApplication()) && proto.api.Application.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UpdateApplicationRequest}
 */
proto.api.UpdateApplicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UpdateApplicationRequest;
  return proto.api.UpdateApplicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UpdateApplicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UpdateApplicationRequest}
 */
proto.api.UpdateApplicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Application;
      reader.readMessage(value,proto.api.Application.deserializeBinaryFromReader);
      msg.setApplication(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.UpdateApplicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UpdateApplicationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UpdateApplicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UpdateApplicationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplication();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Application.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.UpdateApplicationRequest} The clone.
 */
proto.api.UpdateApplicationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.UpdateApplicationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Application application = 1;
 * @return {proto.api.Application}
 */
proto.api.UpdateApplicationRequest.prototype.getApplication = function() {
  return /** @type{proto.api.Application} */ (
    jspb.Message.getWrapperField(this, proto.api.Application, 1));
};


/** @param {proto.api.Application|undefined} value  */
proto.api.UpdateApplicationRequest.prototype.setApplication = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.UpdateApplicationRequest.prototype.clearApplication = function() {
  this.setApplication(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.UpdateApplicationRequest.prototype.hasApplication = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DeleteApplicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DeleteApplicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DeleteApplicationRequest.displayName = 'proto.api.DeleteApplicationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DeleteApplicationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DeleteApplicationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DeleteApplicationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.DeleteApplicationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DeleteApplicationRequest}
 */
proto.api.DeleteApplicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DeleteApplicationRequest;
  return proto.api.DeleteApplicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DeleteApplicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DeleteApplicationRequest}
 */
proto.api.DeleteApplicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.DeleteApplicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteApplicationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DeleteApplicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteApplicationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.DeleteApplicationRequest} The clone.
 */
proto.api.DeleteApplicationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.DeleteApplicationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.api.DeleteApplicationRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.DeleteApplicationRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListApplicationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ListApplicationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListApplicationRequest.displayName = 'proto.api.ListApplicationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListApplicationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListApplicationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListApplicationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListApplicationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: msg.getLimit(),
    offset: msg.getOffset(),
    organizationId: msg.getOrganizationId(),
    search: msg.getSearch()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListApplicationRequest}
 */
proto.api.ListApplicationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListApplicationRequest;
  return proto.api.ListApplicationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListApplicationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListApplicationRequest}
 */
proto.api.ListApplicationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrganizationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListApplicationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListApplicationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListApplicationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListApplicationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getOrganizationId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = this.getSearch();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListApplicationRequest} The clone.
 */
proto.api.ListApplicationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListApplicationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.api.ListApplicationRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ListApplicationRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.api.ListApplicationRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.api.ListApplicationRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 organization_id = 3;
 * @return {number}
 */
proto.api.ListApplicationRequest.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.api.ListApplicationRequest.prototype.setOrganizationId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string search = 4;
 * @return {string}
 */
proto.api.ListApplicationRequest.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.api.ListApplicationRequest.prototype.setSearch = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListApplicationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ListApplicationResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ListApplicationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListApplicationResponse.displayName = 'proto.api.ListApplicationResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ListApplicationResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListApplicationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListApplicationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListApplicationResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListApplicationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalCount: msg.getTotalCount(),
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.api.ApplicationListItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListApplicationResponse}
 */
proto.api.ListApplicationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListApplicationResponse;
  return proto.api.ListApplicationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListApplicationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListApplicationResponse}
 */
proto.api.ListApplicationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalCount(value);
      break;
    case 2:
      var value = new proto.api.ApplicationListItem;
      reader.readMessage(value,proto.api.ApplicationListItem.deserializeBinaryFromReader);
      msg.getResultList().push(value);
      msg.setResultList(msg.getResultList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListApplicationResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListApplicationResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListApplicationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListApplicationResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.ApplicationListItem.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListApplicationResponse} The clone.
 */
proto.api.ListApplicationResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListApplicationResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 total_count = 1;
 * @return {number}
 */
proto.api.ListApplicationResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ListApplicationResponse.prototype.setTotalCount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated ApplicationListItem result = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.api.ApplicationListItem>}
 */
proto.api.ListApplicationResponse.prototype.getResultList = function() {
  return /** @type{!Array.<!proto.api.ApplicationListItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.ApplicationListItem, 2));
};


/** @param {Array.<!proto.api.ApplicationListItem>} value  */
proto.api.ListApplicationResponse.prototype.setResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.api.ListApplicationResponse.prototype.clearResultList = function() {
  this.setResultList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.HTTPIntegrationHeader = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.HTTPIntegrationHeader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.HTTPIntegrationHeader.displayName = 'proto.api.HTTPIntegrationHeader';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.HTTPIntegrationHeader.prototype.toObject = function(opt_includeInstance) {
  return proto.api.HTTPIntegrationHeader.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.HTTPIntegrationHeader} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.HTTPIntegrationHeader.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: msg.getKey(),
    value: msg.getValue()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.HTTPIntegrationHeader}
 */
proto.api.HTTPIntegrationHeader.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.HTTPIntegrationHeader;
  return proto.api.HTTPIntegrationHeader.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.HTTPIntegrationHeader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.HTTPIntegrationHeader}
 */
proto.api.HTTPIntegrationHeader.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.HTTPIntegrationHeader} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.HTTPIntegrationHeader.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.HTTPIntegrationHeader.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.HTTPIntegrationHeader.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.HTTPIntegrationHeader} The clone.
 */
proto.api.HTTPIntegrationHeader.prototype.cloneMessage = function() {
  return /** @type {!proto.api.HTTPIntegrationHeader} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.api.HTTPIntegrationHeader.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.HTTPIntegrationHeader.prototype.setKey = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.api.HTTPIntegrationHeader.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.HTTPIntegrationHeader.prototype.setValue = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.HTTPIntegration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.HTTPIntegration.repeatedFields_, null);
};
goog.inherits(proto.api.HTTPIntegration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.HTTPIntegration.displayName = 'proto.api.HTTPIntegration';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.HTTPIntegration.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.HTTPIntegration.prototype.toObject = function(opt_includeInstance) {
  return proto.api.HTTPIntegration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.HTTPIntegration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.HTTPIntegration.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: msg.getApplicationId(),
    headersList: jspb.Message.toObjectList(msg.getHeadersList(),
    proto.api.HTTPIntegrationHeader.toObject, includeInstance),
    uplinkDataUrl: msg.getUplinkDataUrl(),
    joinNotificationUrl: msg.getJoinNotificationUrl(),
    ackNotificationUrl: msg.getAckNotificationUrl(),
    errorNotificationUrl: msg.getErrorNotificationUrl(),
    statusNotificationUrl: msg.getStatusNotificationUrl(),
    locationNotificationUrl: msg.getLocationNotificationUrl()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.HTTPIntegration}
 */
proto.api.HTTPIntegration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.HTTPIntegration;
  return proto.api.HTTPIntegration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.HTTPIntegration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.HTTPIntegration}
 */
proto.api.HTTPIntegration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 2:
      var value = new proto.api.HTTPIntegrationHeader;
      reader.readMessage(value,proto.api.HTTPIntegrationHeader.deserializeBinaryFromReader);
      msg.getHeadersList().push(value);
      msg.setHeadersList(msg.getHeadersList());
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUplinkDataUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setJoinNotificationUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAckNotificationUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorNotificationUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusNotificationUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationNotificationUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.HTTPIntegration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.HTTPIntegration.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.HTTPIntegration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.HTTPIntegration.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.HTTPIntegrationHeader.serializeBinaryToWriter
    );
  }
  f = this.getUplinkDataUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getJoinNotificationUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getAckNotificationUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getErrorNotificationUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getStatusNotificationUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getLocationNotificationUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.HTTPIntegration} The clone.
 */
proto.api.HTTPIntegration.prototype.cloneMessage = function() {
  return /** @type {!proto.api.HTTPIntegration} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.api.HTTPIntegration.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.HTTPIntegration.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated HTTPIntegrationHeader headers = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.api.HTTPIntegrationHeader>}
 */
proto.api.HTTPIntegration.prototype.getHeadersList = function() {
  return /** @type{!Array.<!proto.api.HTTPIntegrationHeader>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.HTTPIntegrationHeader, 2));
};


/** @param {Array.<!proto.api.HTTPIntegrationHeader>} value  */
proto.api.HTTPIntegration.prototype.setHeadersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.api.HTTPIntegration.prototype.clearHeadersList = function() {
  this.setHeadersList([]);
};


/**
 * optional string uplink_data_url = 3;
 * @return {string}
 */
proto.api.HTTPIntegration.prototype.getUplinkDataUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.HTTPIntegration.prototype.setUplinkDataUrl = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string join_notification_url = 4;
 * @return {string}
 */
proto.api.HTTPIntegration.prototype.getJoinNotificationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.api.HTTPIntegration.prototype.setJoinNotificationUrl = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string ack_notification_url = 5;
 * @return {string}
 */
proto.api.HTTPIntegration.prototype.getAckNotificationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.HTTPIntegration.prototype.setAckNotificationUrl = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string error_notification_url = 6;
 * @return {string}
 */
proto.api.HTTPIntegration.prototype.getErrorNotificationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.api.HTTPIntegration.prototype.setErrorNotificationUrl = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string status_notification_url = 7;
 * @return {string}
 */
proto.api.HTTPIntegration.prototype.getStatusNotificationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.api.HTTPIntegration.prototype.setStatusNotificationUrl = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string location_notification_url = 8;
 * @return {string}
 */
proto.api.HTTPIntegration.prototype.getLocationNotificationUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.api.HTTPIntegration.prototype.setLocationNotificationUrl = function(value) {
  jspb.Message.setField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CreateHTTPIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.CreateHTTPIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CreateHTTPIntegrationRequest.displayName = 'proto.api.CreateHTTPIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CreateHTTPIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CreateHTTPIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CreateHTTPIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.CreateHTTPIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    integration: (f = msg.getIntegration()) && proto.api.HTTPIntegration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CreateHTTPIntegrationRequest}
 */
proto.api.CreateHTTPIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CreateHTTPIntegrationRequest;
  return proto.api.CreateHTTPIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CreateHTTPIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CreateHTTPIntegrationRequest}
 */
proto.api.CreateHTTPIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.HTTPIntegration;
      reader.readMessage(value,proto.api.HTTPIntegration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.CreateHTTPIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateHTTPIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CreateHTTPIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateHTTPIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIntegration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.HTTPIntegration.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.CreateHTTPIntegrationRequest} The clone.
 */
proto.api.CreateHTTPIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.CreateHTTPIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional HTTPIntegration integration = 1;
 * @return {proto.api.HTTPIntegration}
 */
proto.api.CreateHTTPIntegrationRequest.prototype.getIntegration = function() {
  return /** @type{proto.api.HTTPIntegration} */ (
    jspb.Message.getWrapperField(this, proto.api.HTTPIntegration, 1));
};


/** @param {proto.api.HTTPIntegration|undefined} value  */
proto.api.CreateHTTPIntegrationRequest.prototype.setIntegration = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.CreateHTTPIntegrationRequest.prototype.clearIntegration = function() {
  this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.CreateHTTPIntegrationRequest.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetHTTPIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetHTTPIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetHTTPIntegrationRequest.displayName = 'proto.api.GetHTTPIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetHTTPIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetHTTPIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetHTTPIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetHTTPIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: msg.getApplicationId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetHTTPIntegrationRequest}
 */
proto.api.GetHTTPIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetHTTPIntegrationRequest;
  return proto.api.GetHTTPIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetHTTPIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetHTTPIntegrationRequest}
 */
proto.api.GetHTTPIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetHTTPIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetHTTPIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetHTTPIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetHTTPIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetHTTPIntegrationRequest} The clone.
 */
proto.api.GetHTTPIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetHTTPIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.api.GetHTTPIntegrationRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.GetHTTPIntegrationRequest.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetHTTPIntegrationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetHTTPIntegrationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetHTTPIntegrationResponse.displayName = 'proto.api.GetHTTPIntegrationResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetHTTPIntegrationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetHTTPIntegrationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetHTTPIntegrationResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetHTTPIntegrationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    integration: (f = msg.getIntegration()) && proto.api.HTTPIntegration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetHTTPIntegrationResponse}
 */
proto.api.GetHTTPIntegrationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetHTTPIntegrationResponse;
  return proto.api.GetHTTPIntegrationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetHTTPIntegrationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetHTTPIntegrationResponse}
 */
proto.api.GetHTTPIntegrationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.HTTPIntegration;
      reader.readMessage(value,proto.api.HTTPIntegration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetHTTPIntegrationResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetHTTPIntegrationResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetHTTPIntegrationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetHTTPIntegrationResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIntegration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.HTTPIntegration.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetHTTPIntegrationResponse} The clone.
 */
proto.api.GetHTTPIntegrationResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetHTTPIntegrationResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional HTTPIntegration integration = 1;
 * @return {proto.api.HTTPIntegration}
 */
proto.api.GetHTTPIntegrationResponse.prototype.getIntegration = function() {
  return /** @type{proto.api.HTTPIntegration} */ (
    jspb.Message.getWrapperField(this, proto.api.HTTPIntegration, 1));
};


/** @param {proto.api.HTTPIntegration|undefined} value  */
proto.api.GetHTTPIntegrationResponse.prototype.setIntegration = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.GetHTTPIntegrationResponse.prototype.clearIntegration = function() {
  this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.GetHTTPIntegrationResponse.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UpdateHTTPIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.UpdateHTTPIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.UpdateHTTPIntegrationRequest.displayName = 'proto.api.UpdateHTTPIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UpdateHTTPIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UpdateHTTPIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UpdateHTTPIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.UpdateHTTPIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    integration: (f = msg.getIntegration()) && proto.api.HTTPIntegration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UpdateHTTPIntegrationRequest}
 */
proto.api.UpdateHTTPIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UpdateHTTPIntegrationRequest;
  return proto.api.UpdateHTTPIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UpdateHTTPIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UpdateHTTPIntegrationRequest}
 */
proto.api.UpdateHTTPIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.HTTPIntegration;
      reader.readMessage(value,proto.api.HTTPIntegration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.UpdateHTTPIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UpdateHTTPIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UpdateHTTPIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UpdateHTTPIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIntegration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.HTTPIntegration.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.UpdateHTTPIntegrationRequest} The clone.
 */
proto.api.UpdateHTTPIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.UpdateHTTPIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional HTTPIntegration integration = 1;
 * @return {proto.api.HTTPIntegration}
 */
proto.api.UpdateHTTPIntegrationRequest.prototype.getIntegration = function() {
  return /** @type{proto.api.HTTPIntegration} */ (
    jspb.Message.getWrapperField(this, proto.api.HTTPIntegration, 1));
};


/** @param {proto.api.HTTPIntegration|undefined} value  */
proto.api.UpdateHTTPIntegrationRequest.prototype.setIntegration = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.UpdateHTTPIntegrationRequest.prototype.clearIntegration = function() {
  this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.UpdateHTTPIntegrationRequest.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DeleteHTTPIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DeleteHTTPIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DeleteHTTPIntegrationRequest.displayName = 'proto.api.DeleteHTTPIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DeleteHTTPIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DeleteHTTPIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DeleteHTTPIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.DeleteHTTPIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: msg.getApplicationId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DeleteHTTPIntegrationRequest}
 */
proto.api.DeleteHTTPIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DeleteHTTPIntegrationRequest;
  return proto.api.DeleteHTTPIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DeleteHTTPIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DeleteHTTPIntegrationRequest}
 */
proto.api.DeleteHTTPIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.DeleteHTTPIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteHTTPIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DeleteHTTPIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteHTTPIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.DeleteHTTPIntegrationRequest} The clone.
 */
proto.api.DeleteHTTPIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.DeleteHTTPIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.api.DeleteHTTPIntegrationRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.DeleteHTTPIntegrationRequest.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ListIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListIntegrationRequest.displayName = 'proto.api.ListIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: msg.getApplicationId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListIntegrationRequest}
 */
proto.api.ListIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListIntegrationRequest;
  return proto.api.ListIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListIntegrationRequest}
 */
proto.api.ListIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListIntegrationRequest} The clone.
 */
proto.api.ListIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.api.ListIntegrationRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ListIntegrationRequest.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.IntegrationListItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.IntegrationListItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.IntegrationListItem.displayName = 'proto.api.IntegrationListItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.IntegrationListItem.prototype.toObject = function(opt_includeInstance) {
  return proto.api.IntegrationListItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.IntegrationListItem} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.IntegrationListItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: msg.getKind()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.IntegrationListItem}
 */
proto.api.IntegrationListItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.IntegrationListItem;
  return proto.api.IntegrationListItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.IntegrationListItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.IntegrationListItem}
 */
proto.api.IntegrationListItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api.IntegrationKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.IntegrationListItem} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.IntegrationListItem.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.IntegrationListItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.IntegrationListItem.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.IntegrationListItem} The clone.
 */
proto.api.IntegrationListItem.prototype.cloneMessage = function() {
  return /** @type {!proto.api.IntegrationListItem} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional IntegrationKind kind = 1;
 * @return {!proto.api.IntegrationKind}
 */
proto.api.IntegrationListItem.prototype.getKind = function() {
  return /** @type {!proto.api.IntegrationKind} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.api.IntegrationKind} value  */
proto.api.IntegrationListItem.prototype.setKind = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListIntegrationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ListIntegrationResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ListIntegrationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListIntegrationResponse.displayName = 'proto.api.ListIntegrationResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ListIntegrationResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListIntegrationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListIntegrationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListIntegrationResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListIntegrationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalCount: msg.getTotalCount(),
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.api.IntegrationListItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListIntegrationResponse}
 */
proto.api.ListIntegrationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListIntegrationResponse;
  return proto.api.ListIntegrationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListIntegrationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListIntegrationResponse}
 */
proto.api.ListIntegrationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalCount(value);
      break;
    case 2:
      var value = new proto.api.IntegrationListItem;
      reader.readMessage(value,proto.api.IntegrationListItem.deserializeBinaryFromReader);
      msg.getResultList().push(value);
      msg.setResultList(msg.getResultList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListIntegrationResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListIntegrationResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListIntegrationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListIntegrationResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.IntegrationListItem.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListIntegrationResponse} The clone.
 */
proto.api.ListIntegrationResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListIntegrationResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 total_count = 1;
 * @return {number}
 */
proto.api.ListIntegrationResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ListIntegrationResponse.prototype.setTotalCount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated IntegrationListItem result = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.api.IntegrationListItem>}
 */
proto.api.ListIntegrationResponse.prototype.getResultList = function() {
  return /** @type{!Array.<!proto.api.IntegrationListItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.IntegrationListItem, 2));
};


/** @param {Array.<!proto.api.IntegrationListItem>} value  */
proto.api.ListIntegrationResponse.prototype.setResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.api.ListIntegrationResponse.prototype.clearResultList = function() {
  this.setResultList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.InfluxDBIntegration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.InfluxDBIntegration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.InfluxDBIntegration.displayName = 'proto.api.InfluxDBIntegration';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.InfluxDBIntegration.prototype.toObject = function(opt_includeInstance) {
  return proto.api.InfluxDBIntegration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.InfluxDBIntegration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.InfluxDBIntegration.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: msg.getApplicationId(),
    endpoint: msg.getEndpoint(),
    db: msg.getDb(),
    username: msg.getUsername(),
    password: msg.getPassword(),
    retentionPolicyName: msg.getRetentionPolicyName(),
    precision: msg.getPrecision()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.InfluxDBIntegration}
 */
proto.api.InfluxDBIntegration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.InfluxDBIntegration;
  return proto.api.InfluxDBIntegration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.InfluxDBIntegration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.InfluxDBIntegration}
 */
proto.api.InfluxDBIntegration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRetentionPolicyName(value);
      break;
    case 7:
      var value = /** @type {!proto.api.InfluxDBPrecision} */ (reader.readEnum());
      msg.setPrecision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.InfluxDBIntegration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.InfluxDBIntegration.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.InfluxDBIntegration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.InfluxDBIntegration.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getDb();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getUsername();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getRetentionPolicyName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getPrecision();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.InfluxDBIntegration} The clone.
 */
proto.api.InfluxDBIntegration.prototype.cloneMessage = function() {
  return /** @type {!proto.api.InfluxDBIntegration} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.api.InfluxDBIntegration.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.InfluxDBIntegration.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string endpoint = 2;
 * @return {string}
 */
proto.api.InfluxDBIntegration.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.InfluxDBIntegration.prototype.setEndpoint = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string db = 3;
 * @return {string}
 */
proto.api.InfluxDBIntegration.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.InfluxDBIntegration.prototype.setDb = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string username = 4;
 * @return {string}
 */
proto.api.InfluxDBIntegration.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.api.InfluxDBIntegration.prototype.setUsername = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.api.InfluxDBIntegration.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.InfluxDBIntegration.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string retention_policy_name = 6;
 * @return {string}
 */
proto.api.InfluxDBIntegration.prototype.getRetentionPolicyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.api.InfluxDBIntegration.prototype.setRetentionPolicyName = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional InfluxDBPrecision precision = 7;
 * @return {!proto.api.InfluxDBPrecision}
 */
proto.api.InfluxDBIntegration.prototype.getPrecision = function() {
  return /** @type {!proto.api.InfluxDBPrecision} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {!proto.api.InfluxDBPrecision} value  */
proto.api.InfluxDBIntegration.prototype.setPrecision = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CreateInfluxDBIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.CreateInfluxDBIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CreateInfluxDBIntegrationRequest.displayName = 'proto.api.CreateInfluxDBIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CreateInfluxDBIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CreateInfluxDBIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CreateInfluxDBIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.CreateInfluxDBIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    integration: (f = msg.getIntegration()) && proto.api.InfluxDBIntegration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CreateInfluxDBIntegrationRequest}
 */
proto.api.CreateInfluxDBIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CreateInfluxDBIntegrationRequest;
  return proto.api.CreateInfluxDBIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CreateInfluxDBIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CreateInfluxDBIntegrationRequest}
 */
proto.api.CreateInfluxDBIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.InfluxDBIntegration;
      reader.readMessage(value,proto.api.InfluxDBIntegration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.CreateInfluxDBIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateInfluxDBIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CreateInfluxDBIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateInfluxDBIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIntegration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.InfluxDBIntegration.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.CreateInfluxDBIntegrationRequest} The clone.
 */
proto.api.CreateInfluxDBIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.CreateInfluxDBIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional InfluxDBIntegration integration = 1;
 * @return {proto.api.InfluxDBIntegration}
 */
proto.api.CreateInfluxDBIntegrationRequest.prototype.getIntegration = function() {
  return /** @type{proto.api.InfluxDBIntegration} */ (
    jspb.Message.getWrapperField(this, proto.api.InfluxDBIntegration, 1));
};


/** @param {proto.api.InfluxDBIntegration|undefined} value  */
proto.api.CreateInfluxDBIntegrationRequest.prototype.setIntegration = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.CreateInfluxDBIntegrationRequest.prototype.clearIntegration = function() {
  this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.CreateInfluxDBIntegrationRequest.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetInfluxDBIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetInfluxDBIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetInfluxDBIntegrationRequest.displayName = 'proto.api.GetInfluxDBIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetInfluxDBIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetInfluxDBIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetInfluxDBIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetInfluxDBIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: msg.getApplicationId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetInfluxDBIntegrationRequest}
 */
proto.api.GetInfluxDBIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetInfluxDBIntegrationRequest;
  return proto.api.GetInfluxDBIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetInfluxDBIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetInfluxDBIntegrationRequest}
 */
proto.api.GetInfluxDBIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetInfluxDBIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetInfluxDBIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetInfluxDBIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetInfluxDBIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetInfluxDBIntegrationRequest} The clone.
 */
proto.api.GetInfluxDBIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetInfluxDBIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.api.GetInfluxDBIntegrationRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.GetInfluxDBIntegrationRequest.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetInfluxDBIntegrationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetInfluxDBIntegrationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetInfluxDBIntegrationResponse.displayName = 'proto.api.GetInfluxDBIntegrationResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetInfluxDBIntegrationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetInfluxDBIntegrationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetInfluxDBIntegrationResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetInfluxDBIntegrationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    integration: (f = msg.getIntegration()) && proto.api.InfluxDBIntegration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetInfluxDBIntegrationResponse}
 */
proto.api.GetInfluxDBIntegrationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetInfluxDBIntegrationResponse;
  return proto.api.GetInfluxDBIntegrationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetInfluxDBIntegrationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetInfluxDBIntegrationResponse}
 */
proto.api.GetInfluxDBIntegrationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.InfluxDBIntegration;
      reader.readMessage(value,proto.api.InfluxDBIntegration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetInfluxDBIntegrationResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetInfluxDBIntegrationResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetInfluxDBIntegrationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetInfluxDBIntegrationResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIntegration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.InfluxDBIntegration.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetInfluxDBIntegrationResponse} The clone.
 */
proto.api.GetInfluxDBIntegrationResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetInfluxDBIntegrationResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional InfluxDBIntegration integration = 1;
 * @return {proto.api.InfluxDBIntegration}
 */
proto.api.GetInfluxDBIntegrationResponse.prototype.getIntegration = function() {
  return /** @type{proto.api.InfluxDBIntegration} */ (
    jspb.Message.getWrapperField(this, proto.api.InfluxDBIntegration, 1));
};


/** @param {proto.api.InfluxDBIntegration|undefined} value  */
proto.api.GetInfluxDBIntegrationResponse.prototype.setIntegration = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.GetInfluxDBIntegrationResponse.prototype.clearIntegration = function() {
  this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.GetInfluxDBIntegrationResponse.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UpdateInfluxDBIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.UpdateInfluxDBIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.UpdateInfluxDBIntegrationRequest.displayName = 'proto.api.UpdateInfluxDBIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UpdateInfluxDBIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UpdateInfluxDBIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UpdateInfluxDBIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.UpdateInfluxDBIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    integration: (f = msg.getIntegration()) && proto.api.InfluxDBIntegration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UpdateInfluxDBIntegrationRequest}
 */
proto.api.UpdateInfluxDBIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UpdateInfluxDBIntegrationRequest;
  return proto.api.UpdateInfluxDBIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UpdateInfluxDBIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UpdateInfluxDBIntegrationRequest}
 */
proto.api.UpdateInfluxDBIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.InfluxDBIntegration;
      reader.readMessage(value,proto.api.InfluxDBIntegration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.UpdateInfluxDBIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UpdateInfluxDBIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UpdateInfluxDBIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UpdateInfluxDBIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIntegration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.InfluxDBIntegration.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.UpdateInfluxDBIntegrationRequest} The clone.
 */
proto.api.UpdateInfluxDBIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.UpdateInfluxDBIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional InfluxDBIntegration integration = 1;
 * @return {proto.api.InfluxDBIntegration}
 */
proto.api.UpdateInfluxDBIntegrationRequest.prototype.getIntegration = function() {
  return /** @type{proto.api.InfluxDBIntegration} */ (
    jspb.Message.getWrapperField(this, proto.api.InfluxDBIntegration, 1));
};


/** @param {proto.api.InfluxDBIntegration|undefined} value  */
proto.api.UpdateInfluxDBIntegrationRequest.prototype.setIntegration = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.UpdateInfluxDBIntegrationRequest.prototype.clearIntegration = function() {
  this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.UpdateInfluxDBIntegrationRequest.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DeleteInfluxDBIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DeleteInfluxDBIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DeleteInfluxDBIntegrationRequest.displayName = 'proto.api.DeleteInfluxDBIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DeleteInfluxDBIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DeleteInfluxDBIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DeleteInfluxDBIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.DeleteInfluxDBIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: msg.getApplicationId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DeleteInfluxDBIntegrationRequest}
 */
proto.api.DeleteInfluxDBIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DeleteInfluxDBIntegrationRequest;
  return proto.api.DeleteInfluxDBIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DeleteInfluxDBIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DeleteInfluxDBIntegrationRequest}
 */
proto.api.DeleteInfluxDBIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.DeleteInfluxDBIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteInfluxDBIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DeleteInfluxDBIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteInfluxDBIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.DeleteInfluxDBIntegrationRequest} The clone.
 */
proto.api.DeleteInfluxDBIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.DeleteInfluxDBIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.api.DeleteInfluxDBIntegrationRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.DeleteInfluxDBIntegrationRequest.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ThingsBoardIntegration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ThingsBoardIntegration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ThingsBoardIntegration.displayName = 'proto.api.ThingsBoardIntegration';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ThingsBoardIntegration.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ThingsBoardIntegration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ThingsBoardIntegration} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ThingsBoardIntegration.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: msg.getApplicationId(),
    server: msg.getServer()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ThingsBoardIntegration}
 */
proto.api.ThingsBoardIntegration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ThingsBoardIntegration;
  return proto.api.ThingsBoardIntegration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ThingsBoardIntegration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ThingsBoardIntegration}
 */
proto.api.ThingsBoardIntegration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setServer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ThingsBoardIntegration} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ThingsBoardIntegration.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ThingsBoardIntegration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ThingsBoardIntegration.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getServer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ThingsBoardIntegration} The clone.
 */
proto.api.ThingsBoardIntegration.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ThingsBoardIntegration} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.api.ThingsBoardIntegration.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ThingsBoardIntegration.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string server = 2;
 * @return {string}
 */
proto.api.ThingsBoardIntegration.prototype.getServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.ThingsBoardIntegration.prototype.setServer = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CreateThingsBoardIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.CreateThingsBoardIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CreateThingsBoardIntegrationRequest.displayName = 'proto.api.CreateThingsBoardIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CreateThingsBoardIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CreateThingsBoardIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CreateThingsBoardIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.CreateThingsBoardIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    integration: (f = msg.getIntegration()) && proto.api.ThingsBoardIntegration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CreateThingsBoardIntegrationRequest}
 */
proto.api.CreateThingsBoardIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CreateThingsBoardIntegrationRequest;
  return proto.api.CreateThingsBoardIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CreateThingsBoardIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CreateThingsBoardIntegrationRequest}
 */
proto.api.CreateThingsBoardIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.ThingsBoardIntegration;
      reader.readMessage(value,proto.api.ThingsBoardIntegration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.CreateThingsBoardIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateThingsBoardIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CreateThingsBoardIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateThingsBoardIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIntegration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.ThingsBoardIntegration.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.CreateThingsBoardIntegrationRequest} The clone.
 */
proto.api.CreateThingsBoardIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.CreateThingsBoardIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional ThingsBoardIntegration integration = 1;
 * @return {proto.api.ThingsBoardIntegration}
 */
proto.api.CreateThingsBoardIntegrationRequest.prototype.getIntegration = function() {
  return /** @type{proto.api.ThingsBoardIntegration} */ (
    jspb.Message.getWrapperField(this, proto.api.ThingsBoardIntegration, 1));
};


/** @param {proto.api.ThingsBoardIntegration|undefined} value  */
proto.api.CreateThingsBoardIntegrationRequest.prototype.setIntegration = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.CreateThingsBoardIntegrationRequest.prototype.clearIntegration = function() {
  this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.CreateThingsBoardIntegrationRequest.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetThingsBoardIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetThingsBoardIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetThingsBoardIntegrationRequest.displayName = 'proto.api.GetThingsBoardIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetThingsBoardIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetThingsBoardIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetThingsBoardIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetThingsBoardIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: msg.getApplicationId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetThingsBoardIntegrationRequest}
 */
proto.api.GetThingsBoardIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetThingsBoardIntegrationRequest;
  return proto.api.GetThingsBoardIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetThingsBoardIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetThingsBoardIntegrationRequest}
 */
proto.api.GetThingsBoardIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetThingsBoardIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetThingsBoardIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetThingsBoardIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetThingsBoardIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetThingsBoardIntegrationRequest} The clone.
 */
proto.api.GetThingsBoardIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetThingsBoardIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.api.GetThingsBoardIntegrationRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.GetThingsBoardIntegrationRequest.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetThingsBoardIntegrationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetThingsBoardIntegrationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetThingsBoardIntegrationResponse.displayName = 'proto.api.GetThingsBoardIntegrationResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetThingsBoardIntegrationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetThingsBoardIntegrationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetThingsBoardIntegrationResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetThingsBoardIntegrationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    integration: (f = msg.getIntegration()) && proto.api.ThingsBoardIntegration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetThingsBoardIntegrationResponse}
 */
proto.api.GetThingsBoardIntegrationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetThingsBoardIntegrationResponse;
  return proto.api.GetThingsBoardIntegrationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetThingsBoardIntegrationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetThingsBoardIntegrationResponse}
 */
proto.api.GetThingsBoardIntegrationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.ThingsBoardIntegration;
      reader.readMessage(value,proto.api.ThingsBoardIntegration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetThingsBoardIntegrationResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetThingsBoardIntegrationResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetThingsBoardIntegrationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetThingsBoardIntegrationResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIntegration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.ThingsBoardIntegration.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetThingsBoardIntegrationResponse} The clone.
 */
proto.api.GetThingsBoardIntegrationResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetThingsBoardIntegrationResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional ThingsBoardIntegration integration = 1;
 * @return {proto.api.ThingsBoardIntegration}
 */
proto.api.GetThingsBoardIntegrationResponse.prototype.getIntegration = function() {
  return /** @type{proto.api.ThingsBoardIntegration} */ (
    jspb.Message.getWrapperField(this, proto.api.ThingsBoardIntegration, 1));
};


/** @param {proto.api.ThingsBoardIntegration|undefined} value  */
proto.api.GetThingsBoardIntegrationResponse.prototype.setIntegration = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.GetThingsBoardIntegrationResponse.prototype.clearIntegration = function() {
  this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.GetThingsBoardIntegrationResponse.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UpdateThingsBoardIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.UpdateThingsBoardIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.UpdateThingsBoardIntegrationRequest.displayName = 'proto.api.UpdateThingsBoardIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UpdateThingsBoardIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UpdateThingsBoardIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UpdateThingsBoardIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.UpdateThingsBoardIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    integration: (f = msg.getIntegration()) && proto.api.ThingsBoardIntegration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UpdateThingsBoardIntegrationRequest}
 */
proto.api.UpdateThingsBoardIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UpdateThingsBoardIntegrationRequest;
  return proto.api.UpdateThingsBoardIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UpdateThingsBoardIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UpdateThingsBoardIntegrationRequest}
 */
proto.api.UpdateThingsBoardIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.ThingsBoardIntegration;
      reader.readMessage(value,proto.api.ThingsBoardIntegration.deserializeBinaryFromReader);
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.UpdateThingsBoardIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UpdateThingsBoardIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UpdateThingsBoardIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.UpdateThingsBoardIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIntegration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.ThingsBoardIntegration.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.UpdateThingsBoardIntegrationRequest} The clone.
 */
proto.api.UpdateThingsBoardIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.UpdateThingsBoardIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional ThingsBoardIntegration integration = 1;
 * @return {proto.api.ThingsBoardIntegration}
 */
proto.api.UpdateThingsBoardIntegrationRequest.prototype.getIntegration = function() {
  return /** @type{proto.api.ThingsBoardIntegration} */ (
    jspb.Message.getWrapperField(this, proto.api.ThingsBoardIntegration, 1));
};


/** @param {proto.api.ThingsBoardIntegration|undefined} value  */
proto.api.UpdateThingsBoardIntegrationRequest.prototype.setIntegration = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.UpdateThingsBoardIntegrationRequest.prototype.clearIntegration = function() {
  this.setIntegration(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.UpdateThingsBoardIntegrationRequest.prototype.hasIntegration = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DeleteThingsBoardIntegrationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DeleteThingsBoardIntegrationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DeleteThingsBoardIntegrationRequest.displayName = 'proto.api.DeleteThingsBoardIntegrationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DeleteThingsBoardIntegrationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DeleteThingsBoardIntegrationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DeleteThingsBoardIntegrationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.DeleteThingsBoardIntegrationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: msg.getApplicationId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DeleteThingsBoardIntegrationRequest}
 */
proto.api.DeleteThingsBoardIntegrationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DeleteThingsBoardIntegrationRequest;
  return proto.api.DeleteThingsBoardIntegrationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DeleteThingsBoardIntegrationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DeleteThingsBoardIntegrationRequest}
 */
proto.api.DeleteThingsBoardIntegrationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.DeleteThingsBoardIntegrationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteThingsBoardIntegrationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DeleteThingsBoardIntegrationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteThingsBoardIntegrationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.DeleteThingsBoardIntegrationRequest} The clone.
 */
proto.api.DeleteThingsBoardIntegrationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.DeleteThingsBoardIntegrationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.api.DeleteThingsBoardIntegrationRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.DeleteThingsBoardIntegrationRequest.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.api.IntegrationKind = {
  HTTP: 0,
  INFLUXDB: 1,
  THINGSBOARD: 2
};

/**
 * @enum {number}
 */
proto.api.InfluxDBPrecision = {
  NS: 0,
  U: 1,
  MS: 2,
  S: 3,
  M: 4,
  H: 5
};

goog.object.extend(exports, proto.api);
